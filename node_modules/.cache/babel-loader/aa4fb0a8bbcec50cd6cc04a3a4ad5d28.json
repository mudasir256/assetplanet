{"ast":null,"code":"import _classCallCheck from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _slicedToArray from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/src/pages/client_info/return_rates/ReturnRatesNew.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Icon } from 'antd';\nimport ImageIcon from 'assets/images/asset.png';\nimport AssetPlanet from 'assets/images/asset-planet-logo.jpg';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { QL_RATES_OF_RETURN_ADD, QL_RATES_OF_RETURN_UPDATE, QL_RATES_OF_RETURN_GET } from '../../../constants/queries';\nimport { FormPagePose } from '../../../components/Animations';\nimport StaticSubForm from './subforms/StaticSubForm';\nimport QuestionPredictionSubForm from './subforms/QuestionPredictionSubForm';\nimport ChoosePredictionSubForm from './subforms/ChoosePredictionSubForm';\nimport QuestionOwnRateSubForm from './subforms/QuestionOwnRateSubForm';\nimport UserDefinedSubForm from './subforms/UserDefinedSubForm';\nimport QuestionMonteCarloSubForm from './subforms/QuestionMonteCarloSubForm';\nimport MonteCarloSubForm from './subforms/MonteCarloSubForm';\nimport EndSubForm from './subforms/EndSubForm';\nvar fnMutationRatesOfReturnAdd = null;\nvar dataMutationRatesOfReturnAdd = null;\nvar fnMutationRatesOfReturnUpdate = null;\nvar dataMutationRatesOfReturnUpdate = null;\nvar prevPos = 0;\nfunction HiddenHook() {\n  var _useMutation = useMutation(QL_RATES_OF_RETURN_ADD);\n  var _useMutation2 = _slicedToArray(_useMutation, 2);\n  fnMutationRatesOfReturnAdd = _useMutation2[0];\n  dataMutationRatesOfReturnAdd = _useMutation2[1].dataMutationRatesOfReturnAdd;\n  var _useMutation3 = useMutation(QL_RATES_OF_RETURN_UPDATE);\n  var _useMutation4 = _slicedToArray(_useMutation3, 2);\n  fnMutationRatesOfReturnUpdate = _useMutation4[0];\n  dataMutationRatesOfReturnUpdate = _useMutation4[1].dataMutationRatesOfReturnUpdate;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  });\n}\nfunction convertDB2FormData(data) {\n  console.log('readData:', data);\n  var formData = [];\n  formData.push({\n    id: 'StaticSubForm',\n    data: StaticSubForm.FnCreateFormData({\n      static: data['ratesOfReturn']['ratesOfReturn']['static']\n    }),\n    visible: true\n  });\n  formData.push({\n    id: 'ChoosePredictionSubForm',\n    data: ChoosePredictionSubForm.FnCreateFormData({\n      prediction: data['ratesOfReturn']['ratesOfReturn']['professionalPrediction']\n    }),\n    visible: true\n  });\n  formData.push({\n    id: 'UserDefinedSubForm',\n    data: {\n      title: 'User Defined Return',\n      data: data['ratesOfReturn']['userDefinedRateOfReturns']\n    },\n    visible: false\n  });\n  formData.push({\n    id: 'MonteCarloSubForm',\n    data: {\n      title: 'Monte Carlo Rate of  Return',\n      data: data['ratesOfReturn']['monteCarloRateOfReturns']\n    },\n    visible: false\n  });\n  return formData;\n}\nfunction LoadDBDataHook(props) {\n  if (props.dbID != null && props.dbID != '') {\n    var _useQuery = useQuery(QL_RATES_OF_RETURN_GET, {\n        variables: {\n          id: props.dbID\n        }\n      }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n    if (data) {\n      console.log('call..');\n      props.cbLoadDBData(convertDB2FormData(data));\n    }\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  });\n}\nvar ReturnRatesNew = /*#__PURE__*/function (_Component) {\n  _inherits(ReturnRatesNew, _Component);\n  function ReturnRatesNew(props) {\n    var _this;\n    _classCallCheck(this, ReturnRatesNew);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReturnRatesNew).call(this, props));\n    _this.toggleRightSide = function (e) {\n      e.preventDefault();\n      _this.setState({\n        isRightSideOpen: !_this.state.isRightSideOpen\n      });\n    };\n    var dbID = null;\n    var dbLoaded = true;\n    var ratesOfReturnID = _this.props.match.params.ratesOfReturnID;\n    if (ratesOfReturnID) {\n      dbID = ratesOfReturnID;\n      dbLoaded = false;\n    }\n    _this.state = {\n      dataID: dbID,\n      curSubFormID: 'StaticSubForm',\n      curSubForm: StaticSubForm,\n      formVisible: false,\n      subFormData: {},\n      formData: [],\n      isRightSideOpen: false,\n      formSteps: [{\n        id: 'StaticSubForm',\n        icon: 'icon_ex.png',\n        title: 'Static Rate of Return'\n      }, {\n        id: 'ChoosePredictionSubForm',\n        icon: 'icon_ex.png',\n        title: 'Professional Prediction'\n      }, {\n        id: 'UserDefinedSubForm',\n        icon: 'icon_ex.png',\n        title: 'User Defined'\n      }, {\n        id: 'MonteCarloSubForm',\n        icon: 'icon_ex.png',\n        title: 'Monte Carlo'\n      }],\n      dbLoaded: dbLoaded,\n      dbID: dbID,\n      isEndForm: false\n    };\n    _this.goSubForm = _this.goSubForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateSubForm = _this.updateSubForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSubFormData = _this.getSubFormData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSubFormField = _this.getSubFormField.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createQLVariable = _this.createQLVariable.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSubFormFieldValue = _this.getSubFormFieldValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleRightSide = _this.toggleRightSide.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadDBData = _this.loadDBData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  _createClass(ReturnRatesNew, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.goSubForm(\"StaticSubForm\");\n      // this.goSubForm(\"UserDefinedSubForm\");\n    }\n  }, {\n    key: \"getSubFormField\",\n    value: function getSubFormField(formID, fieldID) {\n      var formData = this.state.formData;\n      for (var index = 0; index < formData.length; index++) {\n        if (formData[index]['id'] == formID) {\n          var data = formData[index]['data'];\n          var fields = data['fields'];\n          for (var findex = 0; findex < fields.length; findex++) {\n            if (fields[findex]['id'] == fieldID) {\n              return fields[findex];\n            }\n          }\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"getSubFormFieldValue\",\n    value: function getSubFormFieldValue(formID, fieldID) {\n      var field = this.getSubFormField(formID, fieldID);\n      if (field == null) {\n        return '';\n      } else {\n        return field.value;\n      }\n    }\n  }, {\n    key: \"createQLVariable\",\n    value: function createQLVariable(subFormID, subFormData) {\n      var varQL = null;\n      switch (subFormID) {\n        case 'StaticSubForm':\n          varQL = {\n            \"ratesOfReturn\": {\n              \"static\": this.getSubFormFieldValue(subFormID, 'static') != '' ? parseInt(this.getSubFormFieldValue(subFormID, 'static')) : 0\n            }\n          };\n          break;\n        case 'QuestionPredictionSubForm':\n          break;\n        case 'ChoosePredictionSubForm':\n          varQL = {\n            \"ratesOfReturn\": {\n              \"professionalPrediction\": this.getSubFormFieldValue(subFormID, 'prediction')\n            }\n          };\n          break;\n        case 'QuestionOwnRateSubForm':\n          break;\n        case 'UserDefinedSubForm':\n          varQL = {\n            \"userDefinedRateOfReturns\": subFormData\n          };\n          break;\n        case 'QuestionMonteCarloSubForm':\n          break;\n        case 'MonteCarloSubForm':\n          varQL = {\n            \"monteCarloRateOfReturns\": subFormData\n          };\n          break;\n        case 'EndSubForm':\n      }\n      return varQL;\n    }\n  }, {\n    key: \"updateSubForm\",\n    value: function updateSubForm(subFormID, subFormData) {\n      var visible = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var formData = this.state.formData;\n      var bFound = false;\n      for (var findex = 0; findex < formData.length; findex++) {\n        if (formData[findex]['id'] == subFormID) {\n          formData[findex]['data'] = subFormData;\n          bFound = true;\n        }\n      }\n      if (!bFound) {\n        formData.push({\n          id: subFormID,\n          data: subFormData,\n          visible: visible\n        });\n      }\n      var varQL = this.createQLVariable(subFormID, subFormData);\n      console.log('varQL:', varQL, ', dataID:', this.state.dataID);\n      var instance = this;\n      if (varQL != null) {\n        if (this.state.dataID == null) {\n          fnMutationRatesOfReturnAdd({\n            variables: {\n              data: varQL\n            }\n          }).then(function (response) {\n            instance.setState({\n              dataID: response['data']['createRatesOfReturn']['ratesOfReturn']['id']\n            });\n          });\n        } else {\n          fnMutationRatesOfReturnUpdate({\n            variables: {\n              id: this.state.dataID,\n              data: varQL\n            }\n          });\n        }\n      }\n      this.setState({\n        formData: formData\n      });\n    }\n  }, {\n    key: \"getSubFormData\",\n    value: function getSubFormData(subFormID) {\n      var fromState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var pformData = arguments.length > 2 ? arguments[2] : undefined;\n      var formData;\n      if (fromState) {\n        formData = this.state.formData;\n      } else {\n        formData = pformData;\n      }\n      for (var findex = 0; findex < formData.length; findex++) {\n        if (formData[findex]['id'] == subFormID) {\n          return formData[findex]['data'];\n        }\n      }\n      return {};\n    }\n  }, {\n    key: \"goSubForm\",\n    value: function goSubForm(subFormID) {\n      var _this2 = this;\n      this.setState({\n        formVisible: false\n      });\n      var nextSubForm = StaticSubForm;\n      var subFormData = this.getSubFormData(subFormID);\n      switch (subFormID) {\n        case 'StaticSubForm':\n          nextSubForm = StaticSubForm;\n          break;\n        case 'QuestionPredictionSubForm':\n          nextSubForm = QuestionPredictionSubForm;\n          break;\n        case 'ChoosePredictionSubForm':\n          nextSubForm = ChoosePredictionSubForm;\n          break;\n        case 'QuestionOwnRateSubForm':\n          nextSubForm = QuestionOwnRateSubForm;\n          break;\n        case 'UserDefinedSubForm':\n          nextSubForm = UserDefinedSubForm;\n          break;\n        case 'QuestionMonteCarloSubForm':\n          nextSubForm = QuestionMonteCarloSubForm;\n          break;\n        case 'MonteCarloSubForm':\n          nextSubForm = MonteCarloSubForm;\n          break;\n        case 'EndSubForm':\n          nextSubForm = EndSubForm;\n          this.setState({\n            isEndForm: true\n          });\n          break;\n      }\n      setTimeout(function () {\n        _this2.setState({\n          formVisible: true,\n          curSubFormID: subFormID,\n          curSubForm: nextSubForm,\n          subFormData: subFormData\n        });\n      }, 100);\n    }\n  }, {\n    key: \"loadDBData\",\n    value: function loadDBData(formData) {\n      console.log('formData:', formData);\n      var instance = this;\n      setTimeout(function () {\n        instance.setState({\n          formVisible: true,\n          dbLoaded: true,\n          formData: formData,\n          subFormData: instance.getSubFormData(instance.state.curSubFormID, false, formData)\n        });\n      }, 100);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var SubForm = this.state.curSubForm;\n      var formpageClassName = 'form-page-container-wrap';\n      if (this.state.isRightSideOpen) {\n        formpageClassName = 'form-page-container-wrap right-side--opend';\n      } else {\n        formpageClassName = 'form-page-container-wrap right-side--collapsed';\n      }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: formpageClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--main-side\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"steps\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logo-container align-items-top justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"img-asset\",\n        src: AssetPlanet,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"process\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"process-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 29\n        }\n      }, this.state.formSteps.map(function (formStep, index) {\n        var elementPos = _this3.state.formSteps.map(function (x) {\n          return x.id;\n        }).indexOf(_this3.state.curSubFormID);\n        var classBtn = 'btn nav-items btn-circle';\n        if (elementPos === -1) {\n          elementPos = prevPos;\n        } else {\n          prevPos = elementPos;\n        }\n        classBtn = elementPos >= index ? 'btn nav-items btn-circle active' : 'btn nav-items btn-circle';\n        if (_this3.state.isEndForm) classBtn = 'btn nav-items btn-circle disabled';\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"process-step\",\n          key: index,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: classBtn,\n          \"data-toggle\": \"tab\",\n          onClick: function onClick() {\n            if (classBtn !== 'btn nav-items btn-circle disabled') _this3.goSubForm(formStep.id);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            fontSize: 30,\n            color: '#006400'\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 53\n          }\n        }, index + 1)), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"step-title\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 49\n          }\n        }, formStep.title));\n      })))), /*#__PURE__*/React.createElement(HiddenHook, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 21\n        }\n      }), !this.state.dbLoaded && /*#__PURE__*/React.createElement(LoadDBDataHook, {\n        dbLoaded: this.state.dbLoaded,\n        dbID: this.state.dbID,\n        cbLoadDBData: this.loadDBData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 21\n        }\n      },\n      /*#__PURE__*/\n      // this.state.dbLoaded && \n      React.createElement(\"div\", {\n        className: \"form-page-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--left-side\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormPagePose, {\n        className: \"info-form-block\",\n        pose: this.state.formVisible ? 'visible' : 'hidden',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(SubForm, {\n        subFormData: this.state.subFormData,\n        cbGoSubForm: this.goSubForm,\n        cbUpdateSubForm: this.updateSubForm,\n        formData: this.state.formData,\n        cbGetSubFormField: this.getSubFormField,\n        cbGoNext: this.goNext,\n        cbGoPrev: this.goPrev,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 41\n        }\n      })))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--right-side\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"right-side-collapse-icon\",\n        onClick: this.toggleRightSide,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fe-menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--right-side-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 21\n        }\n      }, this.state.formData.map(function (subForm, sindex) {\n        if (subForm.visible == false) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: sindex,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 45\n            }\n          });\n        }\n        var subFormData = subForm.data;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-brief-block\",\n          key: sindex,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-brief-top\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          className: \"form-brief-title\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 41\n          }\n        }, subFormData.title), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"form-brief-edit-btn\",\n          onClick: function onClick() {\n            return _this3.goSubForm(subForm.id);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          type: \"edit\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 122\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-brief-content\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 37\n          }\n        }, subFormData.fields && subFormData.fields.map(function (field, ffindex) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-item\",\n            key: ffindex,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 49\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            className: \"form-brief-item-title\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 53\n            }\n          }, field.title != '' ? field.title + \":\" : null, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n            className: \"form-brief-item-value\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 53\n            }\n          }, field.value));\n        })));\n      }))));\n    }\n  }]);\n  return ReturnRatesNew;\n}(Component);\nexport default connect()(ReturnRatesNew);","map":{"version":3,"names":["React","Component","connect","Link","Icon","ImageIcon","AssetPlanet","useMutation","useQuery","QL_RATES_OF_RETURN_ADD","QL_RATES_OF_RETURN_UPDATE","QL_RATES_OF_RETURN_GET","FormPagePose","StaticSubForm","QuestionPredictionSubForm","ChoosePredictionSubForm","QuestionOwnRateSubForm","UserDefinedSubForm","QuestionMonteCarloSubForm","MonteCarloSubForm","EndSubForm","fnMutationRatesOfReturnAdd","dataMutationRatesOfReturnAdd","fnMutationRatesOfReturnUpdate","dataMutationRatesOfReturnUpdate","prevPos","HiddenHook","_useMutation","_useMutation2","_slicedToArray","_useMutation3","_useMutation4","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","convertDB2FormData","data","console","log","formData","push","id","FnCreateFormData","static","visible","prediction","title","LoadDBDataHook","props","dbID","_useQuery","variables","loading","error","cbLoadDBData","ReturnRatesNew","_Component","_inherits","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","toggleRightSide","e","preventDefault","setState","isRightSideOpen","state","dbLoaded","ratesOfReturnID","match","params","dataID","curSubFormID","curSubForm","formVisible","subFormData","formSteps","icon","isEndForm","goSubForm","bind","_assertThisInitialized","updateSubForm","getSubFormData","getSubFormField","createQLVariable","getSubFormFieldValue","loadDBData","_createClass","key","value","componentDidMount","formID","fieldID","index","length","fields","findex","field","subFormID","varQL","parseInt","arguments","undefined","bFound","instance","then","response","fromState","pformData","_this2","nextSubForm","setTimeout","render","_this3","SubForm","formpageClassName","className","src","map","formStep","elementPos","x","indexOf","classBtn","type","onClick","style","fontSize","color","pose","cbGoSubForm","cbUpdateSubForm","cbGetSubFormField","cbGoNext","goNext","cbGoPrev","goPrev","subForm","sindex","ffindex"],"sources":["/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/src/pages/client_info/return_rates/ReturnRatesNew.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Icon } from 'antd';\nimport ImageIcon from 'assets/images/asset.png';\nimport AssetPlanet from 'assets/images/asset-planet-logo.jpg';\n\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport {\n    QL_RATES_OF_RETURN_ADD,\n    QL_RATES_OF_RETURN_UPDATE,\n    QL_RATES_OF_RETURN_GET\n} from '../../../constants/queries';\n\nimport { FormPagePose } from '../../../components/Animations';\nimport StaticSubForm from './subforms/StaticSubForm';\nimport QuestionPredictionSubForm from './subforms/QuestionPredictionSubForm';\nimport ChoosePredictionSubForm from './subforms/ChoosePredictionSubForm';\nimport QuestionOwnRateSubForm from './subforms/QuestionOwnRateSubForm';\nimport UserDefinedSubForm from './subforms/UserDefinedSubForm';\nimport QuestionMonteCarloSubForm from './subforms/QuestionMonteCarloSubForm';\nimport MonteCarloSubForm from './subforms/MonteCarloSubForm';\nimport EndSubForm from './subforms/EndSubForm';\n\nvar fnMutationRatesOfReturnAdd = null;\nvar dataMutationRatesOfReturnAdd = null;\n\nvar fnMutationRatesOfReturnUpdate = null;\nvar dataMutationRatesOfReturnUpdate = null;\nlet prevPos = 0;\n\nfunction HiddenHook(){\n    [fnMutationRatesOfReturnAdd, { dataMutationRatesOfReturnAdd }] = useMutation(QL_RATES_OF_RETURN_ADD);\n    [fnMutationRatesOfReturnUpdate, { dataMutationRatesOfReturnUpdate }] = useMutation(QL_RATES_OF_RETURN_UPDATE);\n\n    return (\n        <React.Fragment></React.Fragment>\n    )\n}\n\nfunction convertDB2FormData(data){\n\n    console.log('readData:', data);\n    let formData = [];\n\n    formData.push({\n        id: 'StaticSubForm',\n        data: StaticSubForm.FnCreateFormData({\n            static: data['ratesOfReturn']['ratesOfReturn']['static']\n        }),\n        visible: true\n    })\n\n  \n\n    formData.push({\n        id: 'ChoosePredictionSubForm',\n        data: ChoosePredictionSubForm.FnCreateFormData({\n            prediction: data['ratesOfReturn']['ratesOfReturn']['professionalPrediction'],\n        }),\n        visible: true\n    })\n\n \n\n    formData.push({\n        id: 'UserDefinedSubForm',\n        data: {\n            title: 'User Defined Return',\n            data: data['ratesOfReturn']['userDefinedRateOfReturns']\n        },\n        visible: false\n    })\n\n \n\n\n    formData.push({\n        id: 'MonteCarloSubForm',\n        data: {\n            title: 'Monte Carlo Rate of  Return',\n            data: data['ratesOfReturn']['monteCarloRateOfReturns']\n        },\n        visible: false\n    })\n\n    return formData;\n}\n\nfunction LoadDBDataHook(props){\n    if(props.dbID != null && props.dbID != ''){\n        const {data, loading, error} = useQuery(QL_RATES_OF_RETURN_GET, { variables: { id: props.dbID} });\n        if(data){\n            console.log('call..');\n            props.cbLoadDBData(convertDB2FormData(data));\n        }\n    }\n    \n    return (\n        <React.Fragment></React.Fragment>\n    )\n}\n\nclass ReturnRatesNew extends Component {\n\n    constructor(props) {\n        super(props);\n\n        let dbID = null;\n        let dbLoaded = true;      \n\n        const { ratesOfReturnID } = this.props.match.params;        \n\n        if( ratesOfReturnID ){\n            dbID = ratesOfReturnID;\n            dbLoaded = false;\n        }\n\n        this.state = {\n            dataID: dbID,\n            curSubFormID: 'StaticSubForm',\n            curSubForm: StaticSubForm,\n            formVisible: false,\n            subFormData: {},\n            formData: [\n  \n            ],\n            isRightSideOpen: false,\n            formSteps: [\n                {\n                    id: 'StaticSubForm',\n                    icon: 'icon_ex.png',\n                    title: 'Static Rate of Return'\n                },\n                {\n                    id: 'ChoosePredictionSubForm',\n                    icon: 'icon_ex.png',\n                    title: 'Professional Prediction'\n                },\n                {\n                    id: 'UserDefinedSubForm',\n                    icon: 'icon_ex.png',\n                    title: 'User Defined'\n                },\n                {\n                    id: 'MonteCarloSubForm',\n                    icon: 'icon_ex.png',\n                    title: 'Monte Carlo'\n                }\n            ],\n            dbLoaded: dbLoaded,\n            dbID: dbID,\n            isEndForm: false\n        }\n\n        this.goSubForm = this.goSubForm.bind(this);\n        this.updateSubForm = this.updateSubForm.bind(this);\n        this.getSubFormData = this.getSubFormData.bind(this);\n        this.getSubFormField = this.getSubFormField.bind(this);\n\n        this.createQLVariable = this.createQLVariable.bind(this);\n        this.getSubFormFieldValue = this.getSubFormFieldValue.bind(this);\n\n        this.toggleRightSide = this.toggleRightSide.bind(this);\n\n        this.loadDBData = this.loadDBData.bind(this);\n    }\n\n    componentDidMount() {\n        this.goSubForm(\"StaticSubForm\");\n        // this.goSubForm(\"UserDefinedSubForm\");\n    }\n\n    getSubFormField(formID, fieldID){\n        let formData = this.state.formData;\n\n        for(var index = 0; index < formData.length; index++){\n            if(formData[index]['id'] == formID){\n                let data = formData[index]['data'];\n                let fields = data['fields'];\n                for(var findex = 0; findex < fields.length; findex++){\n                    if(fields[findex]['id'] == fieldID){\n                        return fields[findex];\n                    }\n                }\n            }\n        }\n\n        return null\n    }\n\n    getSubFormFieldValue(formID, fieldID){\n        let field = this.getSubFormField(formID, fieldID);\n\n        if(field == null){\n            return '';\n        }\n        else{\n            return field.value;\n        }\n    }\n\n    createQLVariable(subFormID, subFormData){\n        let varQL = null;\n\n        switch(subFormID){\n            case 'StaticSubForm': \n                varQL = {\n                    \"ratesOfReturn\" : {\n                        \"static\": this.getSubFormFieldValue(subFormID, 'static') != '' ? parseInt(this.getSubFormFieldValue(subFormID, 'static')) : 0\n                    }\n                };\n                break;\n            case 'QuestionPredictionSubForm': \n                break;\n            case 'ChoosePredictionSubForm':\n                varQL = {\n                    \"ratesOfReturn\" : {\n                        \"professionalPrediction\": this.getSubFormFieldValue(subFormID, 'prediction')\n                    }\n                };\n                break;\n            case 'QuestionOwnRateSubForm':\n                break;\n            case 'UserDefinedSubForm':\n                varQL = {\n                    \"userDefinedRateOfReturns\" : subFormData\n                };\n                break;\n            case 'QuestionMonteCarloSubForm':\n                break;\n            case 'MonteCarloSubForm':\n                varQL = {\n                    \"monteCarloRateOfReturns\" : subFormData\n                };\n                break;\n            case 'EndSubForm':\n                \n        }\n\n        return varQL;\n    }\n    updateSubForm(subFormID, subFormData, visible = true){\n        let formData = this.state.formData;\n\n        var bFound = false;\n        for(var findex = 0; findex < formData.length; findex++){\n            if(formData[findex]['id'] == subFormID){\n                formData[findex]['data'] = subFormData;\n                bFound = true;\n            }\n        }\n\n        if(!bFound){\n            formData.push({\n                id: subFormID,\n                data: subFormData,\n                visible: visible\n            })\n        }\n\n\n        let varQL = this.createQLVariable(subFormID, subFormData);\n\n        console.log('varQL:', varQL, ', dataID:', this.state.dataID);\n        \n        var instance = this;\n        if(varQL != null){\n            if(this.state.dataID == null){\n                fnMutationRatesOfReturnAdd({ variables: { data: varQL } }).then((response) => {\n                    instance.setState({\n                        dataID: response['data']['createRatesOfReturn']['ratesOfReturn']['id']\n                    })\n                });\n                \n            }\n            else{\n                fnMutationRatesOfReturnUpdate({ variables: { id: this.state.dataID, data: varQL } })\n            }\n        }\n\n        this.setState({\n            formData: formData\n        });\n    }\n\n    getSubFormData(subFormID, fromState = true, pformData){\n        let formData;\n        if(fromState){\n            formData = this.state.formData;\n        }\n        else{\n            formData = pformData;\n        }\n\n        for(var findex = 0; findex < formData.length; findex++){\n            if(formData[findex]['id'] == subFormID){\n                return formData[findex]['data'];\n            }\n        }\n\n        return {};\n    }\n\n    goSubForm(subFormID){\n\n        this.setState({\n            formVisible: false,\n        })\n\n        let nextSubForm = StaticSubForm;\n        let subFormData = this.getSubFormData(subFormID);\n\n        switch(subFormID){\n            case 'StaticSubForm': \n                nextSubForm = StaticSubForm;\n                break;\n            case 'QuestionPredictionSubForm': \n                nextSubForm = QuestionPredictionSubForm;\n                break;\n            case 'ChoosePredictionSubForm':\n                nextSubForm = ChoosePredictionSubForm;\n                break;\n            case 'QuestionOwnRateSubForm':\n                nextSubForm = QuestionOwnRateSubForm;\n                break;\n            case 'UserDefinedSubForm':\n                nextSubForm = UserDefinedSubForm;\n                break;\n            case 'QuestionMonteCarloSubForm':\n                nextSubForm = QuestionMonteCarloSubForm;\n                break;\n            case 'MonteCarloSubForm':\n                nextSubForm = MonteCarloSubForm;\n                break;\n            case 'EndSubForm':\n                nextSubForm = EndSubForm;\n                this.setState({isEndForm: true})\n                break;\n        }\n\n        setTimeout(() => {\n            this.setState({ \n                formVisible: true,\n                curSubFormID: subFormID,\n                curSubForm: nextSubForm,\n                subFormData: subFormData\n            });\n        }, 100);\n\n    }\n    \n                        \n                \n    toggleRightSide = (e) => {\n        e.preventDefault();\n        this.setState({ isRightSideOpen: !this.state.isRightSideOpen });\n    }\n\n    loadDBData(formData){\n        console.log('formData:', formData);\n\n        var instance = this;\n        setTimeout(function(){\n            instance.setState({ \n                formVisible: true,\n                dbLoaded: true,\n                formData: formData,\n                subFormData: instance.getSubFormData(instance.state.curSubFormID, false, formData)\n            });\n        }, 100)        \n\n    }\n\n    render() {\n\n\n\n        let SubForm = this.state.curSubForm;\n\n        let formpageClassName = 'form-page-container-wrap';\n        if(this.state.isRightSideOpen){\n            formpageClassName = 'form-page-container-wrap right-side--opend';\n        }\n        else {\n            formpageClassName = 'form-page-container-wrap right-side--collapsed';\n        }\n        return (\n            <div className={formpageClassName}>\n                <div className=\"form-page--main-side\">\n                    <div className=\"steps\">\n                        <div className=\"logo-container align-items-top justify-content-center\">\n                            <img className=\"img-asset\" src={AssetPlanet} />\n                        </div>\n                        <div className=\"process\">\n                            <div className=\"process-row\">\n                                {\n                                    this.state.formSteps.map((formStep, index) => {\n                                        let elementPos = this.state.formSteps.map(function(x) {return x.id; }).indexOf(this.state.curSubFormID);\n                                        let classBtn = 'btn nav-items btn-circle'\n\n                                        if (elementPos === -1) {\n                                            elementPos = prevPos;\n                                        } else {\n                                            prevPos = elementPos;\n                                        }\n\n                                        classBtn = elementPos >= index ? 'btn nav-items btn-circle active' : 'btn nav-items btn-circle';\n                                        if(this.state.isEndForm)\n                                            classBtn = 'btn nav-items btn-circle disabled'\n\n                                        return (\n                                            <div className=\"process-step\" key={index}>\n                                                <button type=\"button\" className={ classBtn } data-toggle=\"tab\" onClick={() => {\n                                                    if(classBtn !== 'btn nav-items btn-circle disabled')\n                                                        this.goSubForm(formStep.id)}}>\n                                                    {/* <img className=\"img-icon\" src={ImageIcon} /> */}\n                                                    <div style={{ fontSize: 30, color: '#006400' }}>\n                                                        {index + 1}\n                                                    </div>\n                                                </button>\n                                                <p className=\"step-title\">{formStep.title}</p>\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </div>\n                        </div>\n                    </div>\n                    <HiddenHook />\n                    {\n                        !this.state.dbLoaded && \n                        <LoadDBDataHook \n                            dbLoaded={this.state.dbLoaded}\n                            dbID={this.state.dbID}\n                            cbLoadDBData={this.loadDBData}\n                        />\n                    }\n                    <div className=\"container\">\n                        {/* {\n                            !this.state.dbLoaded && <div>Loading...</div>\n                        } */}\n                        {\n                            // this.state.dbLoaded && \n                            <div className=\"form-page-container\">\n                                <div className=\"form-page--left-side\">\n                                    <FormPagePose className=\"info-form-block\" pose={this.state.formVisible ? 'visible' : 'hidden'}>\n                                        <SubForm \n                                            subFormData={this.state.subFormData}\n                                            cbGoSubForm={this.goSubForm}\n                                            cbUpdateSubForm={this.updateSubForm}\n                                            formData={this.state.formData}\n                                            cbGetSubFormField={this.getSubFormField}\n                                            cbGoNext={this.goNext}\n                                                cbGoPrev={this.goPrev}\n                                        />\n                                    </FormPagePose>\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </div>\n                <div className=\"form-page--right-side\">\n                    <span className=\"right-side-collapse-icon\" onClick={this.toggleRightSide}>\n                        <i className=\"fe-menu\"></i>\n                    </span>\n                    <div className=\"form-page--right-side-wrap\">\n                        {\n                            this.state.formData.map((subForm, sindex) => {\n                                if(subForm.visible == false){\n                                    return (<div key={sindex}></div>)\n                                }\n                                \n                                let subFormData = subForm.data;\n                                return(\n                                <div className=\"form-brief-block\" key={sindex}>\n                                    <div className=\"form-brief-top\">\n                                        <h4 className=\"form-brief-title\">{subFormData.title}</h4>\n                                        <span className=\"form-brief-edit-btn\" onClick={() => this.goSubForm(subForm.id)}><Icon type=\"edit\"></Icon></span>\n                                    </div>\n                                    <div className=\"form-brief-content\">\n                                    {\n                                        subFormData.fields && subFormData.fields.map((field, ffindex) => {\n                                            return(\n                                                <div className=\"form-brief-item\" key={ffindex}>\n                                                    <p className=\"form-brief-item-title\">{field.title != '' ? field.title + \":\" : null} </p>\n                                                    <p className=\"form-brief-item-value\">{field.value}</p>\n                                                </div>\n                                            )\n                                        })\n                                    }\n                                    </div>\n                                </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect()(ReturnRatesNew);"],"mappings":";;;;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,IAAI,QAAQ,MAAM;AAC3B,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,WAAW,MAAM,qCAAqC;AAE7D,SAASC,WAAW,EAAEC,QAAQ,QAAQ,qBAAqB;AAC3D,SACIC,sBAAsB,EACtBC,yBAAyB,EACzBC,sBAAsB,QACnB,4BAA4B;AAEnC,SAASC,YAAY,QAAQ,gCAAgC;AAC7D,OAAOC,aAAa,MAAM,0BAA0B;AACpD,OAAOC,yBAAyB,MAAM,sCAAsC;AAC5E,OAAOC,uBAAuB,MAAM,oCAAoC;AACxE,OAAOC,sBAAsB,MAAM,mCAAmC;AACtE,OAAOC,kBAAkB,MAAM,+BAA+B;AAC9D,OAAOC,yBAAyB,MAAM,sCAAsC;AAC5E,OAAOC,iBAAiB,MAAM,8BAA8B;AAC5D,OAAOC,UAAU,MAAM,uBAAuB;AAE9C,IAAIC,0BAA0B,GAAG,IAAI;AACrC,IAAIC,4BAA4B,GAAG,IAAI;AAEvC,IAAIC,6BAA6B,GAAG,IAAI;AACxC,IAAIC,+BAA+B,GAAG,IAAI;AAC1C,IAAIC,OAAO,GAAG,CAAC;AAEf,SAASC,UAAUA,CAAA,EAAE;EAAA,IAAAC,YAAA,GACgDpB,WAAW,CAACE,sBAAsB,CAAC;EAAA,IAAAmB,aAAA,GAAAC,cAAA,CAAAF,YAAA;EAAnGN,0BAA0B,GAAAO,aAAA;EAAIN,4BAA4B,GAAAM,aAAA,IAA5BN,4BAA4B;EAAA,IAAAQ,aAAA,GACYvB,WAAW,CAACG,yBAAyB,CAAC;EAAA,IAAAqB,aAAA,GAAAF,cAAA,CAAAC,aAAA;EAA5GP,6BAA6B,GAAAQ,aAAA;EAAIP,+BAA+B,GAAAO,aAAA,IAA/BP,+BAA+B;EAEjE,oBACIxB,KAAA,CAAAgC,aAAA,CAAChC,KAAK,CAACiC,QAAQ;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAiB,CAAC;AAEzC;AAEA,SAASC,kBAAkBA,CAACC,IAAI,EAAC;EAE7BC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,IAAI,CAAC;EAC9B,IAAIG,QAAQ,GAAG,EAAE;EAEjBA,QAAQ,CAACC,IAAI,CAAC;IACVC,EAAE,EAAE,eAAe;IACnBL,IAAI,EAAE5B,aAAa,CAACkC,gBAAgB,CAAC;MACjCC,MAAM,EAAEP,IAAI,CAAC,eAAe,CAAC,CAAC,eAAe,CAAC,CAAC,QAAQ;IAC3D,CAAC,CAAC;IACFQ,OAAO,EAAE;EACb,CAAC,CAAC;EAIFL,QAAQ,CAACC,IAAI,CAAC;IACVC,EAAE,EAAE,yBAAyB;IAC7BL,IAAI,EAAE1B,uBAAuB,CAACgC,gBAAgB,CAAC;MAC3CG,UAAU,EAAET,IAAI,CAAC,eAAe,CAAC,CAAC,eAAe,CAAC,CAAC,wBAAwB;IAC/E,CAAC,CAAC;IACFQ,OAAO,EAAE;EACb,CAAC,CAAC;EAIFL,QAAQ,CAACC,IAAI,CAAC;IACVC,EAAE,EAAE,oBAAoB;IACxBL,IAAI,EAAE;MACFU,KAAK,EAAE,qBAAqB;MAC5BV,IAAI,EAAEA,IAAI,CAAC,eAAe,CAAC,CAAC,0BAA0B;IAC1D,CAAC;IACDQ,OAAO,EAAE;EACb,CAAC,CAAC;EAKFL,QAAQ,CAACC,IAAI,CAAC;IACVC,EAAE,EAAE,mBAAmB;IACvBL,IAAI,EAAE;MACFU,KAAK,EAAE,6BAA6B;MACpCV,IAAI,EAAEA,IAAI,CAAC,eAAe,CAAC,CAAC,yBAAyB;IACzD,CAAC;IACDQ,OAAO,EAAE;EACb,CAAC,CAAC;EAEF,OAAOL,QAAQ;AACnB;AAEA,SAASQ,cAAcA,CAACC,KAAK,EAAC;EAC1B,IAAGA,KAAK,CAACC,IAAI,IAAI,IAAI,IAAID,KAAK,CAACC,IAAI,IAAI,EAAE,EAAC;IAAA,IAAAC,SAAA,GACP/C,QAAQ,CAACG,sBAAsB,EAAE;QAAE6C,SAAS,EAAE;UAAEV,EAAE,EAAEO,KAAK,CAACC;QAAI;MAAE,CAAC,CAAC;MAA1Fb,IAAI,GAAAc,SAAA,CAAJd,IAAI;MAAEgB,OAAO,GAAAF,SAAA,CAAPE,OAAO;MAAEC,KAAK,GAAAH,SAAA,CAALG,KAAK;IAC3B,IAAGjB,IAAI,EAAC;MACJC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MACrBU,KAAK,CAACM,YAAY,CAACnB,kBAAkB,CAACC,IAAI,CAAC,CAAC;IAChD;EACJ;EAEA,oBACIzC,KAAA,CAAAgC,aAAA,CAAChC,KAAK,CAACiC,QAAQ;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAiB,CAAC;AAEzC;AAAC,IAEKqB,cAAc,0BAAAC,UAAA;EAAAC,SAAA,CAAAF,cAAA,EAAAC,UAAA;EAEhB,SAAAD,eAAYP,KAAK,EAAE;IAAA,IAAAU,KAAA;IAAAC,eAAA,OAAAJ,cAAA;IACfG,KAAA,GAAAE,0BAAA,OAAAC,eAAA,CAAAN,cAAA,EAAAO,IAAA,OAAMd,KAAK;IAAEU,KAAA,CAwPjBK,eAAe,GAAG,UAACC,CAAC,EAAK;MACrBA,CAAC,CAACC,cAAc,CAAC,CAAC;MAClBP,KAAA,CAAKQ,QAAQ,CAAC;QAAEC,eAAe,EAAE,CAACT,KAAA,CAAKU,KAAK,CAACD;MAAgB,CAAC,CAAC;IACnE,CAAC;IAzPG,IAAIlB,IAAI,GAAG,IAAI;IACf,IAAIoB,QAAQ,GAAG,IAAI;IAAC,IAEZC,eAAe,GAAKZ,KAAA,CAAKV,KAAK,CAACuB,KAAK,CAACC,MAAM,CAA3CF,eAAe;IAEvB,IAAIA,eAAe,EAAE;MACjBrB,IAAI,GAAGqB,eAAe;MACtBD,QAAQ,GAAG,KAAK;IACpB;IAEAX,KAAA,CAAKU,KAAK,GAAG;MACTK,MAAM,EAAExB,IAAI;MACZyB,YAAY,EAAE,eAAe;MAC7BC,UAAU,EAAEnE,aAAa;MACzBoE,WAAW,EAAE,KAAK;MAClBC,WAAW,EAAE,CAAC,CAAC;MACftC,QAAQ,EAAE,EAET;MACD4B,eAAe,EAAE,KAAK;MACtBW,SAAS,EAAE,CACP;QACIrC,EAAE,EAAE,eAAe;QACnBsC,IAAI,EAAE,aAAa;QACnBjC,KAAK,EAAE;MACX,CAAC,EACD;QACIL,EAAE,EAAE,yBAAyB;QAC7BsC,IAAI,EAAE,aAAa;QACnBjC,KAAK,EAAE;MACX,CAAC,EACD;QACIL,EAAE,EAAE,oBAAoB;QACxBsC,IAAI,EAAE,aAAa;QACnBjC,KAAK,EAAE;MACX,CAAC,EACD;QACIL,EAAE,EAAE,mBAAmB;QACvBsC,IAAI,EAAE,aAAa;QACnBjC,KAAK,EAAE;MACX,CAAC,CACJ;MACDuB,QAAQ,EAAEA,QAAQ;MAClBpB,IAAI,EAAEA,IAAI;MACV+B,SAAS,EAAE;IACf,CAAC;IAEDtB,KAAA,CAAKuB,SAAS,GAAGvB,KAAA,CAAKuB,SAAS,CAACC,IAAI,CAAAC,sBAAA,CAAAA,sBAAA,CAAAzB,KAAA,EAAK,CAAC;IAC1CA,KAAA,CAAK0B,aAAa,GAAG1B,KAAA,CAAK0B,aAAa,CAACF,IAAI,CAAAC,sBAAA,CAAAA,sBAAA,CAAAzB,KAAA,EAAK,CAAC;IAClDA,KAAA,CAAK2B,cAAc,GAAG3B,KAAA,CAAK2B,cAAc,CAACH,IAAI,CAAAC,sBAAA,CAAAA,sBAAA,CAAAzB,KAAA,EAAK,CAAC;IACpDA,KAAA,CAAK4B,eAAe,GAAG5B,KAAA,CAAK4B,eAAe,CAACJ,IAAI,CAAAC,sBAAA,CAAAA,sBAAA,CAAAzB,KAAA,EAAK,CAAC;IAEtDA,KAAA,CAAK6B,gBAAgB,GAAG7B,KAAA,CAAK6B,gBAAgB,CAACL,IAAI,CAAAC,sBAAA,CAAAA,sBAAA,CAAAzB,KAAA,EAAK,CAAC;IACxDA,KAAA,CAAK8B,oBAAoB,GAAG9B,KAAA,CAAK8B,oBAAoB,CAACN,IAAI,CAAAC,sBAAA,CAAAA,sBAAA,CAAAzB,KAAA,EAAK,CAAC;IAEhEA,KAAA,CAAKK,eAAe,GAAGL,KAAA,CAAKK,eAAe,CAACmB,IAAI,CAAAC,sBAAA,CAAAA,sBAAA,CAAAzB,KAAA,EAAK,CAAC;IAEtDA,KAAA,CAAK+B,UAAU,GAAG/B,KAAA,CAAK+B,UAAU,CAACP,IAAI,CAAAC,sBAAA,CAAAA,sBAAA,CAAAzB,KAAA,EAAK,CAAC;IAAC,OAAAA,KAAA;EACjD;EAACgC,YAAA,CAAAnC,cAAA;IAAAoC,GAAA;IAAAC,KAAA,WAAAC,kBAAA,EAEmB;MAChB,IAAI,CAACZ,SAAS,CAAC,eAAe,CAAC;MAC/B;IACJ;EAAC;IAAAU,GAAA;IAAAC,KAAA,WAAAN,gBAEeQ,MAAM,EAAEC,OAAO,EAAC;MAC5B,IAAIxD,QAAQ,GAAG,IAAI,CAAC6B,KAAK,CAAC7B,QAAQ;MAElC,KAAI,IAAIyD,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGzD,QAAQ,CAAC0D,MAAM,EAAED,KAAK,EAAE,EAAC;QAChD,IAAGzD,QAAQ,CAACyD,KAAK,CAAC,CAAC,IAAI,CAAC,IAAIF,MAAM,EAAC;UAC/B,IAAI1D,IAAI,GAAGG,QAAQ,CAACyD,KAAK,CAAC,CAAC,MAAM,CAAC;UAClC,IAAIE,MAAM,GAAG9D,IAAI,CAAC,QAAQ,CAAC;UAC3B,KAAI,IAAI+D,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAGD,MAAM,CAACD,MAAM,EAAEE,MAAM,EAAE,EAAC;YACjD,IAAGD,MAAM,CAACC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAIJ,OAAO,EAAC;cAC/B,OAAOG,MAAM,CAACC,MAAM,CAAC;YACzB;UACJ;QACJ;MACJ;MAEA,OAAO,IAAI;IACf;EAAC;IAAAR,GAAA;IAAAC,KAAA,WAAAJ,qBAEoBM,MAAM,EAAEC,OAAO,EAAC;MACjC,IAAIK,KAAK,GAAG,IAAI,CAACd,eAAe,CAACQ,MAAM,EAAEC,OAAO,CAAC;MAEjD,IAAGK,KAAK,IAAI,IAAI,EAAC;QACb,OAAO,EAAE;MACb,CAAC,MACG;QACA,OAAOA,KAAK,CAACR,KAAK;MACtB;IACJ;EAAC;IAAAD,GAAA;IAAAC,KAAA,WAAAL,iBAEgBc,SAAS,EAAExB,WAAW,EAAC;MACpC,IAAIyB,KAAK,GAAG,IAAI;MAEhB,QAAOD,SAAS;QACZ,KAAK,eAAe;UAChBC,KAAK,GAAG;YACJ,eAAe,EAAG;cACd,QAAQ,EAAE,IAAI,CAACd,oBAAoB,CAACa,SAAS,EAAE,QAAQ,CAAC,IAAI,EAAE,GAAGE,QAAQ,CAAC,IAAI,CAACf,oBAAoB,CAACa,SAAS,EAAE,QAAQ,CAAC,CAAC,GAAG;YAChI;UACJ,CAAC;UACD;QACJ,KAAK,2BAA2B;UAC5B;QACJ,KAAK,yBAAyB;UAC1BC,KAAK,GAAG;YACJ,eAAe,EAAG;cACd,wBAAwB,EAAE,IAAI,CAACd,oBAAoB,CAACa,SAAS,EAAE,YAAY;YAC/E;UACJ,CAAC;UACD;QACJ,KAAK,wBAAwB;UACzB;QACJ,KAAK,oBAAoB;UACrBC,KAAK,GAAG;YACJ,0BAA0B,EAAGzB;UACjC,CAAC;UACD;QACJ,KAAK,2BAA2B;UAC5B;QACJ,KAAK,mBAAmB;UACpByB,KAAK,GAAG;YACJ,yBAAyB,EAAGzB;UAChC,CAAC;UACD;QACJ,KAAK,YAAY;MAErB;MAEA,OAAOyB,KAAK;IAChB;EAAC;IAAAX,GAAA;IAAAC,KAAA,WAAAR,cACaiB,SAAS,EAAExB,WAAW,EAAiB;MAAA,IAAfjC,OAAO,GAAA4D,SAAA,CAAAP,MAAA,QAAAO,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,IAAI;MAChD,IAAIjE,QAAQ,GAAG,IAAI,CAAC6B,KAAK,CAAC7B,QAAQ;MAElC,IAAImE,MAAM,GAAG,KAAK;MAClB,KAAI,IAAIP,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAG5D,QAAQ,CAAC0D,MAAM,EAAEE,MAAM,EAAE,EAAC;QACnD,IAAG5D,QAAQ,CAAC4D,MAAM,CAAC,CAAC,IAAI,CAAC,IAAIE,SAAS,EAAC;UACnC9D,QAAQ,CAAC4D,MAAM,CAAC,CAAC,MAAM,CAAC,GAAGtB,WAAW;UACtC6B,MAAM,GAAG,IAAI;QACjB;MACJ;MAEA,IAAG,CAACA,MAAM,EAAC;QACPnE,QAAQ,CAACC,IAAI,CAAC;UACVC,EAAE,EAAE4D,SAAS;UACbjE,IAAI,EAAEyC,WAAW;UACjBjC,OAAO,EAAEA;QACb,CAAC,CAAC;MACN;MAGA,IAAI0D,KAAK,GAAG,IAAI,CAACf,gBAAgB,CAACc,SAAS,EAAExB,WAAW,CAAC;MAEzDxC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEgE,KAAK,EAAE,WAAW,EAAE,IAAI,CAAClC,KAAK,CAACK,MAAM,CAAC;MAE5D,IAAIkC,QAAQ,GAAG,IAAI;MACnB,IAAGL,KAAK,IAAI,IAAI,EAAC;QACb,IAAG,IAAI,CAAClC,KAAK,CAACK,MAAM,IAAI,IAAI,EAAC;UACzBzD,0BAA0B,CAAC;YAAEmC,SAAS,EAAE;cAAEf,IAAI,EAAEkE;YAAM;UAAE,CAAC,CAAC,CAACM,IAAI,CAAC,UAACC,QAAQ,EAAK;YAC1EF,QAAQ,CAACzC,QAAQ,CAAC;cACdO,MAAM,EAAEoC,QAAQ,CAAC,MAAM,CAAC,CAAC,qBAAqB,CAAC,CAAC,eAAe,CAAC,CAAC,IAAI;YACzE,CAAC,CAAC;UACN,CAAC,CAAC;QAEN,CAAC,MACG;UACA3F,6BAA6B,CAAC;YAAEiC,SAAS,EAAE;cAAEV,EAAE,EAAE,IAAI,CAAC2B,KAAK,CAACK,MAAM;cAAErC,IAAI,EAAEkE;YAAM;UAAE,CAAC,CAAC;QACxF;MACJ;MAEA,IAAI,CAACpC,QAAQ,CAAC;QACV3B,QAAQ,EAAEA;MACd,CAAC,CAAC;IACN;EAAC;IAAAoD,GAAA;IAAAC,KAAA,WAAAP,eAEcgB,SAAS,EAA8B;MAAA,IAA5BS,SAAS,GAAAN,SAAA,CAAAP,MAAA,QAAAO,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,IAAI;MAAA,IAAEO,SAAS,GAAAP,SAAA,CAAAP,MAAA,OAAAO,SAAA,MAAAC,SAAA;MACjD,IAAIlE,QAAQ;MACZ,IAAGuE,SAAS,EAAC;QACTvE,QAAQ,GAAG,IAAI,CAAC6B,KAAK,CAAC7B,QAAQ;MAClC,CAAC,MACG;QACAA,QAAQ,GAAGwE,SAAS;MACxB;MAEA,KAAI,IAAIZ,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAG5D,QAAQ,CAAC0D,MAAM,EAAEE,MAAM,EAAE,EAAC;QACnD,IAAG5D,QAAQ,CAAC4D,MAAM,CAAC,CAAC,IAAI,CAAC,IAAIE,SAAS,EAAC;UACnC,OAAO9D,QAAQ,CAAC4D,MAAM,CAAC,CAAC,MAAM,CAAC;QACnC;MACJ;MAEA,OAAO,CAAC,CAAC;IACb;EAAC;IAAAR,GAAA;IAAAC,KAAA,WAAAX,UAESoB,SAAS,EAAC;MAAA,IAAAW,MAAA;MAEhB,IAAI,CAAC9C,QAAQ,CAAC;QACVU,WAAW,EAAE;MACjB,CAAC,CAAC;MAEF,IAAIqC,WAAW,GAAGzG,aAAa;MAC/B,IAAIqE,WAAW,GAAG,IAAI,CAACQ,cAAc,CAACgB,SAAS,CAAC;MAEhD,QAAOA,SAAS;QACZ,KAAK,eAAe;UAChBY,WAAW,GAAGzG,aAAa;UAC3B;QACJ,KAAK,2BAA2B;UAC5ByG,WAAW,GAAGxG,yBAAyB;UACvC;QACJ,KAAK,yBAAyB;UAC1BwG,WAAW,GAAGvG,uBAAuB;UACrC;QACJ,KAAK,wBAAwB;UACzBuG,WAAW,GAAGtG,sBAAsB;UACpC;QACJ,KAAK,oBAAoB;UACrBsG,WAAW,GAAGrG,kBAAkB;UAChC;QACJ,KAAK,2BAA2B;UAC5BqG,WAAW,GAAGpG,yBAAyB;UACvC;QACJ,KAAK,mBAAmB;UACpBoG,WAAW,GAAGnG,iBAAiB;UAC/B;QACJ,KAAK,YAAY;UACbmG,WAAW,GAAGlG,UAAU;UACxB,IAAI,CAACmD,QAAQ,CAAC;YAACc,SAAS,EAAE;UAAI,CAAC,CAAC;UAChC;MACR;MAEAkC,UAAU,CAAC,YAAM;QACbF,MAAI,CAAC9C,QAAQ,CAAC;UACVU,WAAW,EAAE,IAAI;UACjBF,YAAY,EAAE2B,SAAS;UACvB1B,UAAU,EAAEsC,WAAW;UACvBpC,WAAW,EAAEA;QACjB,CAAC,CAAC;MACN,CAAC,EAAE,GAAG,CAAC;IAEX;EAAC;IAAAc,GAAA;IAAAC,KAAA,WAAAH,WASUlD,QAAQ,EAAC;MAChBF,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEC,QAAQ,CAAC;MAElC,IAAIoE,QAAQ,GAAG,IAAI;MACnBO,UAAU,CAAC,YAAU;QACjBP,QAAQ,CAACzC,QAAQ,CAAC;UACdU,WAAW,EAAE,IAAI;UACjBP,QAAQ,EAAE,IAAI;UACd9B,QAAQ,EAAEA,QAAQ;UAClBsC,WAAW,EAAE8B,QAAQ,CAACtB,cAAc,CAACsB,QAAQ,CAACvC,KAAK,CAACM,YAAY,EAAE,KAAK,EAAEnC,QAAQ;QACrF,CAAC,CAAC;MACN,CAAC,EAAE,GAAG,CAAC;IAEX;EAAC;IAAAoD,GAAA;IAAAC,KAAA,WAAAuB,OAAA,EAEQ;MAAA,IAAAC,MAAA;MAIL,IAAIC,OAAO,GAAG,IAAI,CAACjD,KAAK,CAACO,UAAU;MAEnC,IAAI2C,iBAAiB,GAAG,0BAA0B;MAClD,IAAG,IAAI,CAAClD,KAAK,CAACD,eAAe,EAAC;QAC1BmD,iBAAiB,GAAG,4CAA4C;MACpE,CAAC,MACI;QACDA,iBAAiB,GAAG,gDAAgD;MACxE;MACA,oBACI3H,KAAA,CAAAgC,aAAA;QAAK4F,SAAS,EAAED,iBAAkB;QAAAzF,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBAC9BvC,KAAA,CAAAgC,aAAA;QAAK4F,SAAS,EAAC,sBAAsB;QAAA1F,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACjCvC,KAAA,CAAAgC,aAAA;QAAK4F,SAAS,EAAC,OAAO;QAAA1F,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBAClBvC,KAAA,CAAAgC,aAAA;QAAK4F,SAAS,EAAC,uDAAuD;QAAA1F,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBAClEvC,KAAA,CAAAgC,aAAA;QAAK4F,SAAS,EAAC,WAAW;QAACC,GAAG,EAAEvH,WAAY;QAAA4B,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CAC7C,CAAC,eACNvC,KAAA,CAAAgC,aAAA;QAAK4F,SAAS,EAAC,SAAS;QAAA1F,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACpBvC,KAAA,CAAAgC,aAAA;QAAK4F,SAAS,EAAC,aAAa;QAAA1F,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAEpB,IAAI,CAACkC,KAAK,CAACU,SAAS,CAAC2C,GAAG,CAAC,UAACC,QAAQ,EAAE1B,KAAK,EAAK;QAC1C,IAAI2B,UAAU,GAAGP,MAAI,CAAChD,KAAK,CAACU,SAAS,CAAC2C,GAAG,CAAC,UAASG,CAAC,EAAE;UAAC,OAAOA,CAAC,CAACnF,EAAE;QAAE,CAAC,CAAC,CAACoF,OAAO,CAACT,MAAI,CAAChD,KAAK,CAACM,YAAY,CAAC;QACvG,IAAIoD,QAAQ,GAAG,0BAA0B;QAEzC,IAAIH,UAAU,KAAK,CAAC,CAAC,EAAE;UACnBA,UAAU,GAAGvG,OAAO;QACxB,CAAC,MAAM;UACHA,OAAO,GAAGuG,UAAU;QACxB;QAEAG,QAAQ,GAAGH,UAAU,IAAI3B,KAAK,GAAG,iCAAiC,GAAG,0BAA0B;QAC/F,IAAGoB,MAAI,CAAChD,KAAK,CAACY,SAAS,EACnB8C,QAAQ,GAAG,mCAAmC;QAElD,oBACInI,KAAA,CAAAgC,aAAA;UAAK4F,SAAS,EAAC,cAAc;UAAC5B,GAAG,EAAEK,KAAM;UAAAnE,MAAA,EAAAuF,MAAA;UAAAtF,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,gBACrCvC,KAAA,CAAAgC,aAAA;UAAQoG,IAAI,EAAC,QAAQ;UAACR,SAAS,EAAGO,QAAU;UAAC,eAAY,KAAK;UAACE,OAAO,EAAE,SAAAA,QAAA,EAAM;YAC1E,IAAGF,QAAQ,KAAK,mCAAmC,EAC/CV,MAAI,CAACnC,SAAS,CAACyC,QAAQ,CAACjF,EAAE,CAAC;UAAA,CAAE;UAAAZ,MAAA,EAAAuF,MAAA;UAAAtF,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,gBAEjCvC,KAAA,CAAAgC,aAAA;UAAKsG,KAAK,EAAE;YAAEC,QAAQ,EAAE,EAAE;YAAEC,KAAK,EAAE;UAAU,CAAE;UAAAtG,MAAA,EAAAuF,MAAA;UAAAtF,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,GAC1C8D,KAAK,GAAG,CACR,CACD,CAAC,eACTrG,KAAA,CAAAgC,aAAA;UAAG4F,SAAS,EAAC,YAAY;UAAA1F,MAAA,EAAAuF,MAAA;UAAAtF,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,GAAEwF,QAAQ,CAAC5E,KAAS,CAC5C,CAAC;MAEd,CAAC,CAEJ,CACJ,CACJ,CAAC,eACNnD,KAAA,CAAAgC,aAAA,CAACN,UAAU;QAAAQ,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CAAC,EAEV,CAAC,IAAI,CAACkC,KAAK,CAACC,QAAQ,iBACpB1E,KAAA,CAAAgC,aAAA,CAACoB,cAAc;QACXsB,QAAQ,EAAE,IAAI,CAACD,KAAK,CAACC,QAAS;QAC9BpB,IAAI,EAAE,IAAI,CAACmB,KAAK,CAACnB,IAAK;QACtBK,YAAY,EAAE,IAAI,CAACmC,UAAW;QAAA5D,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CACjC,CAAC,eAENvC,KAAA,CAAAgC,aAAA;QAAK4F,SAAS,EAAC,WAAW;QAAA1F,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA;MAAA;MAKlB;MACAvC,KAAA,CAAAgC,aAAA;QAAK4F,SAAS,EAAC,qBAAqB;QAAA1F,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBAChCvC,KAAA,CAAAgC,aAAA;QAAK4F,SAAS,EAAC,sBAAsB;QAAA1F,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACjCvC,KAAA,CAAAgC,aAAA,CAACpB,YAAY;QAACgH,SAAS,EAAC,iBAAiB;QAACa,IAAI,EAAE,IAAI,CAAChE,KAAK,CAACQ,WAAW,GAAG,SAAS,GAAG,QAAS;QAAA/C,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBAC1FvC,KAAA,CAAAgC,aAAA,CAAC0F,OAAO;QACJxC,WAAW,EAAE,IAAI,CAACT,KAAK,CAACS,WAAY;QACpCwD,WAAW,EAAE,IAAI,CAACpD,SAAU;QAC5BqD,eAAe,EAAE,IAAI,CAAClD,aAAc;QACpC7C,QAAQ,EAAE,IAAI,CAAC6B,KAAK,CAAC7B,QAAS;QAC9BgG,iBAAiB,EAAE,IAAI,CAACjD,eAAgB;QACxCkD,QAAQ,EAAE,IAAI,CAACC,MAAO;QAClBC,QAAQ,EAAE,IAAI,CAACC,MAAO;QAAA9G,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAC7B,CACS,CACb,CACJ,CAER,CACJ,CAAC,eACNvC,KAAA,CAAAgC,aAAA;QAAK4F,SAAS,EAAC,uBAAuB;QAAA1F,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBAClCvC,KAAA,CAAAgC,aAAA;QAAM4F,SAAS,EAAC,0BAA0B;QAACS,OAAO,EAAE,IAAI,CAACjE,eAAgB;QAAAlC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACrEvC,KAAA,CAAAgC,aAAA;QAAG4F,SAAS,EAAC,SAAS;QAAA1F,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAI,CACxB,CAAC,eACPvC,KAAA,CAAAgC,aAAA;QAAK4F,SAAS,EAAC,4BAA4B;QAAA1F,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAEnC,IAAI,CAACkC,KAAK,CAAC7B,QAAQ,CAACkF,GAAG,CAAC,UAACmB,OAAO,EAAEC,MAAM,EAAK;QACzC,IAAGD,OAAO,CAAChG,OAAO,IAAI,KAAK,EAAC;UACxB,oBAAQjD,KAAA,CAAAgC,aAAA;YAAKgE,GAAG,EAAEkD,MAAO;YAAAhH,MAAA,EAAAuF,MAAA;YAAAtF,QAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAA,CAAM,CAAC;QACpC;QAEA,IAAI2C,WAAW,GAAG+D,OAAO,CAACxG,IAAI;QAC9B,oBACAzC,KAAA,CAAAgC,aAAA;UAAK4F,SAAS,EAAC,kBAAkB;UAAC5B,GAAG,EAAEkD,MAAO;UAAAhH,MAAA,EAAAuF,MAAA;UAAAtF,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,gBAC1CvC,KAAA,CAAAgC,aAAA;UAAK4F,SAAS,EAAC,gBAAgB;UAAA1F,MAAA,EAAAuF,MAAA;UAAAtF,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,gBAC3BvC,KAAA,CAAAgC,aAAA;UAAI4F,SAAS,EAAC,kBAAkB;UAAA1F,MAAA,EAAAuF,MAAA;UAAAtF,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,GAAE2C,WAAW,CAAC/B,KAAU,CAAC,eACzDnD,KAAA,CAAAgC,aAAA;UAAM4F,SAAS,EAAC,qBAAqB;UAACS,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMZ,MAAI,CAACnC,SAAS,CAAC2D,OAAO,CAACnG,EAAE,CAAC;UAAA,CAAC;UAAAZ,MAAA,EAAAuF,MAAA;UAAAtF,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,gBAACvC,KAAA,CAAAgC,aAAA,CAAC5B,IAAI;UAACgI,IAAI,EAAC,MAAM;UAAAlG,MAAA,EAAAuF,MAAA;UAAAtF,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,CAAO,CAAO,CAC/G,CAAC,eACNvC,KAAA,CAAAgC,aAAA;UAAK4F,SAAS,EAAC,oBAAoB;UAAA1F,MAAA,EAAAuF,MAAA;UAAAtF,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,GAE/B2C,WAAW,CAACqB,MAAM,IAAIrB,WAAW,CAACqB,MAAM,CAACuB,GAAG,CAAC,UAACrB,KAAK,EAAE0C,OAAO,EAAK;UAC7D,oBACInJ,KAAA,CAAAgC,aAAA;YAAK4F,SAAS,EAAC,iBAAiB;YAAC5B,GAAG,EAAEmD,OAAQ;YAAAjH,MAAA,EAAAuF,MAAA;YAAAtF,QAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAA,gBAC1CvC,KAAA,CAAAgC,aAAA;YAAG4F,SAAS,EAAC,uBAAuB;YAAA1F,MAAA,EAAAuF,MAAA;YAAAtF,QAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAA,GAAEkE,KAAK,CAACtD,KAAK,IAAI,EAAE,GAAGsD,KAAK,CAACtD,KAAK,GAAG,GAAG,GAAG,IAAI,EAAC,GAAI,CAAC,eACxFnD,KAAA,CAAAgC,aAAA;YAAG4F,SAAS,EAAC,uBAAuB;YAAA1F,MAAA,EAAAuF,MAAA;YAAAtF,QAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAA,GAAEkE,KAAK,CAACR,KAAS,CACpD,CAAC;QAEd,CAAC,CAEA,CACJ,CAAC;MAEV,CAAC,CAEJ,CACJ,CACJ,CAAC;IAEd;EAAC;EAAA,OAAArC,cAAA;AAAA,EA7YwB3D,SAAS;AAgZtC,eAAeC,OAAO,CAAC,CAAC,CAAC0D,cAAc,CAAC"},"metadata":{},"sourceType":"module"}