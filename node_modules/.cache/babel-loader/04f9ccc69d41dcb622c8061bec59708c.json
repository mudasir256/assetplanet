{"ast":null,"code":"import _objectSpread from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ThemeProvider } from \"styled-components\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"./redux/store\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport ApolloClient from \"apollo-boost\";\nimport { gql } from \"apollo-boost\";\nimport store from \"./redux/store1\";\nimport Config from \"Config\";\nimport { defaultStyles } from \"./constants/style-constants/utils\";\nvar client = new ApolloClient({\n  uri: Config.api_server\n});\nvar styles = _objectSpread({}, defaultStyles);\n\n// if (process.env.NODE_ENV === \"production\") {\n//   console.log = () => {};\n//   console.error = () => {};\n//   console.debug = () => {};\n// }\nReactDOM.render( /*#__PURE__*/React.createElement(ThemeProvider, {\n  theme: styles,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(ApolloProvider, {\n  client: client,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }\n})))), document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","map":{"version":3,"names":["React","ReactDOM","App","serviceWorker","ThemeProvider","Provider","configureStore","ApolloProvider","ApolloClient","gql","store","Config","defaultStyles","client","uri","api_server","styles","_objectSpread","render","createElement","theme","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","document","getElementById","unregister"],"sources":["/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"./redux/store\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport ApolloClient from \"apollo-boost\";\nimport { gql } from \"apollo-boost\";\nimport store from \"./redux/store1\";\n\nimport Config from \"Config\";\n\nimport { defaultStyles } from \"./constants/style-constants/utils\";\n\nconst client = new ApolloClient({\n  uri: Config.api_server,\n});\n\nconst styles = { ...defaultStyles };\n\n// if (process.env.NODE_ENV === \"production\") {\n//   console.log = () => {};\n//   console.error = () => {};\n//   console.debug = () => {};\n// }\nReactDOM.render(\n  <ThemeProvider theme={styles}>\n    <ApolloProvider client={client}>\n      <Provider store={store}>\n        {/* <Provider store={configureStore()}> */}\n        <App />\n        {/* </Provider> */}\n      </Provider>\n    </ApolloProvider>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,KAAKC,aAAa,MAAM,iBAAiB;AAChD,SAASC,aAAa,QAAQ,mBAAmB;AAEjD,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,cAAc,QAAQ,qBAAqB;AACpD,OAAOC,YAAY,MAAM,cAAc;AACvC,SAASC,GAAG,QAAQ,cAAc;AAClC,OAAOC,KAAK,MAAM,gBAAgB;AAElC,OAAOC,MAAM,MAAM,QAAQ;AAE3B,SAASC,aAAa,QAAQ,mCAAmC;AAEjE,IAAMC,MAAM,GAAG,IAAIL,YAAY,CAAC;EAC9BM,GAAG,EAAEH,MAAM,CAACI;AACd,CAAC,CAAC;AAEF,IAAMC,MAAM,GAAAC,aAAA,KAAQL,aAAa,CAAE;;AAEnC;AACA;AACA;AACA;AACA;AACAX,QAAQ,CAACiB,MAAM,eACblB,KAAA,CAAAmB,aAAA,CAACf,aAAa;EAACgB,KAAK,EAAEJ,MAAO;EAAAK,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,gBAC3B1B,KAAA,CAAAmB,aAAA,CAACZ,cAAc;EAACM,MAAM,EAAEA,MAAO;EAAAQ,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,gBAC7B1B,KAAA,CAAAmB,aAAA,CAACd,QAAQ;EAACK,KAAK,EAAEA,KAAM;EAAAW,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,gBAErB1B,KAAA,CAAAmB,aAAA,CAACjB,GAAG;EAAAmB,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,CAAE,CAEE,CACI,CACH,CAAC,EAChBC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC;;AAED;AACA;AACA;AACAzB,aAAa,CAAC0B,UAAU,CAAC,CAAC"},"metadata":{},"sourceType":"module"}