{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport getOffset from '../utils/getOffset';\nvar SuggestionPortal = function (_React$Component) {\n  _inherits(SuggestionPortal, _React$Component);\n  function SuggestionPortal() {\n    var _temp, _this, _ret;\n    _classCallCheck(this, SuggestionPortal);\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.matchDecorates = function (props) {\n      var callbacks = props.callbacks,\n        suggestionRegex = props.suggestionRegex,\n        decoratedText = props.decoratedText;\n      var matches = suggestionRegex.exec(decoratedText);\n      _this.trigger = matches[2];\n      _this.updatePortalPosition(_this.props);\n      callbacks.setEditorState(callbacks.getEditorState());\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  SuggestionPortal.prototype.componentWillMount = function componentWillMount() {\n    this.matchDecorates(this.props);\n  };\n  SuggestionPortal.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (nextProps.decoratedText !== this.props.decoratedText) {\n      this.matchDecorates(nextProps);\n    }\n    this.updatePortalPosition(nextProps);\n  };\n  SuggestionPortal.prototype.componentWillUnmount = function componentWillUnmount() {\n    var _props = this.props,\n      offsetKey = _props.offsetKey,\n      mentionStore = _props.mentionStore;\n    mentionStore.inActiveSuggestion({\n      offsetKey: offsetKey\n    });\n  };\n  SuggestionPortal.prototype.updatePortalPosition = function updatePortalPosition(props) {\n    var _this2 = this;\n    var offsetKey = props.offsetKey,\n      mentionStore = props.mentionStore;\n    mentionStore.updateSuggestion({\n      offsetKey: offsetKey,\n      trigger: this.trigger,\n      position: function position() {\n        var element = _this2.searchPortal;\n        var rect = getOffset(element);\n        return {\n          left: rect.left,\n          top: rect.top,\n          width: element.offsetWidth,\n          height: element.offsetHeight\n        };\n      }\n    });\n  };\n  SuggestionPortal.prototype.render = function render() {\n    var _this3 = this;\n    return React.createElement('span', {\n      ref: function ref(node) {\n        _this3.searchPortal = node;\n      },\n      style: this.props.style\n    }, this.props.children);\n  };\n  return SuggestionPortal;\n}(React.Component);\nSuggestionPortal.propTypes = {\n  offsetKey: PropTypes.any,\n  mentionStore: PropTypes.object,\n  decoratedText: PropTypes.string,\n  children: PropTypes.any,\n  callbacks: PropTypes.any,\n  suggestionRegex: PropTypes.any\n};\nexport default SuggestionPortal;","map":null,"metadata":{},"sourceType":"module"}