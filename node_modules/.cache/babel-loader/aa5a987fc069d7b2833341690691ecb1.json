{"ast":null,"code":"import _classCallCheck from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _slicedToArray from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/src/pages/modules/liabilities_credit/LiabilityCreditNew.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Icon } from \"antd\";\nimport ImageIcon from \"assets/images/asset.png\";\nimport AssetPlanet from \"assets/images/asset-planet-logo.jpg\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { QL_LIABILITIES_CREDIT_ADD, QL_LIABILITIES_CREDIT_UPDATE, QL_LIABILITIES_CREDIT_GET } from \"../../../constants/queries\";\nimport { FormPagePose } from \"../../../components/Animations\";\nimport LiabilityCreditTypeSubForm from \"./subforms/LiabilityCreditTypeSubForm\";\nimport MainSubForm from \"./subforms/MainSubForm\";\nimport CreditCardInformationSubForm from \"./subforms/CreditCardInformationSubForm\";\nimport LoanInformationSubForm from \"./subforms/LoanInformationSubForm\";\nimport HelocInformationSubForm from \"./subforms/HelocInformationSubForm\";\nimport LoanPaybackSubForm from \"./subforms/LoanPaybackSubForm\";\nimport AdjustableLoanDetailsSubForm from \"./subforms/AdjustableLoanDetailsSubForm\";\nimport QuestionAdditionalPaymentSubForm from \"./subforms/QuestionAdditionalPaymentSubForm\";\nimport AdditionalPaymentInformationSubForm from \"./subforms/AdditionalPaymentInformationSubForm\";\nimport EndSubForm from \"./subforms/EndSubForm\";\nimport { float2Currency } from \"helpers/Utils\";\nimport FirstStep from \"./subforms/FirstStep\";\nimport First from \"./subforms/First\";\nimport SecondForm from \"./subforms/SecondForm\";\nimport ThirdForm from \"./subforms/ThirdForm\";\nvar fnMutationLiabilitiesCreditAdd = null;\nvar dataMutationLiabilitiesCreditAdd = null;\nvar fnMutationLiabilitiesCreditUpdate = null;\nvar dataMutationLiabilitiesCreditUpdate = null;\nvar prevPos = 0;\nfunction HiddenHook() {\n  var _useMutation = useMutation(QL_LIABILITIES_CREDIT_ADD);\n  var _useMutation2 = _slicedToArray(_useMutation, 2);\n  fnMutationLiabilitiesCreditAdd = _useMutation2[0];\n  dataMutationLiabilitiesCreditAdd = _useMutation2[1].dataMutationLiabilitiesCreditAdd;\n  var _useMutation3 = useMutation(QL_LIABILITIES_CREDIT_UPDATE);\n  var _useMutation4 = _slicedToArray(_useMutation3, 2);\n  fnMutationLiabilitiesCreditUpdate = _useMutation4[0];\n  dataMutationLiabilitiesCreditUpdate = _useMutation4[1].dataMutationLiabilitiesCreditUpdate;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }\n  });\n}\nfunction initialFormData(data) {\n  var formData = [];\n  if (data.hasOwnProperty(\"liabilitiesAndCredit\")) {\n    formData.push({\n      id: \"LiabilityCreditTypeSubForm\",\n      data: LiabilityCreditTypeSubForm.FnCreateFormData({\n        value: data[\"liabilitiesAndCredit\"][\"liabilityType\"]\n      }),\n      visible: true,\n      stepId: \"StepLiabilityCreditTypeSubForm\"\n    });\n    formData.push({\n      id: \"MainSubForm\",\n      data: MainSubForm.FnCreateFormData({\n        liabilityType: data[\"liabilitiesAndCredit\"][\"liabilityType\"],\n        name: data[\"liabilitiesAndCredit\"][\"nameOfLiability\"],\n        owner: data[\"liabilitiesAndCredit\"][\"owner\"]\n      }),\n      visible: true,\n      stepId: \"StepMainSubForm\"\n    });\n    formData.push({\n      id: \"LoanInformationSubForm\",\n      data: LoanInformationSubForm.FnCreateFormData({\n        initialAmount: data[\"liabilitiesAndCredit\"][\"initialLoanAmount\"],\n        maturityDate: data[\"liabilitiesAndCredit\"][\"maturityDate\"],\n        startDate: data[\"liabilitiesAndCredit\"][\"startDate\"],\n        interestRate: data[\"liabilitiesAndCredit\"][\"interestRate\"],\n        monthlyPayment: data[\"liabilitiesAndCredit\"][\"monthlyPayment\"],\n        accountDigits: data[\"liabilitiesAndCredit\"][\"last4DigitsOfAccount\"],\n        financialName: data[\"liabilitiesAndCredit\"][\"nameOfFinancialInstitution\"],\n        loanLength: data[\"liabilitiesAndCredit\"][\"lengthOfLoan\"],\n        associatedAsset: data[\"liabilitiesAndCredit\"][\"associatedAsset\"]\n      }),\n      visible: true,\n      stepId: \"StepAdditionalInformation\"\n    });\n    formData.push({\n      id: \"CreditCardInformationSubForm\",\n      data: CreditCardInformationSubForm.FnCreateFormData({\n        creditLimit: data[\"liabilitiesAndCredit\"][\"additionalCreditCardInformation\"][\"creditLimit\"],\n        // totalCredit: data['liabilitiesAndCredit']['additionalCreditCardInformation']['totalCreditAvailable'],\n        creditBalance: data[\"liabilitiesAndCredit\"][\"additionalCreditCardInformation\"][\"creditBalance\"],\n        monthlyPayment: data[\"liabilitiesAndCredit\"][\"additionalCreditCardInformation\"][\"monthlyPayment\"],\n        interestRate: data[\"liabilitiesAndCredit\"][\"additionalCreditCardInformation\"][\"interestRate\"],\n        phoneNumber: data[\"liabilitiesAndCredit\"][\"additionalCreditCardInformation\"][\"phoneNumberOfIssuer\"],\n        annualFee: data[\"liabilitiesAndCredit\"][\"additionalCreditCardInformation\"][\"annualFee\"],\n        pointBalance: data[\"liabilitiesAndCredit\"][\"additionalCreditCardInformation\"][\"pointBalance\"],\n        // creditRewards: data['liabilitiesAndCredit']['additionalCreditCardInformation']['creditCardRewardsProgram'],\n        creditNotes: data[\"liabilitiesAndCredit\"][\"additionalCreditCardInformation\"][\"additionalNotesAboutCreditCard\"],\n        expiration: data[\"liabilitiesAndCredit\"][\"additionalCreditCardInformation\"][\"pointExpiration\"]\n      }),\n      visible: true,\n      stepId: \"StepAdditionalInformation\"\n    });\n    formData.push({\n      id: \"HelocInformationSubForm\",\n      data: HelocInformationSubForm.FnCreateFormData({\n        creditLimit: \"\",\n        totalCreditAvailable: \"\",\n        creditBalance: \"\",\n        interestRate: \"\",\n        monthlyPayment: \"\",\n        drawPeriodEndDate: \"\",\n        drawPeriodStartDate: \"\",\n        startDateRepayment: \"\",\n        endDateRepayment: \"\"\n      }),\n      visible: true,\n      stepId: \"StepAdditionalInformation\"\n    });\n    formData.push({\n      id: \"LoanPaybackSubForm\",\n      data: LoanPaybackSubForm.FnCreateFormData({\n        loanPaybackType: data[\"liabilitiesAndCredit\"][\"loanPaybackType\"],\n        loanType: data[\"liabilitiesAndCredit\"][\"typeOfLoan\"]\n      }),\n      visible: true,\n      stepId: \"StepLoan\"\n    });\n    formData.push({\n      id: \"AdjustableLoanDetailsSubForm\",\n      data: AdjustableLoanDetailsSubForm.FnCreateFormData(data[\"liabilitiesAndCredit\"][\"adjustableLoanDetails\"]),\n      visible: true,\n      stepId: \"StepLoanAdjust\"\n    });\n    formData.push({\n      id: \"QuestionAdditionalPaymentSubForm\",\n      data: QuestionAdditionalPaymentSubForm.FnCreateFormData({\n        value: \"\"\n      }),\n      visible: false,\n      stepId: \"StepPayments\"\n    });\n    formData.push({\n      id: \"AdditionalPaymentInformationSubForm\",\n      data: AdditionalPaymentInformationSubForm.FnCreateFormData(data[\"liabilitiesAndCredit\"][\"additionalPrincipals\"]),\n      visible: true,\n      stepId: \"StepPayments\"\n    });\n  } else {\n    formData.push({\n      id: \"LiabilityCreditTypeSubForm\",\n      data: LiabilityCreditTypeSubForm.FnCreateFormData({\n        value: \"\"\n      }),\n      visible: true,\n      stepId: \"StepLiabilityCreditTypeSubForm\"\n    });\n    formData.push({\n      id: \"MainSubForm\",\n      data: MainSubForm.FnCreateFormData({\n        liabilityType: \"\",\n        name: \"\",\n        owner: \"\"\n      }),\n      visible: true,\n      stepId: \"StepMainSubForm\"\n    });\n    formData.push({\n      id: \"LoanInformationSubForm\",\n      data: LoanInformationSubForm.FnCreateFormData({\n        initialAmount: \"\",\n        maturityDate: \"\",\n        startDate: \"\",\n        interestRate: \"\",\n        monthlyPayment: \"\",\n        accountDigits: \"\",\n        financialName: \"\",\n        loanLength: \"\",\n        associatedAsset: \"\"\n      }),\n      visible: true,\n      stepId: \"StepAdditionalInformation\"\n    });\n    formData.push({\n      id: \"CreditCardInformationSubForm\",\n      data: CreditCardInformationSubForm.FnCreateFormData({\n        creditLimit: \"\",\n        // totalCredit: data['liabilitiesAndCredit']['additionalCreditCardInformation']['totalCreditAvailable'],\n        creditBalance: \"\",\n        monthlyPayment: \"\",\n        interestRate: \"\",\n        phoneNumber: \"\",\n        annualFee: \"\",\n        pointBalance: \"\",\n        // creditRewards: data['liabilitiesAndCredit']['additionalCreditCardInformation']['creditCardRewardsProgram'],\n        creditNotes: \"\",\n        expiration: \"\"\n      }),\n      visible: true,\n      stepId: \"StepAdditionalInformation\"\n    });\n    formData.push({\n      id: \"HelocInformationSubForm\",\n      data: HelocInformationSubForm.FnCreateFormData({\n        creditLimit: \"\",\n        totalCreditAvailable: \"\",\n        creditBalance: \"\",\n        interestRate: \"\",\n        monthlyPayment: \"\",\n        drawPeriodEndDate: \"\",\n        drawPeriodStartDate: \"\",\n        startDateRepayment: \"\",\n        endDateRepayment: \"\"\n      }),\n      visible: true,\n      stepId: \"StepAdditionalInformation\"\n    });\n    formData.push({\n      id: \"LoanPaybackSubForm\",\n      data: LoanPaybackSubForm.FnCreateFormData({\n        loanPaybackType: \"\",\n        loanType: \"\"\n      }),\n      visible: true,\n      stepId: \"StepLoan\"\n    });\n    formData.push({\n      id: \"AdjustableLoanDetailsSubForm\",\n      data: AdjustableLoanDetailsSubForm.FnCreateFormData([]),\n      visible: true,\n      stepId: \"StepLoanAdjust\"\n    });\n    formData.push({\n      id: \"QuestionAdditionalPaymentSubForm\",\n      data: QuestionAdditionalPaymentSubForm.FnCreateFormData({\n        value: \"\"\n      }),\n      visible: false,\n      stepId: \"StepPayments\"\n    });\n    formData.push({\n      id: \"AdditionalPaymentInformationSubForm\",\n      data: AdditionalPaymentInformationSubForm.FnCreateFormData([]),\n      visible: true,\n      stepId: \"StepPayments\"\n    });\n  }\n  return formData;\n}\nfunction LoadDBDataHook(props) {\n  if (props.dbID != null && props.dbID != \"\") {\n    var _useQuery = useQuery(QL_LIABILITIES_CREDIT_GET, {\n        variables: {\n          id: props.dbID\n        }\n      }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n    if (data) {\n      console.log(\"call..\", data);\n      props.cbLoadDBData(initialFormData(data));\n    }\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 10\n    }\n  });\n}\nvar LiabilityCreditNew = /*#__PURE__*/function (_Component) {\n  _inherits(LiabilityCreditNew, _Component);\n  function LiabilityCreditNew(props) {\n    var _this;\n    _classCallCheck(this, LiabilityCreditNew);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LiabilityCreditNew).call(this, props));\n    _this.toggleRightSide = function (e) {\n      e.preventDefault();\n      _this.setState({\n        isRightSideOpen: !_this.state.isRightSideOpen\n      });\n    };\n    var dbID = null;\n    var dbLoaded = true;\n    var liabilitiesCreditID = _this.props.match.params.liabilitiesCreditID;\n    if (liabilitiesCreditID) {\n      dbID = liabilitiesCreditID;\n      dbLoaded = false;\n    }\n    var formData = initialFormData({});\n    _this.state = {\n      dataID: dbID,\n      curSubFormID: \"LiabilityCreditTypeSubForm\",\n      curSubForm: LiabilityCreditTypeSubForm,\n      formVisible: false,\n      subFormData: {},\n      formData: formData,\n      isRightSideOpen: true,\n      stepsAttribute: [],\n      formSteps: [{\n        id: \"StepLiabilityCreditTypeSubForm\",\n        icon: \"icon_ex.png\",\n        title: \"Liability or Credit\"\n      }, {\n        id: \"StepMainSubForm\",\n        icon: \"icon_ex.png\",\n        title: \"Name and Owner\",\n        component: First\n      }, {\n        id: \"StepAdditionalInformation\",\n        icon: \"icon_ex.png\",\n        title: \"Additional Information\",\n        component: SecondForm\n      }, {\n        id: \"StepLoan\",\n        icon: \"icon_ex.png\",\n        title: \"Loan\",\n        component: ThirdForm\n      }, {\n        id: \"StepLoanAdjust\",\n        icon: \"icon_ex.png\",\n        title: \"Adjustable Loan\"\n      }, {\n        id: \"StepPayments\",\n        icon: \"icon_ex.png\",\n        title: \"Payments\"\n      }],\n      dbLoaded: dbLoaded,\n      dbID: dbID,\n      formStep2FormMap: {\n        // \"stepid\": ['form id', 'formid', 'formid']\n        StepLiabilityCreditTypeSubForm: [\"LiabilityCreditTypeSubForm\"],\n        StepMainSubForm: [\"MainSubForm\"],\n        StepAdditionalInformation: [\"LoanInformationSubForm\", \"CreditCardInformationSubForm\", \"HelocInformationSubForm\"],\n        StepLoan: [\"LoanPaybackSubForm\", \"AdjustableLoanDetailsSubForm\"],\n        StepLoanAdjust: [\"AdjustableLoanDetailsSubForm\"],\n        StepPayments: [\"QuestionAdditionalPaymentSubForm\", \"AdditionalPaymentInformationSubForm\"]\n      },\n      isEndForm: false\n    };\n    _this.goSubForm = _this.goSubForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateSubForm = _this.updateSubForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSubFormData = _this.getSubFormData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSubFormField = _this.getSubFormField.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createQLVariable = _this.createQLVariable.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSubFormFieldValue = _this.getSubFormFieldValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleRightSide = _this.toggleRightSide.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadDBData = _this.loadDBData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getRightSideFormData = _this.getRightSideFormData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getTopNav = _this.getTopNav.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.goNext = _this.goNext.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.goPrev = _this.goPrev.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  _createClass(LiabilityCreditNew, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.goSubForm(this.state.formSteps[0][\"id\"]);\n      console.log();\n      // this.goSubForm('CreditCardInformationSubForm');\n    }\n  }, {\n    key: \"getSubFormField\",\n    value: function getSubFormField(formID, fieldID) {\n      var formData = this.state.formData;\n      console.log(\"getsubformformData\", formData, fieldID);\n      for (var index = 0; index < formData.length; index++) {\n        if (formData[index][\"id\"] == formID) {\n          var data = formData[index][\"data\"];\n          var fields = data[\"fields\"];\n          for (var findex = 0; findex < fields.length; findex++) {\n            if (fields[findex][\"id\"] == fieldID) {\n              return fields[findex];\n            }\n          }\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"getSubFormFieldValue\",\n    value: function getSubFormFieldValue(formID, fieldID) {\n      console.log(\"fieldID\", fieldID, formID);\n      var field = this.getSubFormField(formID, fieldID);\n      if (field == null) {\n        return \"\";\n      } else {\n        return field.value;\n      }\n    }\n  }, {\n    key: \"createQLVariable\",\n    value: function createQLVariable(subFormID, subFormData) {\n      var varQL = null;\n      switch (subFormID) {\n        case \"LiabilityCreditTypeSubForm\":\n          varQL = {\n            liabilitiesAndCredit: {\n              liabilityType: this.getSubFormFieldValue(subFormID, \"liabilityCreditType\")\n            }\n          };\n          break;\n        case \"MainSubForm\":\n          varQL = {\n            liabilitiesAndCredit: {\n              nameOfLiability: this.getSubFormFieldValue(subFormID, \"name\"),\n              owner: this.getSubFormFieldValue(subFormID, \"owner\")\n            }\n          };\n          break;\n        case \"LoanInformationSubForm\":\n          varQL = {\n            liabilitiesAndCredit: {\n              initialLoanAmount: parseInt(this.getSubFormFieldValue(subFormID, \"initialAmount\")),\n              maturityDate: this.getSubFormFieldValue(subFormID, \"maturityDate\"),\n              startDate: this.getSubFormFieldValue(subFormID, \"startDate\"),\n              interestRate: parseInt(this.getSubFormFieldValue(subFormID, \"interestRate\")),\n              monthlyPayment: parseInt(this.getSubFormFieldValue(subFormID, \"monthlyPayment\")),\n              last4DigitsOfAccount: this.getSubFormFieldValue(subFormID, \"accountDigits\"),\n              nameOfFinancialInstitution: this.getSubFormFieldValue(subFormID, \"financialName\"),\n              associatedAsset: this.getSubFormFieldValue(subFormID, \"associatedAsset\")\n            }\n          };\n          break;\n        case \"CreditCardInformationSubForm\":\n          varQL = {\n            additionalCreditCardInformation: {\n              creditLimit: parseFloat(this.getSubFormFieldValue(subFormID, \"creditLimit\")),\n              creditBalance: parseFloat(this.getSubFormFieldValue(subFormID, \"creditBalance\")),\n              // \"monthlyPayment\": parseFloat(this.getSubFormFieldValue(subFormID, 'monthlyPayment')),\n              // 'apr'\n              phoneNumberOfIssuer: this.getSubFormFieldValue(subFormID, \"phoneNumber\"),\n              annualFee: parseInt(this.getSubFormFieldValue(subFormID, \"annualFee\")),\n              pointBalance: this.getSubFormFieldValue(subFormID, \"pointBalance\"),\n              additionalNotesAboutCreditCard: this.getSubFormFieldValue(subFormID, \"creditNotes\"),\n              pointExpiration: this.getSubFormFieldValue(subFormID, \"expiration\")\n            }\n          };\n          break;\n        case \"LoanPaybackSubForm\":\n          varQL = {\n            liabilitiesAndCredit: {\n              loanPaybackType: this.getSubFormFieldValue(subFormID, \"loanPaybackType\"),\n              typeOfLoan: this.getSubFormFieldValue(subFormID, \"loanType\")\n            }\n          };\n          break;\n        case \"AdjustableLoanDetailsSubForm\":\n          varQL = {\n            adjustableLoanDetails: subFormData\n          };\n          break;\n        case \"QuestionAdditionalPaymentSubForm\":\n          break;\n        case \"AdditionalPaymentInformationSubForm\":\n          varQL = {\n            additionalPrincipals: subFormData\n          };\n          break;\n      }\n      return varQL;\n    }\n  }, {\n    key: \"updateSubForm\",\n    value: function updateSubForm(subFormID, subFormData) {\n      var visible = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var bEnd = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      console.log(\"updateSubForm:\", subFormID, subFormData, visible, bEnd);\n      var formData = this.state.formData;\n      var bFound = false;\n      for (var findex = 0; findex < formData.length; findex++) {\n        if (formData[findex][\"id\"] == subFormID) {\n          formData[findex][\"data\"] = subFormData;\n          bFound = true;\n        }\n      }\n      if (!bFound) {\n        formData.push({\n          id: subFormID,\n          data: subFormData,\n          visible: visible\n        });\n      }\n      var varQL = this.createQLVariable(subFormID, subFormData);\n      console.log(\"varQL:\", varQL, \", dataID:\", this.state.dataID);\n      var instance = this;\n      varQL = null;\n      if (varQL != null) {\n        if (this.state.dataID == null) {\n          fnMutationLiabilitiesCreditAdd({\n            variables: {\n              data: varQL\n            }\n          }).then(function (response) {\n            instance.setState({\n              dataID: response[\"data\"][\"createLiabilitiesAndCredit\"][\"id\"]\n            });\n          });\n        } else {\n          fnMutationLiabilitiesCreditUpdate({\n            variables: {\n              id: this.state.dataID,\n              data: varQL\n            }\n          }).then(function (response) {\n            if (bEnd) {\n              alert(\"Updated Successfully\");\n              instance.props.history.push(\"/liabilities_credit\");\n            }\n          });\n        }\n      }\n      this.setState({\n        formData: formData\n      });\n      console.log(\"formData:\", formData);\n    }\n  }, {\n    key: \"getSubFormData\",\n    value: function getSubFormData(subFormID) {\n      var fromState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var pformData = arguments.length > 2 ? arguments[2] : undefined;\n      var formData;\n      if (fromState) {\n        formData = this.state.formData;\n      } else {\n        formData = pformData;\n      }\n      for (var findex = 0; findex < formData.length; findex++) {\n        if (formData[findex][\"id\"] == subFormID) {\n          return formData[findex][\"data\"];\n        }\n      }\n      return {};\n    }\n  }, {\n    key: \"goSubForm\",\n    value: function goSubForm(subFormID) {\n      var _this2 = this;\n      // if(!this.state.dbLoaded){\n      //     return;\n      // }\n      console.log(\"subFormID\", subFormID);\n      if (subFormID === 'StepLiabilityCreditTypeSubForm') {\n        var fd = initialFormData({});\n        this.setState({\n          formData: fd,\n          isEndForm: false\n        });\n      }\n      var nextSubForm = LiabilityCreditTypeSubForm;\n      this.setState({\n        formVisible: false\n      });\n      var liabilityCreditType = this.getSubFormFieldValue(\"LiabilityCreditTypeSubForm\", \"liabilityCreditType\");\n      switch (subFormID) {\n        case \"LiabilityCreditTypeSubForm\":\n          nextSubForm = LiabilityCreditTypeSubForm;\n          break;\n        case \"MainSubForm\":\n          nextSubForm = First;\n          break;\n        case \"LoanInformationSubForm\":\n          nextSubForm = SecondForm;\n          break;\n        case \"HelocInformationSubForm\":\n          nextSubForm = HelocInformationSubForm;\n          break;\n        case \"CreditCardInformationSubForm\":\n          nextSubForm = CreditCardInformationSubForm;\n          break;\n        case \"LoanPaybackSubForm\":\n          nextSubForm = ThirdForm;\n          break;\n        case \"AdjustableLoanDetailsSubForm\":\n          nextSubForm = AdjustableLoanDetailsSubForm;\n          break;\n        case \"QuestionAdditionalPaymentSubForm\":\n          nextSubForm = QuestionAdditionalPaymentSubForm;\n          break;\n        case \"AdditionalPaymentInformationSubForm\":\n          nextSubForm = AdditionalPaymentInformationSubForm;\n          break;\n        case \"EndSubForm\":\n          nextSubForm = EndSubForm;\n          this.setState({\n            isEndForm: true\n          });\n          break;\n        case \"StepLiabilityCreditTypeSubForm\":\n          this.setState({\n            isEndForm: false\n          });\n          nextSubForm = LiabilityCreditTypeSubForm;\n          subFormID = \"LiabilityCreditTypeSubForm\";\n          break;\n        case \"StepMainSubForm\":\n          nextSubForm = First;\n          subFormID = \"MainSubForm\";\n          break;\n        case \"StepAdditionalInformation\":\n          switch (liabilityCreditType) {\n            case \"Credit - HELOC\":\n              nextSubForm = HelocInformationSubForm;\n              subFormID = \"HelocInformationSubForm\";\n              break;\n            case \"Credit Card - Business\":\n            case \"Credit Card - Personal\":\n              nextSubForm = CreditCardInformationSubForm;\n              subFormID = \"CreditCardInformationSubForm\";\n              break;\n            default:\n              nextSubForm = SecondForm;\n              subFormID = \"LoanInformationSubForm\";\n          }\n          break;\n        case \"StepLoan\":\n          switch (liabilityCreditType) {\n            case \"Credit - HELOC\":\n              nextSubForm = QuestionAdditionalPaymentSubForm;\n              subFormID = \"QuestionAdditionalPaymentSubForm\";\n              break;\n            case \"Credit Card - Business\":\n            case \"Credit Card - Personal\":\n              nextSubForm = EndSubForm;\n              subFormID = \"EndSubForm\";\n              break;\n            default:\n              nextSubForm = ThirdForm;\n              subFormID = \"LoanPaybackSubForm\";\n          }\n          break;\n        case \"StepLoanAdjust\":\n          switch (liabilityCreditType) {\n            case \"Credit - HELOC\":\n              nextSubForm = QuestionAdditionalPaymentSubForm;\n              subFormID = \"QuestionAdditionalPaymentSubForm\";\n              break;\n            case \"Credit Card - Business\":\n            case \"Credit Card - Personal\":\n              nextSubForm = EndSubForm;\n              subFormID = \"EndSubForm\";\n              break;\n            default:\n              nextSubForm = AdjustableLoanDetailsSubForm;\n              subFormID = \"AdjustableLoanDetailsSubForm\";\n          }\n          break;\n        case \"StepPayments\":\n          switch (liabilityCreditType) {\n            case \"Credit - HELOC\":\n              nextSubForm = QuestionAdditionalPaymentSubForm;\n              subFormID = \"QuestionAdditionalPaymentSubForm\";\n              break;\n            case \"Credit Card - Business\":\n            case \"Credit Card - Personal\":\n              nextSubForm = EndSubForm;\n              subFormID = \"EndSubForm\";\n              break;\n            default:\n              nextSubForm = QuestionAdditionalPaymentSubForm;\n              subFormID = \"QuestionAdditionalPaymentSubForm\";\n          }\n          break;\n      }\n      var subFormData = this.getSubFormData(subFormID);\n      setTimeout(function () {\n        _this2.setState({\n          formVisible: true,\n          curSubFormID: subFormID,\n          curSubForm: nextSubForm,\n          subFormData: subFormData\n        });\n      }, 100);\n    }\n  }, {\n    key: \"loadDBData\",\n    value: function loadDBData(formData) {\n      console.log(\"formData:\", formData);\n      var instance = this;\n      setTimeout(function () {\n        instance.setState({\n          formVisible: true,\n          dbLoaded: true,\n          formData: formData,\n          subFormData: instance.getSubFormData(instance.state.curSubFormID, false, formData)\n        });\n      }, 100);\n    }\n  }, {\n    key: \"getTopNav\",\n    value: function getTopNav(formStep) {\n      var disabled = false;\n      var active = false;\n      var liabilityCreditType = this.getSubFormFieldValue(\"LiabilityCreditTypeSubForm\", \"liabilityCreditType\");\n\n      //getting stepid from subform\n      var curSubFormStepIndex = -1;\n      for (var sindex = 0; sindex < this.state.formSteps.length; sindex++) {\n        if (this.state.curSubFormID == \"EndSubForm\") {\n          if (this.state.formSteps[sindex].id == formStep.id) {\n            curSubFormStepIndex = sindex;\n            break;\n          }\n        }\n        for (var findex = 0; findex < this.state.formStep2FormMap[this.state.formSteps[sindex].id].length; findex++) {\n          if (this.state.formStep2FormMap[this.state.formSteps[sindex].id][findex] == this.state.curSubFormID) {\n            curSubFormStepIndex = sindex;\n            break;\n          }\n        }\n      }\n      if (this.state.isEndForm && formStep.id !== 'StepLiabilityCreditTypeSubForm') {\n        return {\n          disabled: true,\n          active: false\n        };\n      }\n      if (liabilityCreditType != null && liabilityCreditType != \"\") {\n        switch (formStep.id) {\n          case \"StepLiabilityCreditTypeSubForm\":\n            if (curSubFormStepIndex === 0) {\n              if (this.state.isEndForm) {\n                disabled = false;\n                active = true;\n              } else {\n                disabled = true;\n                active = false;\n                liabilityCreditType = '';\n              }\n            }\n            if (curSubFormStepIndex >= 0) {\n              active = true;\n            }\n            break;\n          case \"StepMainSubForm\":\n            if (curSubFormStepIndex >= 1) {\n              active = true;\n            }\n            break;\n          case \"StepAdditionalInformation\":\n            if (curSubFormStepIndex >= 2) {\n              active = true;\n            }\n            break;\n          case \"StepLoan\":\n            if (curSubFormStepIndex >= 3) {\n              active = true;\n            }\n            switch (liabilityCreditType) {\n              case \"Credit - HELOC\":\n              case \"Credit Card - Business\":\n              case \"Credit Card - Personal\":\n                disabled = true;\n            }\n            break;\n          case \"StepLoanAdjust\":\n            if (curSubFormStepIndex >= 4) {\n              active = true;\n            }\n            switch (liabilityCreditType) {\n              case \"Credit - HELOC\":\n              case \"Credit Card - Business\":\n              case \"Credit Card - Personal\":\n                disabled = true;\n            }\n            break;\n          case \"StepPayments\":\n            if (curSubFormStepIndex >= 5) {\n              active = true;\n            }\n            switch (liabilityCreditType) {\n              case \"Credit Card - Business\":\n              case \"Credit Card - Personal\":\n                disabled = true;\n            }\n            break;\n        }\n      } else {\n        if (formStep.id != \"StepLiabilityCreditTypeSubForm\") {\n          disabled = true;\n        }\n      }\n      return {\n        disabled: disabled,\n        active: active\n      };\n    }\n  }, {\n    key: \"getRightSideFormData\",\n    value: function getRightSideFormData(formStep) {\n      var formData = [];\n      var liabilityCreditType = this.getSubFormFieldValue(\"LiabilityCreditTypeSubForm\", \"liabilityCreditType\");\n      if (liabilityCreditType == null || liabilityCreditType == \"\") {\n        return formData;\n      }\n      for (var index = 0; index < this.state.formData.length; index++) {\n        if (formStep.id == this.state.formData[index][\"stepId\"]) {\n          switch (formStep.id) {\n            case \"StepLiabilityCreditTypeSubForm\":\n              formData.push(this.state.formData[index]);\n              break;\n            case \"StepMainSubForm\":\n              formData.push(this.state.formData[index]);\n              break;\n            case \"StepAdditionalInformation\":\n              if (this.state.formData[index][\"id\"] == \"LoanInformationSubForm\") {\n                if (liabilityCreditType != \"Credit - HELOC\" && liabilityCreditType != \"Credit Card - Business\" && liabilityCreditType != \"Credit Card - Personal\") {\n                  formData.push(this.state.formData[index]);\n                }\n              }\n              if (liabilityCreditType == \"Credit - HELOC\" && this.state.formData[index][\"id\"] == \"HelocInformationSubForm\") {\n                formData.push(this.state.formData[index]);\n              } else if (liabilityCreditType == \"Credit Card - Business\" && this.state.formData[index][\"id\"] == \"CreditCardInformationSubForm\") {\n                formData.push(this.state.formData[index]);\n              } else if (liabilityCreditType == \"Credit Card - Personal\" && this.state.formData[index][\"id\"] == \"CreditCardInformationSubForm\") {\n                formData.push(this.state.formData[index]);\n              }\n              break;\n            case \"StepLoan\":\n              switch (liabilityCreditType) {\n                case \"Credit - HELOC\":\n                case \"Credit Card - Business\":\n                case \"Credit Card - Personal\":\n                  break;\n                default:\n                  formData.push(this.state.formData[index]);\n                  break;\n              }\n              break;\n            case \"StepLoanAdjust\":\n              switch (liabilityCreditType) {\n                case \"Credit - HELOC\":\n                case \"Credit Card - Business\":\n                case \"Credit Card - Personal\":\n                  break;\n                default:\n                  formData.push(this.state.formData[index]);\n                  break;\n              }\n              break;\n            case \"StepPayments\":\n              switch (liabilityCreditType) {\n                case \"Credit Card - Business\":\n                case \"Credit Card - Personal\":\n                  break;\n                default:\n                  formData.push(this.state.formData[index]);\n                  break;\n              }\n              break;\n          }\n        }\n      }\n      console.log(\"getRightSideFormData\", formStep.id, liabilityCreditType, formData);\n      return formData;\n    }\n  }, {\n    key: \"goNext\",\n    value: function goNext(fromSubFormID) {\n      var nextSubFormID = \"\";\n      var liabilityCreditType = this.getSubFormFieldValue(\"LiabilityCreditTypeSubForm\", \"liabilityCreditType\");\n      var loanType = this.getSubFormFieldValue(\"LoanPaybackSubForm\", \"loanType\");\n      console.log(\"fromSubFormID\", fromSubFormID);\n      switch (fromSubFormID) {\n        // StepLiabilityCreditTypeSubForm\n        case \"LiabilityCreditTypeSubForm\":\n          nextSubFormID = \"MainSubForm\";\n          break;\n\n        // StepMainSubForm\n        case \"MainSubForm\":\n          switch (liabilityCreditType) {\n            case \"Credit - HELOC\":\n              nextSubFormID = \"HelocInformationSubForm\";\n              break;\n            case \"Credit Card - Business\":\n            case \"Credit Card - Personal\":\n              nextSubFormID = \"CreditCardInformationSubForm\";\n              break;\n            default:\n              nextSubFormID = \"LoanInformationSubForm\";\n          }\n          break;\n\n        // StepAdditionalInformation\n        case \"LoanInformationSubForm\":\n          nextSubFormID = \"LoanPaybackSubForm\";\n          break;\n        case \"CreditCardInformationSubForm\":\n          nextSubFormID = \"EndSubForm\";\n          break;\n        case \"HelocInformationSubForm\":\n          nextSubFormID = \"StepPayments\";\n          break;\n\n        // StepLoan\n        case \"LoanPaybackSubForm\":\n          switch (loanType) {\n            case \"Fixed\":\n              nextSubFormID = \"QuestionAdditionalPaymentSubForm\";\n              break;\n            case \"Adjustable\":\n              nextSubFormID = \"AdjustableLoanDetailsSubForm\";\n          }\n          switch (liabilityCreditType) {\n            case \"Credit - HELOC\":\n              nextSubFormID = \"StepPayments\";\n              break;\n            case \"Credit Card - Business\":\n            case \"Credit Card - Personal\":\n              nextSubFormID = \"EndSubForm\";\n              break;\n          }\n          break;\n        case \"AdjustableLoanDetailsSubForm\":\n          nextSubFormID = \"QuestionAdditionalPaymentSubForm\";\n          break;\n\n        // StepPayments\n        case \"QuestionAdditionalPaymentSubForm\":\n          var isAdditionalPayment = this.getSubFormFieldValue(\"QuestionAdditionalPaymentSubForm\", \"isAdditionalPayment\");\n          if (isAdditionalPayment == \"Yes\") {\n            nextSubFormID = \"AdditionalPaymentInformationSubForm\";\n          } else {\n            nextSubFormID = \"EndSubForm\";\n          }\n          break;\n        case \"AdditionalPaymentInformationSubForm\":\n          nextSubFormID = \"EndSubForm\";\n          break;\n      }\n      this.goSubForm(nextSubFormID);\n    }\n  }, {\n    key: \"goPrev\",\n    value: function goPrev(fromSubFormID) {\n      var prevSubFormID = \"\";\n      var assetsAllocation = this.getSubFormFieldValue(\"AssetAllocationSubForm\", \"assetsAllocation\");\n      switch (fromSubFormID) {\n        // StepLiabilityCreditTypeSubForm\n        case \"LiabilityCreditTypeSubForm\":\n          break;\n\n        // StepMainSubForm\n        case \"MainSubForm\":\n          prevSubFormID = \"LiabilityCreditTypeSubForm\";\n          break;\n\n        // StepAdditionalInformation\n        case \"LoanInformationSubForm\":\n          prevSubFormID = \"MainSubForm\";\n          break;\n        case \"CreditCardInformationSubForm\":\n          prevSubFormID = \"MainSubForm\";\n          break;\n        case \"HelocInformationSubForm\":\n          prevSubFormID = \"MainSubForm\";\n          break;\n\n        // StepLoan\n        case \"LoanPaybackSubForm\":\n          prevSubFormID = \"LoanInformationSubForm\";\n          break;\n        case \"AdjustableLoanDetailsSubForm\":\n          prevSubFormID = \"LoanPaybackSubForm\";\n          break;\n\n        // StepPayments\n        case \"QuestionAdditionalPaymentSubForm\":\n          break;\n        case \"AdditionalPaymentInformationSubForm\":\n          prevSubFormID = \"QuestionAdditionalPaymentSubForm\";\n          break;\n      }\n      this.goSubForm(prevSubFormID);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var navlinks = [{\n        href: \"/\",\n        title: \"Home\"\n      }, {\n        href: \"/modules\",\n        title: \"Modules\"\n      }, {\n        href: \"/liabilities_credit\",\n        title: \"Liabilities and Credit\"\n      }];\n      var SubForm = this.state.curSubForm;\n      var formpageClassName = \"form-page-container-wrap\";\n      if (this.state.isRightSideOpen) {\n        formpageClassName = \"form-page-container-wrap right-side--opend\";\n      } else {\n        formpageClassName = \"form-page-container-wrap right-side--collapsed\";\n      }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: formpageClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1161,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--main-side\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1162,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"steps\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1163,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logo-container align-items-top justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1164,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"img-asset\",\n        src: AssetPlanet,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1165,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"process\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1167,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"process-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1168,\n          columnNumber: 15\n        }\n      }, this.state.formSteps.map(function (formStep, index) {\n        var _this3$getTopNav = _this3.getTopNav(formStep),\n          disabled = _this3$getTopNav.disabled,\n          active = _this3$getTopNav.active;\n        var className = \"btn nav-items btn-circle\";\n        if (disabled) {\n          className = \"btn nav-items btn-circle disabled\";\n        } else if (active) {\n          className = \"btn nav-items btn-circle active\";\n        }\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"process-step\",\n          key: index,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1179,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: className,\n          \"data-toggle\": \"tab\",\n          onClick: function onClick() {\n            return !disabled ? _this3.goSubForm(formStep.id) : null;\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1180,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            fontSize: 30,\n            color: '#006400'\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1189,\n            columnNumber: 25\n          }\n        }, index + 1)), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"step-title\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1193,\n            columnNumber: 23\n          }\n        }, formStep.title));\n      })))), /*#__PURE__*/React.createElement(HiddenHook, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1200,\n          columnNumber: 11\n        }\n      }), !this.state.dbLoaded && /*#__PURE__*/React.createElement(LoadDBDataHook, {\n        dbLoaded: this.state.dbLoaded,\n        dbID: this.state.dbID,\n        cbLoadDBData: this.loadDBData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1202,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1208,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"page-nav-history\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1209,\n          columnNumber: 13\n        }\n      }), !this.state.dbLoaded && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1225,\n          columnNumber: 38\n        }\n      }, \"Loading...\"), this.state.dbLoaded && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1227,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--left-side\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1228,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormPagePose, {\n        className: \"info-form-block\",\n        pose: this.state.formVisible ? \"visible\" : \"hidden\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1229,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(SubForm, {\n        subFormData: this.state.subFormData,\n        cbGoSubForm: this.goSubForm,\n        cbUpdateSubForm: this.updateSubForm,\n        formData: this.state.formData,\n        cbGetSubFormField: this.getSubFormField,\n        dataID: this.state.dataID,\n        cbGoNext: this.goNext,\n        cbGoPrev: this.goPrev,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1233,\n          columnNumber: 21\n        }\n      })))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--right-side\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1249,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"right-side-collapse-icon\",\n        onClick: this.toggleRightSide,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1250,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fe-menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1254,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--right-side-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1256,\n          columnNumber: 11\n        }\n      }, this.state.formSteps.map(function (formStep, index) {\n        var formData = _this3.getRightSideFormData(formStep);\n        return formData.map(function (subForm, sindex) {\n          if (subForm.visible == false) {\n            return /*#__PURE__*/React.createElement(React.Fragment, {\n              key: sindex,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1261,\n                columnNumber: 26\n              }\n            });\n          }\n          var count = 0;\n          var go = false;\n          var fieldss = null;\n          var subFormData = subForm.data;\n          if (subFormData[\"rows\"]) {\n            fieldss = subFormData[\"rows\"];\n          } else if (subFormData[\"fields\"]) {\n            fieldss = subFormData[\"fields\"];\n          }\n          count = fieldss.length;\n          for (var i = 0; i < parseInt(count); i++) {\n            if (fieldss[i][\"value\"] != \"\") {\n              go = true;\n            }\n          }\n          // let subFormData = subForm.data;\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-block\",\n            key: sindex,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1283,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-top\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1284,\n              columnNumber: 21\n            }\n          }, go ? /*#__PURE__*/React.createElement(\"h4\", {\n            className: \"form-brief-title\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1286,\n              columnNumber: 25\n            }\n          }, subFormData.title) : null, /*#__PURE__*/React.createElement(\"span\", {\n            className: \"form-brief-edit-btn\",\n            onClick: function onClick() {\n              return _this3.goSubForm(subForm.stepId);\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1291,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(Icon, {\n            type: \"edit\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1295,\n              columnNumber: 25\n            }\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-content\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1298,\n              columnNumber: 21\n            }\n          }, subFormData.fields && subFormData.fields.map(function (field, ffindex) {\n            if (field.value == \"\" || field.value == null) {\n              return /*#__PURE__*/React.createElement(React.Fragment, {\n                key: ffindex,\n                __self: _this3,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1303,\n                  columnNumber: 31\n                }\n              });\n            }\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-item\",\n              key: ffindex,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1307,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"p\", {\n              className: \"form-brief-item-title\",\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1308,\n                columnNumber: 31\n              }\n            }, field.title != \"\" ? field.title + \":\" : null, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n              className: \"form-brief-item-value\",\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1311,\n                columnNumber: 31\n              }\n            }, field.hasOwnProperty(\"type\") && field[\"type\"] == \"currency\" && float2Currency(field.value), field.hasOwnProperty(\"type\") && field[\"type\"] == \"percent\" && field.value + \" %\", !field.hasOwnProperty(\"type\") && field.value));\n          }), subFormData.rows && subFormData.rows.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1325,\n              columnNumber: 25\n            }\n          }, subForm.id == \"AdditionalPaymentInformationSubForm\" && /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1328,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-row\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1329,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--33\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1330,\n              columnNumber: 35\n            }\n          }, \"Extra Principal Payment Description\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--33\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1333,\n              columnNumber: 35\n            }\n          }, \"How Much\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--33\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1336,\n              columnNumber: 35\n            }\n          }, \"How Often\")), subFormData.rows.map(function (additionalPayment, cindex) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-row\",\n              key: cindex,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1343,\n                columnNumber: 39\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--33\",\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1347,\n                columnNumber: 41\n              }\n            }, additionalPayment[\"extra_payment_description\"]), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--33\",\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1354,\n                columnNumber: 41\n              }\n            }, float2Currency(additionalPayment[\"howMuch\"])), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--33\",\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1359,\n                columnNumber: 41\n              }\n            }, additionalPayment[\"howOften\"]));\n          })), subForm.id == \"AdjustableLoanDetailsSubForm\" && /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1369,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-row\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1370,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--50\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1371,\n              columnNumber: 33\n            }\n          }, \"Date of Rate Change\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--50\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1374,\n              columnNumber: 33\n            }\n          }, \"newPercent\")), subFormData.rows.map(function (adjustableLoan, cindex) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-row\",\n              key: cindex,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1381,\n                columnNumber: 37\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--50\",\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1385,\n                columnNumber: 39\n              }\n            }, adjustableLoan[\"dateRateChange\"]), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--50\",\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1388,\n                columnNumber: 39\n              }\n            }, adjustableLoan[\"newPercent\"] + \" %\"));\n          })))));\n        });\n      }))));\n    }\n  }]);\n  return LiabilityCreditNew;\n}(Component);\nexport default connect()(LiabilityCreditNew);","map":{"version":3,"names":["React","Component","connect","Link","Icon","ImageIcon","AssetPlanet","useMutation","useQuery","QL_LIABILITIES_CREDIT_ADD","QL_LIABILITIES_CREDIT_UPDATE","QL_LIABILITIES_CREDIT_GET","FormPagePose","LiabilityCreditTypeSubForm","MainSubForm","CreditCardInformationSubForm","LoanInformationSubForm","HelocInformationSubForm","LoanPaybackSubForm","AdjustableLoanDetailsSubForm","QuestionAdditionalPaymentSubForm","AdditionalPaymentInformationSubForm","EndSubForm","float2Currency","FirstStep","First","SecondForm","ThirdForm","fnMutationLiabilitiesCreditAdd","dataMutationLiabilitiesCreditAdd","fnMutationLiabilitiesCreditUpdate","dataMutationLiabilitiesCreditUpdate","prevPos","HiddenHook","_useMutation","_useMutation2","_slicedToArray","_useMutation3","_useMutation4","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","initialFormData","data","formData","hasOwnProperty","push","id","FnCreateFormData","value","visible","stepId","liabilityType","name","owner","initialAmount","maturityDate","startDate","interestRate","monthlyPayment","accountDigits","financialName","loanLength","associatedAsset","creditLimit","creditBalance","phoneNumber","annualFee","pointBalance","creditNotes","expiration","totalCreditAvailable","drawPeriodEndDate","drawPeriodStartDate","startDateRepayment","endDateRepayment","loanPaybackType","loanType","LoadDBDataHook","props","dbID","_useQuery","variables","loading","error","console","log","cbLoadDBData","LiabilityCreditNew","_Component","_inherits","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","toggleRightSide","e","preventDefault","setState","isRightSideOpen","state","dbLoaded","liabilitiesCreditID","match","params","dataID","curSubFormID","curSubForm","formVisible","subFormData","stepsAttribute","formSteps","icon","title","component","formStep2FormMap","StepLiabilityCreditTypeSubForm","StepMainSubForm","StepAdditionalInformation","StepLoan","StepLoanAdjust","StepPayments","isEndForm","goSubForm","bind","_assertThisInitialized","updateSubForm","getSubFormData","getSubFormField","createQLVariable","getSubFormFieldValue","loadDBData","getRightSideFormData","getTopNav","goNext","goPrev","_createClass","key","componentDidMount","formID","fieldID","index","length","fields","findex","field","subFormID","varQL","liabilitiesAndCredit","nameOfLiability","initialLoanAmount","parseInt","last4DigitsOfAccount","nameOfFinancialInstitution","additionalCreditCardInformation","parseFloat","phoneNumberOfIssuer","additionalNotesAboutCreditCard","pointExpiration","typeOfLoan","adjustableLoanDetails","additionalPrincipals","arguments","undefined","bEnd","bFound","instance","then","response","alert","history","fromState","pformData","_this2","fd","nextSubForm","liabilityCreditType","setTimeout","formStep","disabled","active","curSubFormStepIndex","sindex","fromSubFormID","nextSubFormID","isAdditionalPayment","prevSubFormID","assetsAllocation","render","_this3","navlinks","href","SubForm","formpageClassName","className","src","map","_this3$getTopNav","type","onClick","style","fontSize","color","pose","cbGoSubForm","cbUpdateSubForm","cbGetSubFormField","cbGoNext","cbGoPrev","subForm","count","go","fieldss","i","ffindex","rows","additionalPayment","cindex","adjustableLoan"],"sources":["/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/src/pages/modules/liabilities_credit/LiabilityCreditNew.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Icon } from \"antd\";\nimport ImageIcon from \"assets/images/asset.png\";\nimport AssetPlanet from \"assets/images/asset-planet-logo.jpg\";\n\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport {\n  QL_LIABILITIES_CREDIT_ADD,\n  QL_LIABILITIES_CREDIT_UPDATE,\n  QL_LIABILITIES_CREDIT_GET,\n} from \"../../../constants/queries\";\n\nimport { FormPagePose } from \"../../../components/Animations\";\nimport LiabilityCreditTypeSubForm from \"./subforms/LiabilityCreditTypeSubForm\";\nimport MainSubForm from \"./subforms/MainSubForm\";\nimport CreditCardInformationSubForm from \"./subforms/CreditCardInformationSubForm\";\nimport LoanInformationSubForm from \"./subforms/LoanInformationSubForm\";\nimport HelocInformationSubForm from \"./subforms/HelocInformationSubForm\";\nimport LoanPaybackSubForm from \"./subforms/LoanPaybackSubForm\";\nimport AdjustableLoanDetailsSubForm from \"./subforms/AdjustableLoanDetailsSubForm\";\nimport QuestionAdditionalPaymentSubForm from \"./subforms/QuestionAdditionalPaymentSubForm\";\nimport AdditionalPaymentInformationSubForm from \"./subforms/AdditionalPaymentInformationSubForm\";\nimport EndSubForm from \"./subforms/EndSubForm\";\n\nimport { float2Currency } from \"helpers/Utils\";\nimport FirstStep from \"./subforms/FirstStep\";\nimport First from \"./subforms/First\";\nimport SecondForm from \"./subforms/SecondForm\";\nimport ThirdForm from \"./subforms/ThirdForm\";\n\nvar fnMutationLiabilitiesCreditAdd = null;\nvar dataMutationLiabilitiesCreditAdd = null;\n\nvar fnMutationLiabilitiesCreditUpdate = null;\nvar dataMutationLiabilitiesCreditUpdate = null;\nlet prevPos = 0;\n\nfunction HiddenHook() {\n  [\n    fnMutationLiabilitiesCreditAdd,\n    { dataMutationLiabilitiesCreditAdd },\n  ] = useMutation(QL_LIABILITIES_CREDIT_ADD);\n  [\n    fnMutationLiabilitiesCreditUpdate,\n    { dataMutationLiabilitiesCreditUpdate },\n  ] = useMutation(QL_LIABILITIES_CREDIT_UPDATE);\n\n  return <React.Fragment></React.Fragment>;\n}\n\nfunction initialFormData(data) {\n  let formData = [];\n\n  if (data.hasOwnProperty(\"liabilitiesAndCredit\")) {\n    formData.push({\n      id: \"LiabilityCreditTypeSubForm\",\n      data: LiabilityCreditTypeSubForm.FnCreateFormData({\n        value: data[\"liabilitiesAndCredit\"][\"liabilityType\"],\n      }),\n      visible: true,\n      stepId: \"StepLiabilityCreditTypeSubForm\",\n    });\n\n    formData.push({\n      id: \"MainSubForm\",\n      data: MainSubForm.FnCreateFormData({\n        liabilityType: data[\"liabilitiesAndCredit\"][\"liabilityType\"],\n        name: data[\"liabilitiesAndCredit\"][\"nameOfLiability\"],\n        owner: data[\"liabilitiesAndCredit\"][\"owner\"],\n      }),\n      visible: true,\n      stepId: \"StepMainSubForm\",\n    });\n\n    formData.push({\n      id: \"LoanInformationSubForm\",\n      data: LoanInformationSubForm.FnCreateFormData({\n        initialAmount: data[\"liabilitiesAndCredit\"][\"initialLoanAmount\"],\n        maturityDate: data[\"liabilitiesAndCredit\"][\"maturityDate\"],\n        startDate: data[\"liabilitiesAndCredit\"][\"startDate\"],\n        interestRate: data[\"liabilitiesAndCredit\"][\"interestRate\"],\n        monthlyPayment: data[\"liabilitiesAndCredit\"][\"monthlyPayment\"],\n        accountDigits: data[\"liabilitiesAndCredit\"][\"last4DigitsOfAccount\"],\n        financialName:\n          data[\"liabilitiesAndCredit\"][\"nameOfFinancialInstitution\"],\n        loanLength: data[\"liabilitiesAndCredit\"][\"lengthOfLoan\"],\n        associatedAsset: data[\"liabilitiesAndCredit\"][\"associatedAsset\"],\n      }),\n      visible: true,\n      stepId: \"StepAdditionalInformation\",\n    });\n\n    formData.push({\n      id: \"CreditCardInformationSubForm\",\n      data: CreditCardInformationSubForm.FnCreateFormData({\n        creditLimit:\n          data[\"liabilitiesAndCredit\"][\"additionalCreditCardInformation\"][\n          \"creditLimit\"\n          ],\n        // totalCredit: data['liabilitiesAndCredit']['additionalCreditCardInformation']['totalCreditAvailable'],\n        creditBalance:\n          data[\"liabilitiesAndCredit\"][\"additionalCreditCardInformation\"][\n          \"creditBalance\"\n          ],\n        monthlyPayment:\n          data[\"liabilitiesAndCredit\"][\"additionalCreditCardInformation\"][\n          \"monthlyPayment\"\n          ],\n        interestRate:\n          data[\"liabilitiesAndCredit\"][\"additionalCreditCardInformation\"][\n          \"interestRate\"\n          ],\n        phoneNumber:\n          data[\"liabilitiesAndCredit\"][\"additionalCreditCardInformation\"][\n          \"phoneNumberOfIssuer\"\n          ],\n        annualFee:\n          data[\"liabilitiesAndCredit\"][\"additionalCreditCardInformation\"][\n          \"annualFee\"\n          ],\n        pointBalance:\n          data[\"liabilitiesAndCredit\"][\"additionalCreditCardInformation\"][\n          \"pointBalance\"\n          ],\n        // creditRewards: data['liabilitiesAndCredit']['additionalCreditCardInformation']['creditCardRewardsProgram'],\n        creditNotes:\n          data[\"liabilitiesAndCredit\"][\"additionalCreditCardInformation\"][\n          \"additionalNotesAboutCreditCard\"\n          ],\n        expiration:\n          data[\"liabilitiesAndCredit\"][\"additionalCreditCardInformation\"][\n          \"pointExpiration\"\n          ],\n      }),\n      visible: true,\n      stepId: \"StepAdditionalInformation\",\n    });\n\n    formData.push({\n      id: \"HelocInformationSubForm\",\n      data: HelocInformationSubForm.FnCreateFormData({\n        creditLimit: \"\",\n        totalCreditAvailable: \"\",\n        creditBalance: \"\",\n        interestRate: \"\",\n        monthlyPayment: \"\",\n        drawPeriodEndDate: \"\",\n        drawPeriodStartDate: \"\",\n        startDateRepayment: \"\",\n        endDateRepayment: \"\",\n      }),\n      visible: true,\n      stepId: \"StepAdditionalInformation\",\n    });\n\n    formData.push({\n      id: \"LoanPaybackSubForm\",\n      data: LoanPaybackSubForm.FnCreateFormData({\n        loanPaybackType: data[\"liabilitiesAndCredit\"][\"loanPaybackType\"],\n        loanType: data[\"liabilitiesAndCredit\"][\"typeOfLoan\"],\n      }),\n      visible: true,\n      stepId: \"StepLoan\",\n    });\n\n    formData.push({\n      id: \"AdjustableLoanDetailsSubForm\",\n      data: AdjustableLoanDetailsSubForm.FnCreateFormData(\n        data[\"liabilitiesAndCredit\"][\"adjustableLoanDetails\"]\n      ),\n      visible: true,\n      stepId: \"StepLoanAdjust\",\n    });\n\n    formData.push({\n      id: \"QuestionAdditionalPaymentSubForm\",\n      data: QuestionAdditionalPaymentSubForm.FnCreateFormData({\n        value: \"\",\n      }),\n      visible: false,\n      stepId: \"StepPayments\",\n    });\n\n    formData.push({\n      id: \"AdditionalPaymentInformationSubForm\",\n      data: AdditionalPaymentInformationSubForm.FnCreateFormData(\n        data[\"liabilitiesAndCredit\"][\"additionalPrincipals\"]\n      ),\n      visible: true,\n      stepId: \"StepPayments\",\n    });\n  } else {\n    formData.push({\n      id: \"LiabilityCreditTypeSubForm\",\n      data: LiabilityCreditTypeSubForm.FnCreateFormData({\n        value: \"\",\n      }),\n      visible: true,\n      stepId: \"StepLiabilityCreditTypeSubForm\",\n    });\n\n    formData.push({\n      id: \"MainSubForm\",\n      data: MainSubForm.FnCreateFormData({\n        liabilityType: \"\",\n        name: \"\",\n        owner: \"\",\n      }),\n      visible: true,\n      stepId: \"StepMainSubForm\",\n    });\n\n    formData.push({\n      id: \"LoanInformationSubForm\",\n      data: LoanInformationSubForm.FnCreateFormData({\n        initialAmount: \"\",\n        maturityDate: \"\",\n        startDate: \"\",\n        interestRate: \"\",\n        monthlyPayment: \"\",\n        accountDigits: \"\",\n        financialName: \"\",\n        loanLength: \"\",\n        associatedAsset: \"\",\n      }),\n      visible: true,\n      stepId: \"StepAdditionalInformation\",\n    });\n\n    formData.push({\n      id: \"CreditCardInformationSubForm\",\n      data: CreditCardInformationSubForm.FnCreateFormData({\n        creditLimit: \"\",\n        // totalCredit: data['liabilitiesAndCredit']['additionalCreditCardInformation']['totalCreditAvailable'],\n        creditBalance: \"\",\n        monthlyPayment: \"\",\n        interestRate: \"\",\n        phoneNumber: \"\",\n        annualFee: \"\",\n        pointBalance: \"\",\n        // creditRewards: data['liabilitiesAndCredit']['additionalCreditCardInformation']['creditCardRewardsProgram'],\n        creditNotes: \"\",\n        expiration: \"\",\n      }),\n      visible: true,\n      stepId: \"StepAdditionalInformation\",\n    });\n\n    formData.push({\n      id: \"HelocInformationSubForm\",\n      data: HelocInformationSubForm.FnCreateFormData({\n        creditLimit: \"\",\n        totalCreditAvailable: \"\",\n        creditBalance: \"\",\n        interestRate: \"\",\n        monthlyPayment: \"\",\n        drawPeriodEndDate: \"\",\n        drawPeriodStartDate: \"\",\n        startDateRepayment: \"\",\n        endDateRepayment: \"\",\n      }),\n      visible: true,\n      stepId: \"StepAdditionalInformation\",\n    });\n\n    formData.push({\n      id: \"LoanPaybackSubForm\",\n      data: LoanPaybackSubForm.FnCreateFormData({\n        loanPaybackType: \"\",\n        loanType: \"\",\n      }),\n      visible: true,\n      stepId: \"StepLoan\",\n    });\n\n    formData.push({\n      id: \"AdjustableLoanDetailsSubForm\",\n      data: AdjustableLoanDetailsSubForm.FnCreateFormData([]),\n      visible: true,\n      stepId: \"StepLoanAdjust\",\n    });\n\n    formData.push({\n      id: \"QuestionAdditionalPaymentSubForm\",\n      data: QuestionAdditionalPaymentSubForm.FnCreateFormData({\n        value: \"\",\n      }),\n      visible: false,\n      stepId: \"StepPayments\",\n    });\n\n    formData.push({\n      id: \"AdditionalPaymentInformationSubForm\",\n      data: AdditionalPaymentInformationSubForm.FnCreateFormData([]),\n      visible: true,\n      stepId: \"StepPayments\",\n    });\n  }\n\n  return formData;\n}\n\nfunction LoadDBDataHook(props) {\n  if (props.dbID != null && props.dbID != \"\") {\n    const { data, loading, error } = useQuery(QL_LIABILITIES_CREDIT_GET, {\n      variables: { id: props.dbID },\n    });\n    if (data) {\n      console.log(\"call..\", data);\n      props.cbLoadDBData(initialFormData(data));\n    }\n  }\n\n  return <React.Fragment></React.Fragment>;\n}\n\nclass LiabilityCreditNew extends Component {\n  constructor(props) {\n    super(props);\n\n    let dbID = null;\n    let dbLoaded = true;\n\n    const { liabilitiesCreditID } = this.props.match.params;\n\n    if (liabilitiesCreditID) {\n      dbID = liabilitiesCreditID;\n      dbLoaded = false;\n    }\n\n    let formData = initialFormData({});\n\n    this.state = {\n      dataID: dbID,\n      curSubFormID: \"LiabilityCreditTypeSubForm\",\n      curSubForm: LiabilityCreditTypeSubForm,\n      formVisible: false,\n      subFormData: {},\n      formData: formData,\n      isRightSideOpen: true,\n      stepsAttribute: [],\n      formSteps: [\n        {\n          id: \"StepLiabilityCreditTypeSubForm\",\n          icon: \"icon_ex.png\",\n          title: \"Liability or Credit\",\n         \n        },\n        {\n          id: \"StepMainSubForm\",\n          icon: \"icon_ex.png\",\n          title: \"Name and Owner\",\n          component: First,\n        },\n        {\n          id: \"StepAdditionalInformation\",\n          icon: \"icon_ex.png\",\n          title: \"Additional Information\",\n          component: SecondForm,\n        },\n        {\n          id: \"StepLoan\",\n          icon: \"icon_ex.png\",\n          title: \"Loan\",\n          component: ThirdForm,\n        },\n        {\n          id: \"StepLoanAdjust\",\n          icon: \"icon_ex.png\",\n          title: \"Adjustable Loan\",\n        },\n        {\n          id: \"StepPayments\",\n          icon: \"icon_ex.png\",\n          title: \"Payments\",\n        },\n      ],\n      dbLoaded: dbLoaded,\n      dbID: dbID,\n      formStep2FormMap: {\n        // \"stepid\": ['form id', 'formid', 'formid']\n        StepLiabilityCreditTypeSubForm: [\"LiabilityCreditTypeSubForm\"],\n        StepMainSubForm: [\"MainSubForm\"],\n        StepAdditionalInformation: [\n          \"LoanInformationSubForm\",\n          \"CreditCardInformationSubForm\",\n          \"HelocInformationSubForm\",\n        ],\n        StepLoan: [\"LoanPaybackSubForm\", \"AdjustableLoanDetailsSubForm\"],\n        StepLoanAdjust: [\"AdjustableLoanDetailsSubForm\"],\n        StepPayments: [\n          \"QuestionAdditionalPaymentSubForm\",\n          \"AdditionalPaymentInformationSubForm\",\n        ],\n      },\n      isEndForm: false,\n    };\n\n    this.goSubForm = this.goSubForm.bind(this);\n    this.updateSubForm = this.updateSubForm.bind(this);\n    this.getSubFormData = this.getSubFormData.bind(this);\n    this.getSubFormField = this.getSubFormField.bind(this);\n\n    this.createQLVariable = this.createQLVariable.bind(this);\n    this.getSubFormFieldValue = this.getSubFormFieldValue.bind(this);\n\n    this.toggleRightSide = this.toggleRightSide.bind(this);\n\n    this.loadDBData = this.loadDBData.bind(this);\n\n    this.getRightSideFormData = this.getRightSideFormData.bind(this);\n    this.getTopNav = this.getTopNav.bind(this);\n\n    this.goNext = this.goNext.bind(this);\n    this.goPrev = this.goPrev.bind(this);\n  }\n\n  componentDidMount() {\n    this.goSubForm(this.state.formSteps[0][\"id\"]);\n\n    console.log()\n    // this.goSubForm('CreditCardInformationSubForm');\n  }\n\n  getSubFormField(formID, fieldID) {\n    let formData = this.state.formData;\n    console.log(\"getsubformformData\", formData, fieldID)\n    for (var index = 0; index < formData.length; index++) {\n      if (formData[index][\"id\"] == formID) {\n        let data = formData[index][\"data\"];\n        let fields = data[\"fields\"];\n\n        for (var findex = 0; findex < fields.length; findex++) {\n          if (fields[findex][\"id\"] == fieldID) {\n            return fields[findex];\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n\n  getSubFormFieldValue(formID, fieldID) {\n    console.log(\"fieldID\", fieldID, formID)\n    let field = this.getSubFormField(formID, fieldID);\n\n    if (field == null) {\n      return \"\";\n    } else {\n      return field.value;\n    }\n  }\n\n  createQLVariable(subFormID, subFormData) {\n    let varQL = null;\n\n    switch (subFormID) {\n      case \"LiabilityCreditTypeSubForm\":\n        varQL = {\n          liabilitiesAndCredit: {\n            liabilityType: this.getSubFormFieldValue(\n              subFormID,\n              \"liabilityCreditType\"\n            ),\n          },\n        };\n        break;\n      case \"MainSubForm\":\n        varQL = {\n          liabilitiesAndCredit: {\n            nameOfLiability: this.getSubFormFieldValue(subFormID, \"name\"),\n            owner: this.getSubFormFieldValue(subFormID, \"owner\"),\n          },\n        };\n        break;\n      case \"LoanInformationSubForm\":\n        varQL = {\n          liabilitiesAndCredit: {\n            initialLoanAmount: parseInt(\n              this.getSubFormFieldValue(subFormID, \"initialAmount\")\n            ),\n            maturityDate: this.getSubFormFieldValue(subFormID, \"maturityDate\"),\n            startDate: this.getSubFormFieldValue(subFormID, \"startDate\"),\n            interestRate: parseInt(\n              this.getSubFormFieldValue(subFormID, \"interestRate\")\n            ),\n            monthlyPayment: parseInt(\n              this.getSubFormFieldValue(subFormID, \"monthlyPayment\")\n            ),\n            last4DigitsOfAccount: this.getSubFormFieldValue(\n              subFormID,\n              \"accountDigits\"\n            ),\n            nameOfFinancialInstitution: this.getSubFormFieldValue(\n              subFormID,\n              \"financialName\"\n            ),\n            associatedAsset: this.getSubFormFieldValue(\n              subFormID,\n              \"associatedAsset\"\n            ),\n          },\n        };\n        break;\n      case \"CreditCardInformationSubForm\":\n        varQL = {\n          additionalCreditCardInformation: {\n            creditLimit: parseFloat(\n              this.getSubFormFieldValue(subFormID, \"creditLimit\")\n            ),\n            creditBalance: parseFloat(\n              this.getSubFormFieldValue(subFormID, \"creditBalance\")\n            ),\n            // \"monthlyPayment\": parseFloat(this.getSubFormFieldValue(subFormID, 'monthlyPayment')),\n            // 'apr'\n            phoneNumberOfIssuer: this.getSubFormFieldValue(\n              subFormID,\n              \"phoneNumber\"\n            ),\n            annualFee: parseInt(\n              this.getSubFormFieldValue(subFormID, \"annualFee\")\n            ),\n            pointBalance: this.getSubFormFieldValue(subFormID, \"pointBalance\"),\n            additionalNotesAboutCreditCard: this.getSubFormFieldValue(\n              subFormID,\n              \"creditNotes\"\n            ),\n            pointExpiration: this.getSubFormFieldValue(subFormID, \"expiration\"),\n          },\n        };\n        break;\n      case \"LoanPaybackSubForm\":\n        varQL = {\n          liabilitiesAndCredit: {\n            loanPaybackType: this.getSubFormFieldValue(\n              subFormID,\n              \"loanPaybackType\"\n            ),\n            typeOfLoan: this.getSubFormFieldValue(subFormID, \"loanType\"),\n          },\n        };\n        break;\n      case \"AdjustableLoanDetailsSubForm\":\n        varQL = {\n          adjustableLoanDetails: subFormData,\n        };\n        break;\n      case \"QuestionAdditionalPaymentSubForm\":\n        break;\n      case \"AdditionalPaymentInformationSubForm\":\n        varQL = {\n          additionalPrincipals: subFormData,\n        };\n        break;\n    }\n\n    return varQL;\n  }\n\n  updateSubForm(subFormID, subFormData, visible = true, bEnd = false) {\n    console.log(\"updateSubForm:\", subFormID, subFormData, visible, bEnd);\n    let formData = this.state.formData;\n    var bFound = false;\n    for (var findex = 0; findex < formData.length; findex++) {\n      if (formData[findex][\"id\"] == subFormID) {\n        formData[findex][\"data\"] = subFormData;\n        bFound = true;\n      }\n    }\n\n    if (!bFound) {\n      formData.push({\n        id: subFormID,\n        data: subFormData,\n        visible: visible,\n      });\n    }\n\n    let varQL = this.createQLVariable(subFormID, subFormData);\n\n    console.log(\"varQL:\", varQL, \", dataID:\", this.state.dataID);\n\n    var instance = this;\n    varQL = null;\n    if (varQL != null) {\n      if (this.state.dataID == null) {\n        fnMutationLiabilitiesCreditAdd({ variables: { data: varQL } }).then(\n          (response) => {\n            instance.setState({\n              dataID: response[\"data\"][\"createLiabilitiesAndCredit\"][\"id\"],\n            });\n          }\n        );\n      } else {\n        fnMutationLiabilitiesCreditUpdate({\n          variables: { id: this.state.dataID, data: varQL },\n        }).then((response) => {\n          if (bEnd) {\n            alert(\"Updated Successfully\");\n            instance.props.history.push(\"/liabilities_credit\");\n          }\n        });\n      }\n    }\n\n    this.setState({\n      formData: formData,\n    });\n\n    console.log(\"formData:\", formData);\n  }\n\n  getSubFormData(subFormID, fromState = true, pformData) {\n    let formData;\n    if (fromState) {\n      formData = this.state.formData;\n    } else {\n      formData = pformData;\n    }\n\n    for (var findex = 0; findex < formData.length; findex++) {\n      if (formData[findex][\"id\"] == subFormID) {\n        return formData[findex][\"data\"];\n      }\n    }\n\n    return {};\n  }\n\n  goSubForm(subFormID) {\n    // if(!this.state.dbLoaded){\n    //     return;\n    // }\n    console.log(\"subFormID\", subFormID)\n    if (subFormID === 'StepLiabilityCreditTypeSubForm') {\n      let fd = initialFormData({});\n      this.setState({ formData: fd, isEndForm: false })\n    }\n\n    let nextSubForm = LiabilityCreditTypeSubForm;\n\n    this.setState({\n      formVisible: false,\n    });\n    let liabilityCreditType = this.getSubFormFieldValue(\n      \"LiabilityCreditTypeSubForm\",\n      \"liabilityCreditType\"\n    );\n\n    switch (subFormID) {\n      case \"LiabilityCreditTypeSubForm\":\n        nextSubForm = LiabilityCreditTypeSubForm;\n        break;\n      case \"MainSubForm\":\n        nextSubForm = First;\n        break;\n      case \"LoanInformationSubForm\":\n        nextSubForm = SecondForm;\n        break;\n      case \"HelocInformationSubForm\":\n        nextSubForm = HelocInformationSubForm;\n        break;\n      case \"CreditCardInformationSubForm\":\n        nextSubForm = CreditCardInformationSubForm;\n        break;\n      case \"LoanPaybackSubForm\":\n        nextSubForm = ThirdForm;\n        break;\n      case \"AdjustableLoanDetailsSubForm\":\n        nextSubForm = AdjustableLoanDetailsSubForm;\n        break;\n      case \"QuestionAdditionalPaymentSubForm\":\n        nextSubForm = QuestionAdditionalPaymentSubForm;\n        break;\n      case \"AdditionalPaymentInformationSubForm\":\n        nextSubForm = AdditionalPaymentInformationSubForm;\n        break;\n      case \"EndSubForm\":\n        nextSubForm = EndSubForm;\n        this.setState({ isEndForm: true })\n        break;\n      case \"StepLiabilityCreditTypeSubForm\":\n        this.setState({ isEndForm: false })\n        nextSubForm = LiabilityCreditTypeSubForm;\n        subFormID = \"LiabilityCreditTypeSubForm\";\n        break;\n      case \"StepMainSubForm\":\n        nextSubForm = First;\n        subFormID = \"MainSubForm\";\n        break;\n      case \"StepAdditionalInformation\":\n        switch (liabilityCreditType) {\n          case \"Credit - HELOC\":\n            nextSubForm = HelocInformationSubForm;\n            subFormID = \"HelocInformationSubForm\";\n            break;\n          case \"Credit Card - Business\":\n          case \"Credit Card - Personal\":\n            nextSubForm = CreditCardInformationSubForm;\n            subFormID = \"CreditCardInformationSubForm\";\n            break;\n          default:\n            nextSubForm = SecondForm;\n            subFormID = \"LoanInformationSubForm\";\n        }\n        break;\n      case \"StepLoan\":\n        switch (liabilityCreditType) {\n          case \"Credit - HELOC\":\n            nextSubForm = QuestionAdditionalPaymentSubForm;\n            subFormID = \"QuestionAdditionalPaymentSubForm\";\n            break;\n          case \"Credit Card - Business\":\n          case \"Credit Card - Personal\":\n            nextSubForm = EndSubForm;\n            subFormID = \"EndSubForm\";\n            break;\n          default:\n            nextSubForm = ThirdForm;\n            subFormID = \"LoanPaybackSubForm\";\n        }\n        break;\n      case \"StepLoanAdjust\":\n        switch (liabilityCreditType) {\n          case \"Credit - HELOC\":\n            nextSubForm = QuestionAdditionalPaymentSubForm;\n            subFormID = \"QuestionAdditionalPaymentSubForm\";\n            break;\n          case \"Credit Card - Business\":\n          case \"Credit Card - Personal\":\n            nextSubForm = EndSubForm;\n            subFormID = \"EndSubForm\";\n            break;\n          default:\n            nextSubForm = AdjustableLoanDetailsSubForm;\n            subFormID = \"AdjustableLoanDetailsSubForm\";\n        }\n        break;\n      case \"StepPayments\":\n        switch (liabilityCreditType) {\n          case \"Credit - HELOC\":\n            nextSubForm = QuestionAdditionalPaymentSubForm;\n            subFormID = \"QuestionAdditionalPaymentSubForm\";\n            break;\n          case \"Credit Card - Business\":\n          case \"Credit Card - Personal\":\n            nextSubForm = EndSubForm;\n            subFormID = \"EndSubForm\";\n            break;\n          default:\n            nextSubForm = QuestionAdditionalPaymentSubForm;\n            subFormID = \"QuestionAdditionalPaymentSubForm\";\n        }\n        break;\n    }\n\n    let subFormData = this.getSubFormData(subFormID);\n\n    setTimeout(() => {\n      this.setState({\n        formVisible: true,\n        curSubFormID: subFormID,\n        curSubForm: nextSubForm,\n        subFormData: subFormData,\n      });\n    }, 100);\n  }\n\n  toggleRightSide = (e) => {\n    e.preventDefault();\n    this.setState({ isRightSideOpen: !this.state.isRightSideOpen });\n  };\n\n  loadDBData(formData) {\n    console.log(\"formData:\", formData);\n\n    var instance = this;\n    setTimeout(function () {\n      instance.setState({\n        formVisible: true,\n        dbLoaded: true,\n        formData: formData,\n        subFormData: instance.getSubFormData(\n          instance.state.curSubFormID,\n          false,\n          formData\n        ),\n      });\n    }, 100);\n  }\n\n  getTopNav(formStep) {\n    let disabled = false;\n    let active = false;\n\n    let liabilityCreditType = this.getSubFormFieldValue(\n      \"LiabilityCreditTypeSubForm\",\n      \"liabilityCreditType\"\n    );\n\n    //getting stepid from subform\n    let curSubFormStepIndex = -1;\n    for (var sindex = 0; sindex < this.state.formSteps.length; sindex++) {\n      if (this.state.curSubFormID == \"EndSubForm\") {\n        if (this.state.formSteps[sindex].id == formStep.id) {\n          curSubFormStepIndex = sindex;\n          break;\n        }\n      }\n      for (\n        var findex = 0;\n        findex <\n        this.state.formStep2FormMap[this.state.formSteps[sindex].id].length;\n        findex++\n      ) {\n        if (\n          this.state.formStep2FormMap[this.state.formSteps[sindex].id][\n          findex\n          ] == this.state.curSubFormID\n        ) {\n          curSubFormStepIndex = sindex;\n          break;\n        }\n      }\n    }\n\n\n    if (this.state.isEndForm && formStep.id !== 'StepLiabilityCreditTypeSubForm') {\n      return {\n        disabled: true,\n        active: false,\n      };\n    }\n\n    if (liabilityCreditType != null && liabilityCreditType != \"\") {\n      switch (formStep.id) {\n        case \"StepLiabilityCreditTypeSubForm\":\n          if (curSubFormStepIndex === 0) {\n            if (this.state.isEndForm) {\n              disabled = false;\n              active = true;\n            } else {\n              disabled = true;\n              active = false;\n              liabilityCreditType = '';\n            }\n          }\n          if (curSubFormStepIndex >= 0) {\n            active = true;\n          }\n          break;\n        case \"StepMainSubForm\":\n          if (curSubFormStepIndex >= 1) {\n            active = true;\n          }\n          break;\n        case \"StepAdditionalInformation\":\n          if (curSubFormStepIndex >= 2) {\n            active = true;\n          }\n          break;\n        case \"StepLoan\":\n          if (curSubFormStepIndex >= 3) {\n            active = true;\n          }\n          switch (liabilityCreditType) {\n            case \"Credit - HELOC\":\n            case \"Credit Card - Business\":\n            case \"Credit Card - Personal\":\n              disabled = true;\n          }\n          break;\n        case \"StepLoanAdjust\":\n          if (curSubFormStepIndex >= 4) {\n            active = true;\n          }\n          switch (liabilityCreditType) {\n            case \"Credit - HELOC\":\n            case \"Credit Card - Business\":\n            case \"Credit Card - Personal\":\n              disabled = true;\n          }\n          break;\n        case \"StepPayments\":\n          if (curSubFormStepIndex >= 5) {\n            active = true;\n          }\n          switch (liabilityCreditType) {\n            case \"Credit Card - Business\":\n            case \"Credit Card - Personal\":\n              disabled = true;\n          }\n          break;\n      }\n    } else {\n      if (formStep.id != \"StepLiabilityCreditTypeSubForm\") {\n        disabled = true;\n      }\n    }\n\n    return {\n      disabled: disabled,\n      active: active,\n    };\n  }\n\n  getRightSideFormData(formStep) {\n    let formData = [];\n    let liabilityCreditType = this.getSubFormFieldValue(\n      \"LiabilityCreditTypeSubForm\",\n      \"liabilityCreditType\"\n    );\n\n    if (liabilityCreditType == null || liabilityCreditType == \"\") {\n      return formData;\n    }\n\n    for (var index = 0; index < this.state.formData.length; index++) {\n      if (formStep.id == this.state.formData[index][\"stepId\"]) {\n        switch (formStep.id) {\n          case \"StepLiabilityCreditTypeSubForm\":\n            formData.push(this.state.formData[index]);\n            break;\n          case \"StepMainSubForm\":\n            formData.push(this.state.formData[index]);\n            break;\n          case \"StepAdditionalInformation\":\n            if (this.state.formData[index][\"id\"] == \"LoanInformationSubForm\") {\n              if (\n                liabilityCreditType != \"Credit - HELOC\" &&\n                liabilityCreditType != \"Credit Card - Business\" &&\n                liabilityCreditType != \"Credit Card - Personal\"\n              ) {\n                formData.push(this.state.formData[index]);\n              }\n            }\n            if (\n              liabilityCreditType == \"Credit - HELOC\" &&\n              this.state.formData[index][\"id\"] == \"HelocInformationSubForm\"\n            ) {\n              formData.push(this.state.formData[index]);\n            } else if (\n              liabilityCreditType == \"Credit Card - Business\" &&\n              this.state.formData[index][\"id\"] == \"CreditCardInformationSubForm\"\n            ) {\n              formData.push(this.state.formData[index]);\n            } else if (\n              liabilityCreditType == \"Credit Card - Personal\" &&\n              this.state.formData[index][\"id\"] == \"CreditCardInformationSubForm\"\n            ) {\n              formData.push(this.state.formData[index]);\n            }\n            break;\n          case \"StepLoan\":\n            switch (liabilityCreditType) {\n              case \"Credit - HELOC\":\n              case \"Credit Card - Business\":\n              case \"Credit Card - Personal\":\n                break;\n              default:\n                formData.push(this.state.formData[index]);\n                break;\n            }\n            break;\n          case \"StepLoanAdjust\":\n            switch (liabilityCreditType) {\n              case \"Credit - HELOC\":\n              case \"Credit Card - Business\":\n              case \"Credit Card - Personal\":\n                break;\n              default:\n                formData.push(this.state.formData[index]);\n                break;\n            }\n            break;\n          case \"StepPayments\":\n            switch (liabilityCreditType) {\n              case \"Credit Card - Business\":\n              case \"Credit Card - Personal\":\n                break;\n              default:\n                formData.push(this.state.formData[index]);\n                break;\n            }\n            break;\n        }\n      }\n    }\n\n    console.log(\n      \"getRightSideFormData\",\n      formStep.id,\n      liabilityCreditType,\n      formData\n    );\n\n    return formData;\n  }\n\n  goNext(fromSubFormID) {\n    let nextSubFormID = \"\";\n\n    let liabilityCreditType = this.getSubFormFieldValue(\n      \"LiabilityCreditTypeSubForm\",\n      \"liabilityCreditType\"\n    );\n    let loanType = this.getSubFormFieldValue(\"LoanPaybackSubForm\", \"loanType\");\n    console.log(\"fromSubFormID\", fromSubFormID)\n    switch (fromSubFormID) {\n      // StepLiabilityCreditTypeSubForm\n      case \"LiabilityCreditTypeSubForm\":\n        nextSubFormID = \"MainSubForm\";\n        break;\n\n      // StepMainSubForm\n      case \"MainSubForm\":\n        switch (liabilityCreditType) {\n          case \"Credit - HELOC\":\n            nextSubFormID = \"HelocInformationSubForm\";\n            break;\n          case \"Credit Card - Business\":\n          case \"Credit Card - Personal\":\n            nextSubFormID = \"CreditCardInformationSubForm\";\n            break;\n          default:\n            nextSubFormID = \"LoanInformationSubForm\";\n        }\n        break;\n\n      // StepAdditionalInformation\n      case \"LoanInformationSubForm\":\n        nextSubFormID = \"LoanPaybackSubForm\";\n        break;\n      case \"CreditCardInformationSubForm\":\n        nextSubFormID = \"EndSubForm\";\n        break;\n      case \"HelocInformationSubForm\":\n        nextSubFormID = \"StepPayments\";\n        break;\n\n      // StepLoan\n      case \"LoanPaybackSubForm\":\n        switch (loanType) {\n          case \"Fixed\":\n            nextSubFormID = \"QuestionAdditionalPaymentSubForm\";\n            break;\n          case \"Adjustable\":\n            nextSubFormID = \"AdjustableLoanDetailsSubForm\";\n        }\n\n        switch (liabilityCreditType) {\n          case \"Credit - HELOC\":\n            nextSubFormID = \"StepPayments\";\n            break;\n          case \"Credit Card - Business\":\n          case \"Credit Card - Personal\":\n            nextSubFormID = \"EndSubForm\";\n            break;\n        }\n        break;\n      case \"AdjustableLoanDetailsSubForm\":\n        nextSubFormID = \"QuestionAdditionalPaymentSubForm\";\n        break;\n\n      // StepPayments\n      case \"QuestionAdditionalPaymentSubForm\":\n        let isAdditionalPayment = this.getSubFormFieldValue(\n          \"QuestionAdditionalPaymentSubForm\",\n          \"isAdditionalPayment\"\n        );\n        if (isAdditionalPayment == \"Yes\") {\n          nextSubFormID = \"AdditionalPaymentInformationSubForm\";\n        } else {\n          nextSubFormID = \"EndSubForm\";\n        }\n        break;\n      case \"AdditionalPaymentInformationSubForm\":\n        nextSubFormID = \"EndSubForm\";\n        break;\n    }\n\n    this.goSubForm(nextSubFormID);\n  }\n\n  goPrev(fromSubFormID) {\n    let prevSubFormID = \"\";\n    let assetsAllocation = this.getSubFormFieldValue(\n      \"AssetAllocationSubForm\",\n      \"assetsAllocation\"\n    );\n\n    switch (fromSubFormID) {\n      // StepLiabilityCreditTypeSubForm\n      case \"LiabilityCreditTypeSubForm\":\n        break;\n\n      // StepMainSubForm\n      case \"MainSubForm\":\n        prevSubFormID = \"LiabilityCreditTypeSubForm\";\n        break;\n\n      // StepAdditionalInformation\n      case \"LoanInformationSubForm\":\n        prevSubFormID = \"MainSubForm\";\n        break;\n      case \"CreditCardInformationSubForm\":\n        prevSubFormID = \"MainSubForm\";\n        break;\n      case \"HelocInformationSubForm\":\n        prevSubFormID = \"MainSubForm\";\n        break;\n\n      // StepLoan\n      case \"LoanPaybackSubForm\":\n        prevSubFormID = \"LoanInformationSubForm\";\n        break;\n      case \"AdjustableLoanDetailsSubForm\":\n        prevSubFormID = \"LoanPaybackSubForm\";\n        break;\n\n      // StepPayments\n      case \"QuestionAdditionalPaymentSubForm\":\n        break;\n      case \"AdditionalPaymentInformationSubForm\":\n        prevSubFormID = \"QuestionAdditionalPaymentSubForm\";\n        break;\n    }\n\n    this.goSubForm(prevSubFormID);\n  }\n\n  render() {\n    const navlinks = [\n      {\n        href: \"/\",\n        title: \"Home\",\n      },\n      {\n        href: \"/modules\",\n        title: \"Modules\",\n      },\n      {\n        href: \"/liabilities_credit\",\n        title: \"Liabilities and Credit\",\n      },\n    ];\n\n    let SubForm = this.state.curSubForm;\n\n    let formpageClassName = \"form-page-container-wrap\";\n    if (this.state.isRightSideOpen) {\n      formpageClassName = \"form-page-container-wrap right-side--opend\";\n    } else {\n      formpageClassName = \"form-page-container-wrap right-side--collapsed\";\n    }\n\n    return (\n      <div className={formpageClassName}>\n        <div className=\"form-page--main-side\">\n          <div className=\"steps\">\n            <div className=\"logo-container align-items-top justify-content-center\">\n              <img className=\"img-asset\" src={AssetPlanet} />\n            </div>\n            <div className=\"process\">\n              <div className=\"process-row\">\n                {this.state.formSteps.map((formStep, index) => {\n                  const { disabled, active } = this.getTopNav(formStep);\n\n                  let className = \"btn nav-items btn-circle\";\n                  if (disabled) {\n                    className = \"btn nav-items btn-circle disabled\";\n                  } else if (active) {\n                    className = \"btn nav-items btn-circle active\";\n                  }\n                  return (\n                    <div className=\"process-step\" key={index}>\n                      <button\n                        type=\"button\"\n                        className={className}\n                        data-toggle=\"tab\"\n                        onClick={() =>\n                          !disabled ? this.goSubForm(formStep.id) : null\n                        }\n                      >\n                        {/* <img className=\"img-icon\" src={ImageIcon} /> */}\n                        <div style={{ fontSize: 30, color: '#006400' }}>\n                          {index + 1}\n                        </div>\n                      </button>\n                      <p className=\"step-title\">{formStep.title}</p>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n          <HiddenHook />\n          {!this.state.dbLoaded && (\n            <LoadDBDataHook\n              dbLoaded={this.state.dbLoaded}\n              dbID={this.state.dbID}\n              cbLoadDBData={this.loadDBData}\n            />\n          )}\n          <div className=\"container\">\n            <div className=\"page-nav-history\">\n              {/* {navlinks.map((navlink, index) => {\n                return (\n                  <span key={index}>\n                    <Link\n                      key={index}\n                      to={navlink.href}\n                      className=\"page-nav-link text-uppercase\"\n                    >\n                      {navlink.title}\n                    </Link>\n                    {index != navlinks.length - 1 ? \"/\" : null}\n                  </span>\n                );\n              })} */}\n            </div>\n            {!this.state.dbLoaded && <div>Loading...</div>}\n            {this.state.dbLoaded && (\n              <div className=\"form-page-container\">\n                <div className=\"form-page--left-side\">\n                  <FormPagePose\n                    className=\"info-form-block\"\n                    pose={this.state.formVisible ? \"visible\" : \"hidden\"}\n                  >\n                    <SubForm\n                      subFormData={this.state.subFormData}\n                      cbGoSubForm={this.goSubForm}\n                      cbUpdateSubForm={this.updateSubForm}\n                      formData={this.state.formData}\n                      cbGetSubFormField={this.getSubFormField}\n                      dataID={this.state.dataID}\n                      cbGoNext={this.goNext}\n                      cbGoPrev={this.goPrev}\n                    />\n                  </FormPagePose>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"form-page--right-side\">\n          <span\n            className=\"right-side-collapse-icon\"\n            onClick={this.toggleRightSide}\n          >\n            <i className=\"fe-menu\"></i>\n          </span>\n          <div className=\"form-page--right-side-wrap\">\n            {this.state.formSteps.map((formStep, index) => {\n              let formData = this.getRightSideFormData(formStep);\n              return formData.map((subForm, sindex) => {\n                if (subForm.visible == false) {\n                  return <React.Fragment key={sindex}></React.Fragment>;\n                }\n\n                let count = 0;\n                let go = false;\n                let fieldss = null;\n                let subFormData = subForm.data;\n\n                if (subFormData[\"rows\"]) {\n                  fieldss = subFormData[\"rows\"];\n                } else if (subFormData[\"fields\"]) {\n                  fieldss = subFormData[\"fields\"];\n                }\n                count = fieldss.length;\n\n                for (let i = 0; i < parseInt(count); i++) {\n                  if (fieldss[i][\"value\"] != \"\") {\n                    go = true;\n                  }\n                }\n                // let subFormData = subForm.data;\n                return (\n                  <div className=\"form-brief-block\" key={sindex}>\n                    <div className=\"form-brief-top\">\n                      {go ? (\n                        <h4 className=\"form-brief-title\">\n                          {subFormData.title}\n                        </h4>\n                      ) : null}\n                      {/* <h4 className=\"form-brief-title\">{subFormData.title}</h4> */}\n                      <span\n                        className=\"form-brief-edit-btn\"\n                        onClick={() => this.goSubForm(subForm.stepId)}\n                      >\n                        <Icon type=\"edit\"></Icon>\n                      </span>\n                    </div>\n                    <div className=\"form-brief-content\">\n                      {subFormData.fields &&\n                        subFormData.fields.map((field, ffindex) => {\n                          if (field.value == \"\" || field.value == null) {\n                            return (\n                              <React.Fragment key={ffindex}></React.Fragment>\n                            );\n                          }\n                          return (\n                            <div className=\"form-brief-item\" key={ffindex}>\n                              <p className=\"form-brief-item-title\">\n                                {field.title != \"\" ? field.title + \":\" : null}{\" \"}\n                              </p>\n                              <p className=\"form-brief-item-value\">\n\n                                {field.hasOwnProperty(\"type\") &&\n                                  field[\"type\"] == \"currency\" &&\n                                  float2Currency(field.value)}\n                                {field.hasOwnProperty(\"type\") &&\n                                  field[\"type\"] == \"percent\" &&\n                                  field.value + \" %\"}\n                                {!field.hasOwnProperty(\"type\") && field.value}\n                              </p>\n                            </div>\n                          );\n                        })}\n                      {subFormData.rows && subFormData.rows.length > 0 && (\n                        <React.Fragment>\n                          {subForm.id ==\n                            \"AdditionalPaymentInformationSubForm\" && (\n                              <React.Fragment>\n                                <div className=\"form-brief-row\">\n                                  <div className=\"form-brief-col--33\">\n                                    Extra Principal Payment Description\n                                  </div>\n                                  <div className=\"form-brief-col--33\">\n                                    How Much\n                                  </div>\n                                  <div className=\"form-brief-col--33\">\n                                    How Often\n                                  </div>\n                                </div>\n                                {subFormData.rows.map(\n                                  (additionalPayment, cindex) => {\n                                    return (\n                                      <div\n                                        className=\"form-brief-row\"\n                                        key={cindex}\n                                      >\n                                        <div className=\"form-brief-col--33\">\n                                          {\n                                            additionalPayment[\n                                            \"extra_payment_description\"\n                                            ]\n                                          }\n                                        </div>\n                                        <div className=\"form-brief-col--33\">\n                                          {float2Currency(\n                                            additionalPayment[\"howMuch\"]\n                                          )}\n                                        </div>\n                                        <div className=\"form-brief-col--33\">\n                                          {additionalPayment[\"howOften\"]}\n                                        </div>\n                                      </div>\n                                    );\n                                  }\n                                )}\n                              </React.Fragment>\n                            )}\n                          {subForm.id == \"AdjustableLoanDetailsSubForm\" && (\n                            <React.Fragment>\n                              <div className=\"form-brief-row\">\n                                <div className=\"form-brief-col--50\">\n                                  Date of Rate Change\n                                </div>\n                                <div className=\"form-brief-col--50\">\n                                  newPercent\n                                </div>\n                              </div>\n                              {subFormData.rows.map(\n                                (adjustableLoan, cindex) => {\n                                  return (\n                                    <div\n                                      className=\"form-brief-row\"\n                                      key={cindex}\n                                    >\n                                      <div className=\"form-brief-col--50\">\n                                        {adjustableLoan[\"dateRateChange\"]}\n                                      </div>\n                                      <div className=\"form-brief-col--50\">\n                                        {adjustableLoan[\"newPercent\"] + \" %\"}\n                                      </div>\n                                    </div>\n                                  );\n                                }\n                              )}\n                            </React.Fragment>\n                          )}\n                        </React.Fragment>\n                      )}\n                    </div>\n                  </div>\n                );\n              });\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect()(LiabilityCreditNew);\n"],"mappings":";;;;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,IAAI,QAAQ,MAAM;AAC3B,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,WAAW,MAAM,qCAAqC;AAE7D,SAASC,WAAW,EAAEC,QAAQ,QAAQ,qBAAqB;AAC3D,SACEC,yBAAyB,EACzBC,4BAA4B,EAC5BC,yBAAyB,QACpB,4BAA4B;AAEnC,SAASC,YAAY,QAAQ,gCAAgC;AAC7D,OAAOC,0BAA0B,MAAM,uCAAuC;AAC9E,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,4BAA4B,MAAM,yCAAyC;AAClF,OAAOC,sBAAsB,MAAM,mCAAmC;AACtE,OAAOC,uBAAuB,MAAM,oCAAoC;AACxE,OAAOC,kBAAkB,MAAM,+BAA+B;AAC9D,OAAOC,4BAA4B,MAAM,yCAAyC;AAClF,OAAOC,gCAAgC,MAAM,6CAA6C;AAC1F,OAAOC,mCAAmC,MAAM,gDAAgD;AAChG,OAAOC,UAAU,MAAM,uBAAuB;AAE9C,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,SAAS,MAAM,sBAAsB;AAE5C,IAAIC,8BAA8B,GAAG,IAAI;AACzC,IAAIC,gCAAgC,GAAG,IAAI;AAE3C,IAAIC,iCAAiC,GAAG,IAAI;AAC5C,IAAIC,mCAAmC,GAAG,IAAI;AAC9C,IAAIC,OAAO,GAAG,CAAC;AAEf,SAASC,UAAUA,CAAA,EAAG;EAAA,IAAAC,YAAA,GAIhB3B,WAAW,CAACE,yBAAyB,CAAC;EAAA,IAAA0B,aAAA,GAAAC,cAAA,CAAAF,YAAA;EAFxCN,8BAA8B,GAAAO,aAAA;EAC5BN,gCAAgC,GAAAM,aAAA,IAAhCN,gCAAgC;EAAA,IAAAQ,aAAA,GAKhC9B,WAAW,CAACG,4BAA4B,CAAC;EAAA,IAAA4B,aAAA,GAAAF,cAAA,CAAAC,aAAA;EAF3CP,iCAAiC,GAAAQ,aAAA;EAC/BP,mCAAmC,GAAAO,aAAA,IAAnCP,mCAAmC;EAGvC,oBAAO/B,KAAA,CAAAuC,aAAA,CAACvC,KAAK,CAACwC,QAAQ;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAiB,CAAC;AAC1C;AAEA,SAASC,eAAeA,CAACC,IAAI,EAAE;EAC7B,IAAIC,QAAQ,GAAG,EAAE;EAEjB,IAAID,IAAI,CAACE,cAAc,CAAC,sBAAsB,CAAC,EAAE;IAC/CD,QAAQ,CAACE,IAAI,CAAC;MACZC,EAAE,EAAE,4BAA4B;MAChCJ,IAAI,EAAEnC,0BAA0B,CAACwC,gBAAgB,CAAC;QAChDC,KAAK,EAAEN,IAAI,CAAC,sBAAsB,CAAC,CAAC,eAAe;MACrD,CAAC,CAAC;MACFO,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE;IACV,CAAC,CAAC;IAEFP,QAAQ,CAACE,IAAI,CAAC;MACZC,EAAE,EAAE,aAAa;MACjBJ,IAAI,EAAElC,WAAW,CAACuC,gBAAgB,CAAC;QACjCI,aAAa,EAAET,IAAI,CAAC,sBAAsB,CAAC,CAAC,eAAe,CAAC;QAC5DU,IAAI,EAAEV,IAAI,CAAC,sBAAsB,CAAC,CAAC,iBAAiB,CAAC;QACrDW,KAAK,EAAEX,IAAI,CAAC,sBAAsB,CAAC,CAAC,OAAO;MAC7C,CAAC,CAAC;MACFO,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE;IACV,CAAC,CAAC;IAEFP,QAAQ,CAACE,IAAI,CAAC;MACZC,EAAE,EAAE,wBAAwB;MAC5BJ,IAAI,EAAEhC,sBAAsB,CAACqC,gBAAgB,CAAC;QAC5CO,aAAa,EAAEZ,IAAI,CAAC,sBAAsB,CAAC,CAAC,mBAAmB,CAAC;QAChEa,YAAY,EAAEb,IAAI,CAAC,sBAAsB,CAAC,CAAC,cAAc,CAAC;QAC1Dc,SAAS,EAAEd,IAAI,CAAC,sBAAsB,CAAC,CAAC,WAAW,CAAC;QACpDe,YAAY,EAAEf,IAAI,CAAC,sBAAsB,CAAC,CAAC,cAAc,CAAC;QAC1DgB,cAAc,EAAEhB,IAAI,CAAC,sBAAsB,CAAC,CAAC,gBAAgB,CAAC;QAC9DiB,aAAa,EAAEjB,IAAI,CAAC,sBAAsB,CAAC,CAAC,sBAAsB,CAAC;QACnEkB,aAAa,EACXlB,IAAI,CAAC,sBAAsB,CAAC,CAAC,4BAA4B,CAAC;QAC5DmB,UAAU,EAAEnB,IAAI,CAAC,sBAAsB,CAAC,CAAC,cAAc,CAAC;QACxDoB,eAAe,EAAEpB,IAAI,CAAC,sBAAsB,CAAC,CAAC,iBAAiB;MACjE,CAAC,CAAC;MACFO,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE;IACV,CAAC,CAAC;IAEFP,QAAQ,CAACE,IAAI,CAAC;MACZC,EAAE,EAAE,8BAA8B;MAClCJ,IAAI,EAAEjC,4BAA4B,CAACsC,gBAAgB,CAAC;QAClDgB,WAAW,EACTrB,IAAI,CAAC,sBAAsB,CAAC,CAAC,iCAAiC,CAAC,CAC/D,aAAa,CACZ;QACH;QACAsB,aAAa,EACXtB,IAAI,CAAC,sBAAsB,CAAC,CAAC,iCAAiC,CAAC,CAC/D,eAAe,CACd;QACHgB,cAAc,EACZhB,IAAI,CAAC,sBAAsB,CAAC,CAAC,iCAAiC,CAAC,CAC/D,gBAAgB,CACf;QACHe,YAAY,EACVf,IAAI,CAAC,sBAAsB,CAAC,CAAC,iCAAiC,CAAC,CAC/D,cAAc,CACb;QACHuB,WAAW,EACTvB,IAAI,CAAC,sBAAsB,CAAC,CAAC,iCAAiC,CAAC,CAC/D,qBAAqB,CACpB;QACHwB,SAAS,EACPxB,IAAI,CAAC,sBAAsB,CAAC,CAAC,iCAAiC,CAAC,CAC/D,WAAW,CACV;QACHyB,YAAY,EACVzB,IAAI,CAAC,sBAAsB,CAAC,CAAC,iCAAiC,CAAC,CAC/D,cAAc,CACb;QACH;QACA0B,WAAW,EACT1B,IAAI,CAAC,sBAAsB,CAAC,CAAC,iCAAiC,CAAC,CAC/D,gCAAgC,CAC/B;QACH2B,UAAU,EACR3B,IAAI,CAAC,sBAAsB,CAAC,CAAC,iCAAiC,CAAC,CAC/D,iBAAiB;MAErB,CAAC,CAAC;MACFO,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE;IACV,CAAC,CAAC;IAEFP,QAAQ,CAACE,IAAI,CAAC;MACZC,EAAE,EAAE,yBAAyB;MAC7BJ,IAAI,EAAE/B,uBAAuB,CAACoC,gBAAgB,CAAC;QAC7CgB,WAAW,EAAE,EAAE;QACfO,oBAAoB,EAAE,EAAE;QACxBN,aAAa,EAAE,EAAE;QACjBP,YAAY,EAAE,EAAE;QAChBC,cAAc,EAAE,EAAE;QAClBa,iBAAiB,EAAE,EAAE;QACrBC,mBAAmB,EAAE,EAAE;QACvBC,kBAAkB,EAAE,EAAE;QACtBC,gBAAgB,EAAE;MACpB,CAAC,CAAC;MACFzB,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE;IACV,CAAC,CAAC;IAEFP,QAAQ,CAACE,IAAI,CAAC;MACZC,EAAE,EAAE,oBAAoB;MACxBJ,IAAI,EAAE9B,kBAAkB,CAACmC,gBAAgB,CAAC;QACxC4B,eAAe,EAAEjC,IAAI,CAAC,sBAAsB,CAAC,CAAC,iBAAiB,CAAC;QAChEkC,QAAQ,EAAElC,IAAI,CAAC,sBAAsB,CAAC,CAAC,YAAY;MACrD,CAAC,CAAC;MACFO,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE;IACV,CAAC,CAAC;IAEFP,QAAQ,CAACE,IAAI,CAAC;MACZC,EAAE,EAAE,8BAA8B;MAClCJ,IAAI,EAAE7B,4BAA4B,CAACkC,gBAAgB,CACjDL,IAAI,CAAC,sBAAsB,CAAC,CAAC,uBAAuB,CACtD,CAAC;MACDO,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE;IACV,CAAC,CAAC;IAEFP,QAAQ,CAACE,IAAI,CAAC;MACZC,EAAE,EAAE,kCAAkC;MACtCJ,IAAI,EAAE5B,gCAAgC,CAACiC,gBAAgB,CAAC;QACtDC,KAAK,EAAE;MACT,CAAC,CAAC;MACFC,OAAO,EAAE,KAAK;MACdC,MAAM,EAAE;IACV,CAAC,CAAC;IAEFP,QAAQ,CAACE,IAAI,CAAC;MACZC,EAAE,EAAE,qCAAqC;MACzCJ,IAAI,EAAE3B,mCAAmC,CAACgC,gBAAgB,CACxDL,IAAI,CAAC,sBAAsB,CAAC,CAAC,sBAAsB,CACrD,CAAC;MACDO,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,MAAM;IACLP,QAAQ,CAACE,IAAI,CAAC;MACZC,EAAE,EAAE,4BAA4B;MAChCJ,IAAI,EAAEnC,0BAA0B,CAACwC,gBAAgB,CAAC;QAChDC,KAAK,EAAE;MACT,CAAC,CAAC;MACFC,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE;IACV,CAAC,CAAC;IAEFP,QAAQ,CAACE,IAAI,CAAC;MACZC,EAAE,EAAE,aAAa;MACjBJ,IAAI,EAAElC,WAAW,CAACuC,gBAAgB,CAAC;QACjCI,aAAa,EAAE,EAAE;QACjBC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE;MACT,CAAC,CAAC;MACFJ,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE;IACV,CAAC,CAAC;IAEFP,QAAQ,CAACE,IAAI,CAAC;MACZC,EAAE,EAAE,wBAAwB;MAC5BJ,IAAI,EAAEhC,sBAAsB,CAACqC,gBAAgB,CAAC;QAC5CO,aAAa,EAAE,EAAE;QACjBC,YAAY,EAAE,EAAE;QAChBC,SAAS,EAAE,EAAE;QACbC,YAAY,EAAE,EAAE;QAChBC,cAAc,EAAE,EAAE;QAClBC,aAAa,EAAE,EAAE;QACjBC,aAAa,EAAE,EAAE;QACjBC,UAAU,EAAE,EAAE;QACdC,eAAe,EAAE;MACnB,CAAC,CAAC;MACFb,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE;IACV,CAAC,CAAC;IAEFP,QAAQ,CAACE,IAAI,CAAC;MACZC,EAAE,EAAE,8BAA8B;MAClCJ,IAAI,EAAEjC,4BAA4B,CAACsC,gBAAgB,CAAC;QAClDgB,WAAW,EAAE,EAAE;QACf;QACAC,aAAa,EAAE,EAAE;QACjBN,cAAc,EAAE,EAAE;QAClBD,YAAY,EAAE,EAAE;QAChBQ,WAAW,EAAE,EAAE;QACfC,SAAS,EAAE,EAAE;QACbC,YAAY,EAAE,EAAE;QAChB;QACAC,WAAW,EAAE,EAAE;QACfC,UAAU,EAAE;MACd,CAAC,CAAC;MACFpB,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE;IACV,CAAC,CAAC;IAEFP,QAAQ,CAACE,IAAI,CAAC;MACZC,EAAE,EAAE,yBAAyB;MAC7BJ,IAAI,EAAE/B,uBAAuB,CAACoC,gBAAgB,CAAC;QAC7CgB,WAAW,EAAE,EAAE;QACfO,oBAAoB,EAAE,EAAE;QACxBN,aAAa,EAAE,EAAE;QACjBP,YAAY,EAAE,EAAE;QAChBC,cAAc,EAAE,EAAE;QAClBa,iBAAiB,EAAE,EAAE;QACrBC,mBAAmB,EAAE,EAAE;QACvBC,kBAAkB,EAAE,EAAE;QACtBC,gBAAgB,EAAE;MACpB,CAAC,CAAC;MACFzB,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE;IACV,CAAC,CAAC;IAEFP,QAAQ,CAACE,IAAI,CAAC;MACZC,EAAE,EAAE,oBAAoB;MACxBJ,IAAI,EAAE9B,kBAAkB,CAACmC,gBAAgB,CAAC;QACxC4B,eAAe,EAAE,EAAE;QACnBC,QAAQ,EAAE;MACZ,CAAC,CAAC;MACF3B,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE;IACV,CAAC,CAAC;IAEFP,QAAQ,CAACE,IAAI,CAAC;MACZC,EAAE,EAAE,8BAA8B;MAClCJ,IAAI,EAAE7B,4BAA4B,CAACkC,gBAAgB,CAAC,EAAE,CAAC;MACvDE,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE;IACV,CAAC,CAAC;IAEFP,QAAQ,CAACE,IAAI,CAAC;MACZC,EAAE,EAAE,kCAAkC;MACtCJ,IAAI,EAAE5B,gCAAgC,CAACiC,gBAAgB,CAAC;QACtDC,KAAK,EAAE;MACT,CAAC,CAAC;MACFC,OAAO,EAAE,KAAK;MACdC,MAAM,EAAE;IACV,CAAC,CAAC;IAEFP,QAAQ,CAACE,IAAI,CAAC;MACZC,EAAE,EAAE,qCAAqC;MACzCJ,IAAI,EAAE3B,mCAAmC,CAACgC,gBAAgB,CAAC,EAAE,CAAC;MAC9DE,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ;EAEA,OAAOP,QAAQ;AACjB;AAEA,SAASkC,cAAcA,CAACC,KAAK,EAAE;EAC7B,IAAIA,KAAK,CAACC,IAAI,IAAI,IAAI,IAAID,KAAK,CAACC,IAAI,IAAI,EAAE,EAAE;IAAA,IAAAC,SAAA,GACT9E,QAAQ,CAACG,yBAAyB,EAAE;QACnE4E,SAAS,EAAE;UAAEnC,EAAE,EAAEgC,KAAK,CAACC;QAAK;MAC9B,CAAC,CAAC;MAFMrC,IAAI,GAAAsC,SAAA,CAAJtC,IAAI;MAAEwC,OAAO,GAAAF,SAAA,CAAPE,OAAO;MAAEC,KAAK,GAAAH,SAAA,CAALG,KAAK;IAG5B,IAAIzC,IAAI,EAAE;MACR0C,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAE3C,IAAI,CAAC;MAC3BoC,KAAK,CAACQ,YAAY,CAAC7C,eAAe,CAACC,IAAI,CAAC,CAAC;IAC3C;EACF;EAEA,oBAAOhD,KAAA,CAAAuC,aAAA,CAACvC,KAAK,CAACwC,QAAQ;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAiB,CAAC;AAC1C;AAAC,IAEK+C,kBAAkB,0BAAAC,UAAA;EAAAC,SAAA,CAAAF,kBAAA,EAAAC,UAAA;EACtB,SAAAD,mBAAYT,KAAK,EAAE;IAAA,IAAAY,KAAA;IAAAC,eAAA,OAAAJ,kBAAA;IACjBG,KAAA,GAAAE,0BAAA,OAAAC,eAAA,CAAAN,kBAAA,EAAAO,IAAA,OAAMhB,KAAK;IAAEY,KAAA,CAmcfK,eAAe,GAAG,UAACC,CAAC,EAAK;MACvBA,CAAC,CAACC,cAAc,CAAC,CAAC;MAClBP,KAAA,CAAKQ,QAAQ,CAAC;QAAEC,eAAe,EAAE,CAACT,KAAA,CAAKU,KAAK,CAACD;MAAgB,CAAC,CAAC;IACjE,CAAC;IApcC,IAAIpB,IAAI,GAAG,IAAI;IACf,IAAIsB,QAAQ,GAAG,IAAI;IAAC,IAEZC,mBAAmB,GAAKZ,KAAA,CAAKZ,KAAK,CAACyB,KAAK,CAACC,MAAM,CAA/CF,mBAAmB;IAE3B,IAAIA,mBAAmB,EAAE;MACvBvB,IAAI,GAAGuB,mBAAmB;MAC1BD,QAAQ,GAAG,KAAK;IAClB;IAEA,IAAI1D,QAAQ,GAAGF,eAAe,CAAC,CAAC,CAAC,CAAC;IAElCiD,KAAA,CAAKU,KAAK,GAAG;MACXK,MAAM,EAAE1B,IAAI;MACZ2B,YAAY,EAAE,4BAA4B;MAC1CC,UAAU,EAAEpG,0BAA0B;MACtCqG,WAAW,EAAE,KAAK;MAClBC,WAAW,EAAE,CAAC,CAAC;MACflE,QAAQ,EAAEA,QAAQ;MAClBwD,eAAe,EAAE,IAAI;MACrBW,cAAc,EAAE,EAAE;MAClBC,SAAS,EAAE,CACT;QACEjE,EAAE,EAAE,gCAAgC;QACpCkE,IAAI,EAAE,aAAa;QACnBC,KAAK,EAAE;MAET,CAAC,EACD;QACEnE,EAAE,EAAE,iBAAiB;QACrBkE,IAAI,EAAE,aAAa;QACnBC,KAAK,EAAE,gBAAgB;QACvBC,SAAS,EAAE/F;MACb,CAAC,EACD;QACE2B,EAAE,EAAE,2BAA2B;QAC/BkE,IAAI,EAAE,aAAa;QACnBC,KAAK,EAAE,wBAAwB;QAC/BC,SAAS,EAAE9F;MACb,CAAC,EACD;QACE0B,EAAE,EAAE,UAAU;QACdkE,IAAI,EAAE,aAAa;QACnBC,KAAK,EAAE,MAAM;QACbC,SAAS,EAAE7F;MACb,CAAC,EACD;QACEyB,EAAE,EAAE,gBAAgB;QACpBkE,IAAI,EAAE,aAAa;QACnBC,KAAK,EAAE;MACT,CAAC,EACD;QACEnE,EAAE,EAAE,cAAc;QAClBkE,IAAI,EAAE,aAAa;QACnBC,KAAK,EAAE;MACT,CAAC,CACF;MACDZ,QAAQ,EAAEA,QAAQ;MAClBtB,IAAI,EAAEA,IAAI;MACVoC,gBAAgB,EAAE;QAChB;QACAC,8BAA8B,EAAE,CAAC,4BAA4B,CAAC;QAC9DC,eAAe,EAAE,CAAC,aAAa,CAAC;QAChCC,yBAAyB,EAAE,CACzB,wBAAwB,EACxB,8BAA8B,EAC9B,yBAAyB,CAC1B;QACDC,QAAQ,EAAE,CAAC,oBAAoB,EAAE,8BAA8B,CAAC;QAChEC,cAAc,EAAE,CAAC,8BAA8B,CAAC;QAChDC,YAAY,EAAE,CACZ,kCAAkC,EAClC,qCAAqC;MAEzC,CAAC;MACDC,SAAS,EAAE;IACb,CAAC;IAEDhC,KAAA,CAAKiC,SAAS,GAAGjC,KAAA,CAAKiC,SAAS,CAACC,IAAI,CAAAC,sBAAA,CAAAA,sBAAA,CAAAnC,KAAA,EAAK,CAAC;IAC1CA,KAAA,CAAKoC,aAAa,GAAGpC,KAAA,CAAKoC,aAAa,CAACF,IAAI,CAAAC,sBAAA,CAAAA,sBAAA,CAAAnC,KAAA,EAAK,CAAC;IAClDA,KAAA,CAAKqC,cAAc,GAAGrC,KAAA,CAAKqC,cAAc,CAACH,IAAI,CAAAC,sBAAA,CAAAA,sBAAA,CAAAnC,KAAA,EAAK,CAAC;IACpDA,KAAA,CAAKsC,eAAe,GAAGtC,KAAA,CAAKsC,eAAe,CAACJ,IAAI,CAAAC,sBAAA,CAAAA,sBAAA,CAAAnC,KAAA,EAAK,CAAC;IAEtDA,KAAA,CAAKuC,gBAAgB,GAAGvC,KAAA,CAAKuC,gBAAgB,CAACL,IAAI,CAAAC,sBAAA,CAAAA,sBAAA,CAAAnC,KAAA,EAAK,CAAC;IACxDA,KAAA,CAAKwC,oBAAoB,GAAGxC,KAAA,CAAKwC,oBAAoB,CAACN,IAAI,CAAAC,sBAAA,CAAAA,sBAAA,CAAAnC,KAAA,EAAK,CAAC;IAEhEA,KAAA,CAAKK,eAAe,GAAGL,KAAA,CAAKK,eAAe,CAAC6B,IAAI,CAAAC,sBAAA,CAAAA,sBAAA,CAAAnC,KAAA,EAAK,CAAC;IAEtDA,KAAA,CAAKyC,UAAU,GAAGzC,KAAA,CAAKyC,UAAU,CAACP,IAAI,CAAAC,sBAAA,CAAAA,sBAAA,CAAAnC,KAAA,EAAK,CAAC;IAE5CA,KAAA,CAAK0C,oBAAoB,GAAG1C,KAAA,CAAK0C,oBAAoB,CAACR,IAAI,CAAAC,sBAAA,CAAAA,sBAAA,CAAAnC,KAAA,EAAK,CAAC;IAChEA,KAAA,CAAK2C,SAAS,GAAG3C,KAAA,CAAK2C,SAAS,CAACT,IAAI,CAAAC,sBAAA,CAAAA,sBAAA,CAAAnC,KAAA,EAAK,CAAC;IAE1CA,KAAA,CAAK4C,MAAM,GAAG5C,KAAA,CAAK4C,MAAM,CAACV,IAAI,CAAAC,sBAAA,CAAAA,sBAAA,CAAAnC,KAAA,EAAK,CAAC;IACpCA,KAAA,CAAK6C,MAAM,GAAG7C,KAAA,CAAK6C,MAAM,CAACX,IAAI,CAAAC,sBAAA,CAAAA,sBAAA,CAAAnC,KAAA,EAAK,CAAC;IAAC,OAAAA,KAAA;EACvC;EAAC8C,YAAA,CAAAjD,kBAAA;IAAAkD,GAAA;IAAAzF,KAAA,WAAA0F,kBAAA,EAEmB;MAClB,IAAI,CAACf,SAAS,CAAC,IAAI,CAACvB,KAAK,CAACW,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;MAE7C3B,OAAO,CAACC,GAAG,CAAC,CAAC;MACb;IACF;EAAC;IAAAoD,GAAA;IAAAzF,KAAA,WAAAgF,gBAEeW,MAAM,EAAEC,OAAO,EAAE;MAC/B,IAAIjG,QAAQ,GAAG,IAAI,CAACyD,KAAK,CAACzD,QAAQ;MAClCyC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE1C,QAAQ,EAAEiG,OAAO,CAAC;MACpD,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGlG,QAAQ,CAACmG,MAAM,EAAED,KAAK,EAAE,EAAE;QACpD,IAAIlG,QAAQ,CAACkG,KAAK,CAAC,CAAC,IAAI,CAAC,IAAIF,MAAM,EAAE;UACnC,IAAIjG,IAAI,GAAGC,QAAQ,CAACkG,KAAK,CAAC,CAAC,MAAM,CAAC;UAClC,IAAIE,MAAM,GAAGrG,IAAI,CAAC,QAAQ,CAAC;UAE3B,KAAK,IAAIsG,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAGD,MAAM,CAACD,MAAM,EAAEE,MAAM,EAAE,EAAE;YACrD,IAAID,MAAM,CAACC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAIJ,OAAO,EAAE;cACnC,OAAOG,MAAM,CAACC,MAAM,CAAC;YACvB;UACF;QACF;MACF;MAEA,OAAO,IAAI;IACb;EAAC;IAAAP,GAAA;IAAAzF,KAAA,WAAAkF,qBAEoBS,MAAM,EAAEC,OAAO,EAAE;MACpCxD,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEuD,OAAO,EAAED,MAAM,CAAC;MACvC,IAAIM,KAAK,GAAG,IAAI,CAACjB,eAAe,CAACW,MAAM,EAAEC,OAAO,CAAC;MAEjD,IAAIK,KAAK,IAAI,IAAI,EAAE;QACjB,OAAO,EAAE;MACX,CAAC,MAAM;QACL,OAAOA,KAAK,CAACjG,KAAK;MACpB;IACF;EAAC;IAAAyF,GAAA;IAAAzF,KAAA,WAAAiF,iBAEgBiB,SAAS,EAAErC,WAAW,EAAE;MACvC,IAAIsC,KAAK,GAAG,IAAI;MAEhB,QAAQD,SAAS;QACf,KAAK,4BAA4B;UAC/BC,KAAK,GAAG;YACNC,oBAAoB,EAAE;cACpBjG,aAAa,EAAE,IAAI,CAAC+E,oBAAoB,CACtCgB,SAAS,EACT,qBACF;YACF;UACF,CAAC;UACD;QACF,KAAK,aAAa;UAChBC,KAAK,GAAG;YACNC,oBAAoB,EAAE;cACpBC,eAAe,EAAE,IAAI,CAACnB,oBAAoB,CAACgB,SAAS,EAAE,MAAM,CAAC;cAC7D7F,KAAK,EAAE,IAAI,CAAC6E,oBAAoB,CAACgB,SAAS,EAAE,OAAO;YACrD;UACF,CAAC;UACD;QACF,KAAK,wBAAwB;UAC3BC,KAAK,GAAG;YACNC,oBAAoB,EAAE;cACpBE,iBAAiB,EAAEC,QAAQ,CACzB,IAAI,CAACrB,oBAAoB,CAACgB,SAAS,EAAE,eAAe,CACtD,CAAC;cACD3F,YAAY,EAAE,IAAI,CAAC2E,oBAAoB,CAACgB,SAAS,EAAE,cAAc,CAAC;cAClE1F,SAAS,EAAE,IAAI,CAAC0E,oBAAoB,CAACgB,SAAS,EAAE,WAAW,CAAC;cAC5DzF,YAAY,EAAE8F,QAAQ,CACpB,IAAI,CAACrB,oBAAoB,CAACgB,SAAS,EAAE,cAAc,CACrD,CAAC;cACDxF,cAAc,EAAE6F,QAAQ,CACtB,IAAI,CAACrB,oBAAoB,CAACgB,SAAS,EAAE,gBAAgB,CACvD,CAAC;cACDM,oBAAoB,EAAE,IAAI,CAACtB,oBAAoB,CAC7CgB,SAAS,EACT,eACF,CAAC;cACDO,0BAA0B,EAAE,IAAI,CAACvB,oBAAoB,CACnDgB,SAAS,EACT,eACF,CAAC;cACDpF,eAAe,EAAE,IAAI,CAACoE,oBAAoB,CACxCgB,SAAS,EACT,iBACF;YACF;UACF,CAAC;UACD;QACF,KAAK,8BAA8B;UACjCC,KAAK,GAAG;YACNO,+BAA+B,EAAE;cAC/B3F,WAAW,EAAE4F,UAAU,CACrB,IAAI,CAACzB,oBAAoB,CAACgB,SAAS,EAAE,aAAa,CACpD,CAAC;cACDlF,aAAa,EAAE2F,UAAU,CACvB,IAAI,CAACzB,oBAAoB,CAACgB,SAAS,EAAE,eAAe,CACtD,CAAC;cACD;cACA;cACAU,mBAAmB,EAAE,IAAI,CAAC1B,oBAAoB,CAC5CgB,SAAS,EACT,aACF,CAAC;cACDhF,SAAS,EAAEqF,QAAQ,CACjB,IAAI,CAACrB,oBAAoB,CAACgB,SAAS,EAAE,WAAW,CAClD,CAAC;cACD/E,YAAY,EAAE,IAAI,CAAC+D,oBAAoB,CAACgB,SAAS,EAAE,cAAc,CAAC;cAClEW,8BAA8B,EAAE,IAAI,CAAC3B,oBAAoB,CACvDgB,SAAS,EACT,aACF,CAAC;cACDY,eAAe,EAAE,IAAI,CAAC5B,oBAAoB,CAACgB,SAAS,EAAE,YAAY;YACpE;UACF,CAAC;UACD;QACF,KAAK,oBAAoB;UACvBC,KAAK,GAAG;YACNC,oBAAoB,EAAE;cACpBzE,eAAe,EAAE,IAAI,CAACuD,oBAAoB,CACxCgB,SAAS,EACT,iBACF,CAAC;cACDa,UAAU,EAAE,IAAI,CAAC7B,oBAAoB,CAACgB,SAAS,EAAE,UAAU;YAC7D;UACF,CAAC;UACD;QACF,KAAK,8BAA8B;UACjCC,KAAK,GAAG;YACNa,qBAAqB,EAAEnD;UACzB,CAAC;UACD;QACF,KAAK,kCAAkC;UACrC;QACF,KAAK,qCAAqC;UACxCsC,KAAK,GAAG;YACNc,oBAAoB,EAAEpD;UACxB,CAAC;UACD;MACJ;MAEA,OAAOsC,KAAK;IACd;EAAC;IAAAV,GAAA;IAAAzF,KAAA,WAAA8E,cAEaoB,SAAS,EAAErC,WAAW,EAAgC;MAAA,IAA9B5D,OAAO,GAAAiH,SAAA,CAAApB,MAAA,QAAAoB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,IAAI;MAAA,IAAEE,IAAI,GAAAF,SAAA,CAAApB,MAAA,QAAAoB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,KAAK;MAChE9E,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE6D,SAAS,EAAErC,WAAW,EAAE5D,OAAO,EAAEmH,IAAI,CAAC;MACpE,IAAIzH,QAAQ,GAAG,IAAI,CAACyD,KAAK,CAACzD,QAAQ;MAClC,IAAI0H,MAAM,GAAG,KAAK;MAClB,KAAK,IAAIrB,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAGrG,QAAQ,CAACmG,MAAM,EAAEE,MAAM,EAAE,EAAE;QACvD,IAAIrG,QAAQ,CAACqG,MAAM,CAAC,CAAC,IAAI,CAAC,IAAIE,SAAS,EAAE;UACvCvG,QAAQ,CAACqG,MAAM,CAAC,CAAC,MAAM,CAAC,GAAGnC,WAAW;UACtCwD,MAAM,GAAG,IAAI;QACf;MACF;MAEA,IAAI,CAACA,MAAM,EAAE;QACX1H,QAAQ,CAACE,IAAI,CAAC;UACZC,EAAE,EAAEoG,SAAS;UACbxG,IAAI,EAAEmE,WAAW;UACjB5D,OAAO,EAAEA;QACX,CAAC,CAAC;MACJ;MAEA,IAAIkG,KAAK,GAAG,IAAI,CAAClB,gBAAgB,CAACiB,SAAS,EAAErC,WAAW,CAAC;MAEzDzB,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAE8D,KAAK,EAAE,WAAW,EAAE,IAAI,CAAC/C,KAAK,CAACK,MAAM,CAAC;MAE5D,IAAI6D,QAAQ,GAAG,IAAI;MACnBnB,KAAK,GAAG,IAAI;MACZ,IAAIA,KAAK,IAAI,IAAI,EAAE;QACjB,IAAI,IAAI,CAAC/C,KAAK,CAACK,MAAM,IAAI,IAAI,EAAE;UAC7BnF,8BAA8B,CAAC;YAAE2D,SAAS,EAAE;cAAEvC,IAAI,EAAEyG;YAAM;UAAE,CAAC,CAAC,CAACoB,IAAI,CACjE,UAACC,QAAQ,EAAK;YACZF,QAAQ,CAACpE,QAAQ,CAAC;cAChBO,MAAM,EAAE+D,QAAQ,CAAC,MAAM,CAAC,CAAC,4BAA4B,CAAC,CAAC,IAAI;YAC7D,CAAC,CAAC;UACJ,CACF,CAAC;QACH,CAAC,MAAM;UACLhJ,iCAAiC,CAAC;YAChCyD,SAAS,EAAE;cAAEnC,EAAE,EAAE,IAAI,CAACsD,KAAK,CAACK,MAAM;cAAE/D,IAAI,EAAEyG;YAAM;UAClD,CAAC,CAAC,CAACoB,IAAI,CAAC,UAACC,QAAQ,EAAK;YACpB,IAAIJ,IAAI,EAAE;cACRK,KAAK,CAAC,sBAAsB,CAAC;cAC7BH,QAAQ,CAACxF,KAAK,CAAC4F,OAAO,CAAC7H,IAAI,CAAC,qBAAqB,CAAC;YACpD;UACF,CAAC,CAAC;QACJ;MACF;MAEA,IAAI,CAACqD,QAAQ,CAAC;QACZvD,QAAQ,EAAEA;MACZ,CAAC,CAAC;MAEFyC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE1C,QAAQ,CAAC;IACpC;EAAC;IAAA8F,GAAA;IAAAzF,KAAA,WAAA+E,eAEcmB,SAAS,EAA+B;MAAA,IAA7ByB,SAAS,GAAAT,SAAA,CAAApB,MAAA,QAAAoB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,IAAI;MAAA,IAAEU,SAAS,GAAAV,SAAA,CAAApB,MAAA,OAAAoB,SAAA,MAAAC,SAAA;MACnD,IAAIxH,QAAQ;MACZ,IAAIgI,SAAS,EAAE;QACbhI,QAAQ,GAAG,IAAI,CAACyD,KAAK,CAACzD,QAAQ;MAChC,CAAC,MAAM;QACLA,QAAQ,GAAGiI,SAAS;MACtB;MAEA,KAAK,IAAI5B,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAGrG,QAAQ,CAACmG,MAAM,EAAEE,MAAM,EAAE,EAAE;QACvD,IAAIrG,QAAQ,CAACqG,MAAM,CAAC,CAAC,IAAI,CAAC,IAAIE,SAAS,EAAE;UACvC,OAAOvG,QAAQ,CAACqG,MAAM,CAAC,CAAC,MAAM,CAAC;QACjC;MACF;MAEA,OAAO,CAAC,CAAC;IACX;EAAC;IAAAP,GAAA;IAAAzF,KAAA,WAAA2E,UAESuB,SAAS,EAAE;MAAA,IAAA2B,MAAA;MACnB;MACA;MACA;MACAzF,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE6D,SAAS,CAAC;MACnC,IAAIA,SAAS,KAAK,gCAAgC,EAAE;QAClD,IAAI4B,EAAE,GAAGrI,eAAe,CAAC,CAAC,CAAC,CAAC;QAC5B,IAAI,CAACyD,QAAQ,CAAC;UAAEvD,QAAQ,EAAEmI,EAAE;UAAEpD,SAAS,EAAE;QAAM,CAAC,CAAC;MACnD;MAEA,IAAIqD,WAAW,GAAGxK,0BAA0B;MAE5C,IAAI,CAAC2F,QAAQ,CAAC;QACZU,WAAW,EAAE;MACf,CAAC,CAAC;MACF,IAAIoE,mBAAmB,GAAG,IAAI,CAAC9C,oBAAoB,CACjD,4BAA4B,EAC5B,qBACF,CAAC;MAED,QAAQgB,SAAS;QACf,KAAK,4BAA4B;UAC/B6B,WAAW,GAAGxK,0BAA0B;UACxC;QACF,KAAK,aAAa;UAChBwK,WAAW,GAAG5J,KAAK;UACnB;QACF,KAAK,wBAAwB;UAC3B4J,WAAW,GAAG3J,UAAU;UACxB;QACF,KAAK,yBAAyB;UAC5B2J,WAAW,GAAGpK,uBAAuB;UACrC;QACF,KAAK,8BAA8B;UACjCoK,WAAW,GAAGtK,4BAA4B;UAC1C;QACF,KAAK,oBAAoB;UACvBsK,WAAW,GAAG1J,SAAS;UACvB;QACF,KAAK,8BAA8B;UACjC0J,WAAW,GAAGlK,4BAA4B;UAC1C;QACF,KAAK,kCAAkC;UACrCkK,WAAW,GAAGjK,gCAAgC;UAC9C;QACF,KAAK,qCAAqC;UACxCiK,WAAW,GAAGhK,mCAAmC;UACjD;QACF,KAAK,YAAY;UACfgK,WAAW,GAAG/J,UAAU;UACxB,IAAI,CAACkF,QAAQ,CAAC;YAAEwB,SAAS,EAAE;UAAK,CAAC,CAAC;UAClC;QACF,KAAK,gCAAgC;UACnC,IAAI,CAACxB,QAAQ,CAAC;YAAEwB,SAAS,EAAE;UAAM,CAAC,CAAC;UACnCqD,WAAW,GAAGxK,0BAA0B;UACxC2I,SAAS,GAAG,4BAA4B;UACxC;QACF,KAAK,iBAAiB;UACpB6B,WAAW,GAAG5J,KAAK;UACnB+H,SAAS,GAAG,aAAa;UACzB;QACF,KAAK,2BAA2B;UAC9B,QAAQ8B,mBAAmB;YACzB,KAAK,gBAAgB;cACnBD,WAAW,GAAGpK,uBAAuB;cACrCuI,SAAS,GAAG,yBAAyB;cACrC;YACF,KAAK,wBAAwB;YAC7B,KAAK,wBAAwB;cAC3B6B,WAAW,GAAGtK,4BAA4B;cAC1CyI,SAAS,GAAG,8BAA8B;cAC1C;YACF;cACE6B,WAAW,GAAG3J,UAAU;cACxB8H,SAAS,GAAG,wBAAwB;UACxC;UACA;QACF,KAAK,UAAU;UACb,QAAQ8B,mBAAmB;YACzB,KAAK,gBAAgB;cACnBD,WAAW,GAAGjK,gCAAgC;cAC9CoI,SAAS,GAAG,kCAAkC;cAC9C;YACF,KAAK,wBAAwB;YAC7B,KAAK,wBAAwB;cAC3B6B,WAAW,GAAG/J,UAAU;cACxBkI,SAAS,GAAG,YAAY;cACxB;YACF;cACE6B,WAAW,GAAG1J,SAAS;cACvB6H,SAAS,GAAG,oBAAoB;UACpC;UACA;QACF,KAAK,gBAAgB;UACnB,QAAQ8B,mBAAmB;YACzB,KAAK,gBAAgB;cACnBD,WAAW,GAAGjK,gCAAgC;cAC9CoI,SAAS,GAAG,kCAAkC;cAC9C;YACF,KAAK,wBAAwB;YAC7B,KAAK,wBAAwB;cAC3B6B,WAAW,GAAG/J,UAAU;cACxBkI,SAAS,GAAG,YAAY;cACxB;YACF;cACE6B,WAAW,GAAGlK,4BAA4B;cAC1CqI,SAAS,GAAG,8BAA8B;UAC9C;UACA;QACF,KAAK,cAAc;UACjB,QAAQ8B,mBAAmB;YACzB,KAAK,gBAAgB;cACnBD,WAAW,GAAGjK,gCAAgC;cAC9CoI,SAAS,GAAG,kCAAkC;cAC9C;YACF,KAAK,wBAAwB;YAC7B,KAAK,wBAAwB;cAC3B6B,WAAW,GAAG/J,UAAU;cACxBkI,SAAS,GAAG,YAAY;cACxB;YACF;cACE6B,WAAW,GAAGjK,gCAAgC;cAC9CoI,SAAS,GAAG,kCAAkC;UAClD;UACA;MACJ;MAEA,IAAIrC,WAAW,GAAG,IAAI,CAACkB,cAAc,CAACmB,SAAS,CAAC;MAEhD+B,UAAU,CAAC,YAAM;QACfJ,MAAI,CAAC3E,QAAQ,CAAC;UACZU,WAAW,EAAE,IAAI;UACjBF,YAAY,EAAEwC,SAAS;UACvBvC,UAAU,EAAEoE,WAAW;UACvBlE,WAAW,EAAEA;QACf,CAAC,CAAC;MACJ,CAAC,EAAE,GAAG,CAAC;IACT;EAAC;IAAA4B,GAAA;IAAAzF,KAAA,WAAAmF,WAOUxF,QAAQ,EAAE;MACnByC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE1C,QAAQ,CAAC;MAElC,IAAI2H,QAAQ,GAAG,IAAI;MACnBW,UAAU,CAAC,YAAY;QACrBX,QAAQ,CAACpE,QAAQ,CAAC;UAChBU,WAAW,EAAE,IAAI;UACjBP,QAAQ,EAAE,IAAI;UACd1D,QAAQ,EAAEA,QAAQ;UAClBkE,WAAW,EAAEyD,QAAQ,CAACvC,cAAc,CAClCuC,QAAQ,CAAClE,KAAK,CAACM,YAAY,EAC3B,KAAK,EACL/D,QACF;QACF,CAAC,CAAC;MACJ,CAAC,EAAE,GAAG,CAAC;IACT;EAAC;IAAA8F,GAAA;IAAAzF,KAAA,WAAAqF,UAES6C,QAAQ,EAAE;MAClB,IAAIC,QAAQ,GAAG,KAAK;MACpB,IAAIC,MAAM,GAAG,KAAK;MAElB,IAAIJ,mBAAmB,GAAG,IAAI,CAAC9C,oBAAoB,CACjD,4BAA4B,EAC5B,qBACF,CAAC;;MAED;MACA,IAAImD,mBAAmB,GAAG,CAAC,CAAC;MAC5B,KAAK,IAAIC,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAG,IAAI,CAAClF,KAAK,CAACW,SAAS,CAAC+B,MAAM,EAAEwC,MAAM,EAAE,EAAE;QACnE,IAAI,IAAI,CAAClF,KAAK,CAACM,YAAY,IAAI,YAAY,EAAE;UAC3C,IAAI,IAAI,CAACN,KAAK,CAACW,SAAS,CAACuE,MAAM,CAAC,CAACxI,EAAE,IAAIoI,QAAQ,CAACpI,EAAE,EAAE;YAClDuI,mBAAmB,GAAGC,MAAM;YAC5B;UACF;QACF;QACA,KACE,IAAItC,MAAM,GAAG,CAAC,EACdA,MAAM,GACN,IAAI,CAAC5C,KAAK,CAACe,gBAAgB,CAAC,IAAI,CAACf,KAAK,CAACW,SAAS,CAACuE,MAAM,CAAC,CAACxI,EAAE,CAAC,CAACgG,MAAM,EACnEE,MAAM,EAAE,EACR;UACA,IACE,IAAI,CAAC5C,KAAK,CAACe,gBAAgB,CAAC,IAAI,CAACf,KAAK,CAACW,SAAS,CAACuE,MAAM,CAAC,CAACxI,EAAE,CAAC,CAC5DkG,MAAM,CACL,IAAI,IAAI,CAAC5C,KAAK,CAACM,YAAY,EAC5B;YACA2E,mBAAmB,GAAGC,MAAM;YAC5B;UACF;QACF;MACF;MAGA,IAAI,IAAI,CAAClF,KAAK,CAACsB,SAAS,IAAIwD,QAAQ,CAACpI,EAAE,KAAK,gCAAgC,EAAE;QAC5E,OAAO;UACLqI,QAAQ,EAAE,IAAI;UACdC,MAAM,EAAE;QACV,CAAC;MACH;MAEA,IAAIJ,mBAAmB,IAAI,IAAI,IAAIA,mBAAmB,IAAI,EAAE,EAAE;QAC5D,QAAQE,QAAQ,CAACpI,EAAE;UACjB,KAAK,gCAAgC;YACnC,IAAIuI,mBAAmB,KAAK,CAAC,EAAE;cAC7B,IAAI,IAAI,CAACjF,KAAK,CAACsB,SAAS,EAAE;gBACxByD,QAAQ,GAAG,KAAK;gBAChBC,MAAM,GAAG,IAAI;cACf,CAAC,MAAM;gBACLD,QAAQ,GAAG,IAAI;gBACfC,MAAM,GAAG,KAAK;gBACdJ,mBAAmB,GAAG,EAAE;cAC1B;YACF;YACA,IAAIK,mBAAmB,IAAI,CAAC,EAAE;cAC5BD,MAAM,GAAG,IAAI;YACf;YACA;UACF,KAAK,iBAAiB;YACpB,IAAIC,mBAAmB,IAAI,CAAC,EAAE;cAC5BD,MAAM,GAAG,IAAI;YACf;YACA;UACF,KAAK,2BAA2B;YAC9B,IAAIC,mBAAmB,IAAI,CAAC,EAAE;cAC5BD,MAAM,GAAG,IAAI;YACf;YACA;UACF,KAAK,UAAU;YACb,IAAIC,mBAAmB,IAAI,CAAC,EAAE;cAC5BD,MAAM,GAAG,IAAI;YACf;YACA,QAAQJ,mBAAmB;cACzB,KAAK,gBAAgB;cACrB,KAAK,wBAAwB;cAC7B,KAAK,wBAAwB;gBAC3BG,QAAQ,GAAG,IAAI;YACnB;YACA;UACF,KAAK,gBAAgB;YACnB,IAAIE,mBAAmB,IAAI,CAAC,EAAE;cAC5BD,MAAM,GAAG,IAAI;YACf;YACA,QAAQJ,mBAAmB;cACzB,KAAK,gBAAgB;cACrB,KAAK,wBAAwB;cAC7B,KAAK,wBAAwB;gBAC3BG,QAAQ,GAAG,IAAI;YACnB;YACA;UACF,KAAK,cAAc;YACjB,IAAIE,mBAAmB,IAAI,CAAC,EAAE;cAC5BD,MAAM,GAAG,IAAI;YACf;YACA,QAAQJ,mBAAmB;cACzB,KAAK,wBAAwB;cAC7B,KAAK,wBAAwB;gBAC3BG,QAAQ,GAAG,IAAI;YACnB;YACA;QACJ;MACF,CAAC,MAAM;QACL,IAAID,QAAQ,CAACpI,EAAE,IAAI,gCAAgC,EAAE;UACnDqI,QAAQ,GAAG,IAAI;QACjB;MACF;MAEA,OAAO;QACLA,QAAQ,EAAEA,QAAQ;QAClBC,MAAM,EAAEA;MACV,CAAC;IACH;EAAC;IAAA3C,GAAA;IAAAzF,KAAA,WAAAoF,qBAEoB8C,QAAQ,EAAE;MAC7B,IAAIvI,QAAQ,GAAG,EAAE;MACjB,IAAIqI,mBAAmB,GAAG,IAAI,CAAC9C,oBAAoB,CACjD,4BAA4B,EAC5B,qBACF,CAAC;MAED,IAAI8C,mBAAmB,IAAI,IAAI,IAAIA,mBAAmB,IAAI,EAAE,EAAE;QAC5D,OAAOrI,QAAQ;MACjB;MAEA,KAAK,IAAIkG,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,IAAI,CAACzC,KAAK,CAACzD,QAAQ,CAACmG,MAAM,EAAED,KAAK,EAAE,EAAE;QAC/D,IAAIqC,QAAQ,CAACpI,EAAE,IAAI,IAAI,CAACsD,KAAK,CAACzD,QAAQ,CAACkG,KAAK,CAAC,CAAC,QAAQ,CAAC,EAAE;UACvD,QAAQqC,QAAQ,CAACpI,EAAE;YACjB,KAAK,gCAAgC;cACnCH,QAAQ,CAACE,IAAI,CAAC,IAAI,CAACuD,KAAK,CAACzD,QAAQ,CAACkG,KAAK,CAAC,CAAC;cACzC;YACF,KAAK,iBAAiB;cACpBlG,QAAQ,CAACE,IAAI,CAAC,IAAI,CAACuD,KAAK,CAACzD,QAAQ,CAACkG,KAAK,CAAC,CAAC;cACzC;YACF,KAAK,2BAA2B;cAC9B,IAAI,IAAI,CAACzC,KAAK,CAACzD,QAAQ,CAACkG,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,wBAAwB,EAAE;gBAChE,IACEmC,mBAAmB,IAAI,gBAAgB,IACvCA,mBAAmB,IAAI,wBAAwB,IAC/CA,mBAAmB,IAAI,wBAAwB,EAC/C;kBACArI,QAAQ,CAACE,IAAI,CAAC,IAAI,CAACuD,KAAK,CAACzD,QAAQ,CAACkG,KAAK,CAAC,CAAC;gBAC3C;cACF;cACA,IACEmC,mBAAmB,IAAI,gBAAgB,IACvC,IAAI,CAAC5E,KAAK,CAACzD,QAAQ,CAACkG,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,yBAAyB,EAC7D;gBACAlG,QAAQ,CAACE,IAAI,CAAC,IAAI,CAACuD,KAAK,CAACzD,QAAQ,CAACkG,KAAK,CAAC,CAAC;cAC3C,CAAC,MAAM,IACLmC,mBAAmB,IAAI,wBAAwB,IAC/C,IAAI,CAAC5E,KAAK,CAACzD,QAAQ,CAACkG,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,8BAA8B,EAClE;gBACAlG,QAAQ,CAACE,IAAI,CAAC,IAAI,CAACuD,KAAK,CAACzD,QAAQ,CAACkG,KAAK,CAAC,CAAC;cAC3C,CAAC,MAAM,IACLmC,mBAAmB,IAAI,wBAAwB,IAC/C,IAAI,CAAC5E,KAAK,CAACzD,QAAQ,CAACkG,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,8BAA8B,EAClE;gBACAlG,QAAQ,CAACE,IAAI,CAAC,IAAI,CAACuD,KAAK,CAACzD,QAAQ,CAACkG,KAAK,CAAC,CAAC;cAC3C;cACA;YACF,KAAK,UAAU;cACb,QAAQmC,mBAAmB;gBACzB,KAAK,gBAAgB;gBACrB,KAAK,wBAAwB;gBAC7B,KAAK,wBAAwB;kBAC3B;gBACF;kBACErI,QAAQ,CAACE,IAAI,CAAC,IAAI,CAACuD,KAAK,CAACzD,QAAQ,CAACkG,KAAK,CAAC,CAAC;kBACzC;cACJ;cACA;YACF,KAAK,gBAAgB;cACnB,QAAQmC,mBAAmB;gBACzB,KAAK,gBAAgB;gBACrB,KAAK,wBAAwB;gBAC7B,KAAK,wBAAwB;kBAC3B;gBACF;kBACErI,QAAQ,CAACE,IAAI,CAAC,IAAI,CAACuD,KAAK,CAACzD,QAAQ,CAACkG,KAAK,CAAC,CAAC;kBACzC;cACJ;cACA;YACF,KAAK,cAAc;cACjB,QAAQmC,mBAAmB;gBACzB,KAAK,wBAAwB;gBAC7B,KAAK,wBAAwB;kBAC3B;gBACF;kBACErI,QAAQ,CAACE,IAAI,CAAC,IAAI,CAACuD,KAAK,CAACzD,QAAQ,CAACkG,KAAK,CAAC,CAAC;kBACzC;cACJ;cACA;UACJ;QACF;MACF;MAEAzD,OAAO,CAACC,GAAG,CACT,sBAAsB,EACtB6F,QAAQ,CAACpI,EAAE,EACXkI,mBAAmB,EACnBrI,QACF,CAAC;MAED,OAAOA,QAAQ;IACjB;EAAC;IAAA8F,GAAA;IAAAzF,KAAA,WAAAsF,OAEMiD,aAAa,EAAE;MACpB,IAAIC,aAAa,GAAG,EAAE;MAEtB,IAAIR,mBAAmB,GAAG,IAAI,CAAC9C,oBAAoB,CACjD,4BAA4B,EAC5B,qBACF,CAAC;MACD,IAAItD,QAAQ,GAAG,IAAI,CAACsD,oBAAoB,CAAC,oBAAoB,EAAE,UAAU,CAAC;MAC1E9C,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEkG,aAAa,CAAC;MAC3C,QAAQA,aAAa;QACnB;QACA,KAAK,4BAA4B;UAC/BC,aAAa,GAAG,aAAa;UAC7B;;QAEF;QACA,KAAK,aAAa;UAChB,QAAQR,mBAAmB;YACzB,KAAK,gBAAgB;cACnBQ,aAAa,GAAG,yBAAyB;cACzC;YACF,KAAK,wBAAwB;YAC7B,KAAK,wBAAwB;cAC3BA,aAAa,GAAG,8BAA8B;cAC9C;YACF;cACEA,aAAa,GAAG,wBAAwB;UAC5C;UACA;;QAEF;QACA,KAAK,wBAAwB;UAC3BA,aAAa,GAAG,oBAAoB;UACpC;QACF,KAAK,8BAA8B;UACjCA,aAAa,GAAG,YAAY;UAC5B;QACF,KAAK,yBAAyB;UAC5BA,aAAa,GAAG,cAAc;UAC9B;;QAEF;QACA,KAAK,oBAAoB;UACvB,QAAQ5G,QAAQ;YACd,KAAK,OAAO;cACV4G,aAAa,GAAG,kCAAkC;cAClD;YACF,KAAK,YAAY;cACfA,aAAa,GAAG,8BAA8B;UAClD;UAEA,QAAQR,mBAAmB;YACzB,KAAK,gBAAgB;cACnBQ,aAAa,GAAG,cAAc;cAC9B;YACF,KAAK,wBAAwB;YAC7B,KAAK,wBAAwB;cAC3BA,aAAa,GAAG,YAAY;cAC5B;UACJ;UACA;QACF,KAAK,8BAA8B;UACjCA,aAAa,GAAG,kCAAkC;UAClD;;QAEF;QACA,KAAK,kCAAkC;UACrC,IAAIC,mBAAmB,GAAG,IAAI,CAACvD,oBAAoB,CACjD,kCAAkC,EAClC,qBACF,CAAC;UACD,IAAIuD,mBAAmB,IAAI,KAAK,EAAE;YAChCD,aAAa,GAAG,qCAAqC;UACvD,CAAC,MAAM;YACLA,aAAa,GAAG,YAAY;UAC9B;UACA;QACF,KAAK,qCAAqC;UACxCA,aAAa,GAAG,YAAY;UAC5B;MACJ;MAEA,IAAI,CAAC7D,SAAS,CAAC6D,aAAa,CAAC;IAC/B;EAAC;IAAA/C,GAAA;IAAAzF,KAAA,WAAAuF,OAEMgD,aAAa,EAAE;MACpB,IAAIG,aAAa,GAAG,EAAE;MACtB,IAAIC,gBAAgB,GAAG,IAAI,CAACzD,oBAAoB,CAC9C,wBAAwB,EACxB,kBACF,CAAC;MAED,QAAQqD,aAAa;QACnB;QACA,KAAK,4BAA4B;UAC/B;;QAEF;QACA,KAAK,aAAa;UAChBG,aAAa,GAAG,4BAA4B;UAC5C;;QAEF;QACA,KAAK,wBAAwB;UAC3BA,aAAa,GAAG,aAAa;UAC7B;QACF,KAAK,8BAA8B;UACjCA,aAAa,GAAG,aAAa;UAC7B;QACF,KAAK,yBAAyB;UAC5BA,aAAa,GAAG,aAAa;UAC7B;;QAEF;QACA,KAAK,oBAAoB;UACvBA,aAAa,GAAG,wBAAwB;UACxC;QACF,KAAK,8BAA8B;UACjCA,aAAa,GAAG,oBAAoB;UACpC;;QAEF;QACA,KAAK,kCAAkC;UACrC;QACF,KAAK,qCAAqC;UACxCA,aAAa,GAAG,kCAAkC;UAClD;MACJ;MAEA,IAAI,CAAC/D,SAAS,CAAC+D,aAAa,CAAC;IAC/B;EAAC;IAAAjD,GAAA;IAAAzF,KAAA,WAAA4I,OAAA,EAEQ;MAAA,IAAAC,MAAA;MACP,IAAMC,QAAQ,GAAG,CACf;QACEC,IAAI,EAAE,GAAG;QACT9E,KAAK,EAAE;MACT,CAAC,EACD;QACE8E,IAAI,EAAE,UAAU;QAChB9E,KAAK,EAAE;MACT,CAAC,EACD;QACE8E,IAAI,EAAE,qBAAqB;QAC3B9E,KAAK,EAAE;MACT,CAAC,CACF;MAED,IAAI+E,OAAO,GAAG,IAAI,CAAC5F,KAAK,CAACO,UAAU;MAEnC,IAAIsF,iBAAiB,GAAG,0BAA0B;MAClD,IAAI,IAAI,CAAC7F,KAAK,CAACD,eAAe,EAAE;QAC9B8F,iBAAiB,GAAG,4CAA4C;MAClE,CAAC,MAAM;QACLA,iBAAiB,GAAG,gDAAgD;MACtE;MAEA,oBACEvM,KAAA,CAAAuC,aAAA;QAAKiK,SAAS,EAAED,iBAAkB;QAAA9J,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBAChC9C,KAAA,CAAAuC,aAAA;QAAKiK,SAAS,EAAC,sBAAsB;QAAA/J,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACnC9C,KAAA,CAAAuC,aAAA;QAAKiK,SAAS,EAAC,OAAO;QAAA/J,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACpB9C,KAAA,CAAAuC,aAAA;QAAKiK,SAAS,EAAC,uDAAuD;QAAA/J,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACpE9C,KAAA,CAAAuC,aAAA;QAAKiK,SAAS,EAAC,WAAW;QAACC,GAAG,EAAEnM,WAAY;QAAAmC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CAC3C,CAAC,eACN9C,KAAA,CAAAuC,aAAA;QAAKiK,SAAS,EAAC,SAAS;QAAA/J,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACtB9C,KAAA,CAAAuC,aAAA;QAAKiK,SAAS,EAAC,aAAa;QAAA/J,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GACzB,IAAI,CAAC4D,KAAK,CAACW,SAAS,CAACqF,GAAG,CAAC,UAAClB,QAAQ,EAAErC,KAAK,EAAK;QAAA,IAAAwD,gBAAA,GAChBR,MAAI,CAACxD,SAAS,CAAC6C,QAAQ,CAAC;UAA7CC,QAAQ,GAAAkB,gBAAA,CAARlB,QAAQ;UAAEC,MAAM,GAAAiB,gBAAA,CAANjB,MAAM;QAExB,IAAIc,SAAS,GAAG,0BAA0B;QAC1C,IAAIf,QAAQ,EAAE;UACZe,SAAS,GAAG,mCAAmC;QACjD,CAAC,MAAM,IAAId,MAAM,EAAE;UACjBc,SAAS,GAAG,iCAAiC;QAC/C;QACA,oBACExM,KAAA,CAAAuC,aAAA;UAAKiK,SAAS,EAAC,cAAc;UAACzD,GAAG,EAAEI,KAAM;UAAA1G,MAAA,EAAA0J,MAAA;UAAAzJ,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,gBACvC9C,KAAA,CAAAuC,aAAA;UACEqK,IAAI,EAAC,QAAQ;UACbJ,SAAS,EAAEA,SAAU;UACrB,eAAY,KAAK;UACjBK,OAAO,EAAE,SAAAA,QAAA;YAAA,OACP,CAACpB,QAAQ,GAAGU,MAAI,CAAClE,SAAS,CAACuD,QAAQ,CAACpI,EAAE,CAAC,GAAG,IAAI;UAAA,CAC/C;UAAAX,MAAA,EAAA0J,MAAA;UAAAzJ,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,gBAGD9C,KAAA,CAAAuC,aAAA;UAAKuK,KAAK,EAAE;YAAEC,QAAQ,EAAE,EAAE;YAAEC,KAAK,EAAE;UAAU,CAAE;UAAAvK,MAAA,EAAA0J,MAAA;UAAAzJ,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,GAC5CqG,KAAK,GAAG,CACN,CACC,CAAC,eACTnJ,KAAA,CAAAuC,aAAA;UAAGiK,SAAS,EAAC,YAAY;UAAA/J,MAAA,EAAA0J,MAAA;UAAAzJ,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,GAAE0I,QAAQ,CAACjE,KAAS,CAC1C,CAAC;MAEV,CAAC,CACE,CACF,CACF,CAAC,eACNvH,KAAA,CAAAuC,aAAA,CAACN,UAAU;QAAAQ,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CAAC,EACb,CAAC,IAAI,CAAC4D,KAAK,CAACC,QAAQ,iBACnB3G,KAAA,CAAAuC,aAAA,CAAC4C,cAAc;QACbwB,QAAQ,EAAE,IAAI,CAACD,KAAK,CAACC,QAAS;QAC9BtB,IAAI,EAAE,IAAI,CAACqB,KAAK,CAACrB,IAAK;QACtBO,YAAY,EAAE,IAAI,CAAC6C,UAAW;QAAAhG,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAC/B,CACF,eACD9C,KAAA,CAAAuC,aAAA;QAAKiK,SAAS,EAAC,WAAW;QAAA/J,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACxB9C,KAAA,CAAAuC,aAAA;QAAKiK,SAAS,EAAC,kBAAkB;QAAA/J,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAe5B,CAAC,EACL,CAAC,IAAI,CAAC4D,KAAK,CAACC,QAAQ,iBAAI3G,KAAA,CAAAuC,aAAA;QAAAE,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAAK,YAAe,CAAC,EAC7C,IAAI,CAAC4D,KAAK,CAACC,QAAQ,iBAClB3G,KAAA,CAAAuC,aAAA;QAAKiK,SAAS,EAAC,qBAAqB;QAAA/J,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBAClC9C,KAAA,CAAAuC,aAAA;QAAKiK,SAAS,EAAC,sBAAsB;QAAA/J,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACnC9C,KAAA,CAAAuC,aAAA,CAAC3B,YAAY;QACX4L,SAAS,EAAC,iBAAiB;QAC3BS,IAAI,EAAE,IAAI,CAACvG,KAAK,CAACQ,WAAW,GAAG,SAAS,GAAG,QAAS;QAAAzE,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBAEpD9C,KAAA,CAAAuC,aAAA,CAAC+J,OAAO;QACNnF,WAAW,EAAE,IAAI,CAACT,KAAK,CAACS,WAAY;QACpC+F,WAAW,EAAE,IAAI,CAACjF,SAAU;QAC5BkF,eAAe,EAAE,IAAI,CAAC/E,aAAc;QACpCnF,QAAQ,EAAE,IAAI,CAACyD,KAAK,CAACzD,QAAS;QAC9BmK,iBAAiB,EAAE,IAAI,CAAC9E,eAAgB;QACxCvB,MAAM,EAAE,IAAI,CAACL,KAAK,CAACK,MAAO;QAC1BsG,QAAQ,EAAE,IAAI,CAACzE,MAAO;QACtB0E,QAAQ,EAAE,IAAI,CAACzE,MAAO;QAAApG,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CACvB,CACW,CACX,CACF,CAEJ,CACF,CAAC,eACN9C,KAAA,CAAAuC,aAAA;QAAKiK,SAAS,EAAC,uBAAuB;QAAA/J,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACpC9C,KAAA,CAAAuC,aAAA;QACEiK,SAAS,EAAC,0BAA0B;QACpCK,OAAO,EAAE,IAAI,CAACxG,eAAgB;QAAA5D,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBAE9B9C,KAAA,CAAAuC,aAAA;QAAGiK,SAAS,EAAC,SAAS;QAAA/J,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAI,CACtB,CAAC,eACP9C,KAAA,CAAAuC,aAAA;QAAKiK,SAAS,EAAC,4BAA4B;QAAA/J,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GACxC,IAAI,CAAC4D,KAAK,CAACW,SAAS,CAACqF,GAAG,CAAC,UAAClB,QAAQ,EAAErC,KAAK,EAAK;QAC7C,IAAIlG,QAAQ,GAAGkJ,MAAI,CAACzD,oBAAoB,CAAC8C,QAAQ,CAAC;QAClD,OAAOvI,QAAQ,CAACyJ,GAAG,CAAC,UAACa,OAAO,EAAE3B,MAAM,EAAK;UACvC,IAAI2B,OAAO,CAAChK,OAAO,IAAI,KAAK,EAAE;YAC5B,oBAAOvD,KAAA,CAAAuC,aAAA,CAACvC,KAAK,CAACwC,QAAQ;cAACuG,GAAG,EAAE6C,MAAO;cAAAnJ,MAAA,EAAA0J,MAAA;cAAAzJ,QAAA;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAA,CAAiB,CAAC;UACvD;UAEA,IAAI0K,KAAK,GAAG,CAAC;UACb,IAAIC,EAAE,GAAG,KAAK;UACd,IAAIC,OAAO,GAAG,IAAI;UAClB,IAAIvG,WAAW,GAAGoG,OAAO,CAACvK,IAAI;UAE9B,IAAImE,WAAW,CAAC,MAAM,CAAC,EAAE;YACvBuG,OAAO,GAAGvG,WAAW,CAAC,MAAM,CAAC;UAC/B,CAAC,MAAM,IAAIA,WAAW,CAAC,QAAQ,CAAC,EAAE;YAChCuG,OAAO,GAAGvG,WAAW,CAAC,QAAQ,CAAC;UACjC;UACAqG,KAAK,GAAGE,OAAO,CAACtE,MAAM;UAEtB,KAAK,IAAIuE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG9D,QAAQ,CAAC2D,KAAK,CAAC,EAAEG,CAAC,EAAE,EAAE;YACxC,IAAID,OAAO,CAACC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE;cAC7BF,EAAE,GAAG,IAAI;YACX;UACF;UACA;UACA,oBACEzN,KAAA,CAAAuC,aAAA;YAAKiK,SAAS,EAAC,kBAAkB;YAACzD,GAAG,EAAE6C,MAAO;YAAAnJ,MAAA,EAAA0J,MAAA;YAAAzJ,QAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAA,gBAC5C9C,KAAA,CAAAuC,aAAA;YAAKiK,SAAS,EAAC,gBAAgB;YAAA/J,MAAA,EAAA0J,MAAA;YAAAzJ,QAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAA,GAC5B2K,EAAE,gBACDzN,KAAA,CAAAuC,aAAA;YAAIiK,SAAS,EAAC,kBAAkB;YAAA/J,MAAA,EAAA0J,MAAA;YAAAzJ,QAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAA,GAC7BqE,WAAW,CAACI,KACX,CAAC,GACH,IAAI,eAERvH,KAAA,CAAAuC,aAAA;YACEiK,SAAS,EAAC,qBAAqB;YAC/BK,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAMV,MAAI,CAAClE,SAAS,CAACsF,OAAO,CAAC/J,MAAM,CAAC;YAAA,CAAC;YAAAf,MAAA,EAAA0J,MAAA;YAAAzJ,QAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAA,gBAE9C9C,KAAA,CAAAuC,aAAA,CAACnC,IAAI;YAACwM,IAAI,EAAC,MAAM;YAAAnK,MAAA,EAAA0J,MAAA;YAAAzJ,QAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAA,CAAO,CACpB,CACH,CAAC,eACN9C,KAAA,CAAAuC,aAAA;YAAKiK,SAAS,EAAC,oBAAoB;YAAA/J,MAAA,EAAA0J,MAAA;YAAAzJ,QAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAA,GAChCqE,WAAW,CAACkC,MAAM,IACjBlC,WAAW,CAACkC,MAAM,CAACqD,GAAG,CAAC,UAACnD,KAAK,EAAEqE,OAAO,EAAK;YACzC,IAAIrE,KAAK,CAACjG,KAAK,IAAI,EAAE,IAAIiG,KAAK,CAACjG,KAAK,IAAI,IAAI,EAAE;cAC5C,oBACEtD,KAAA,CAAAuC,aAAA,CAACvC,KAAK,CAACwC,QAAQ;gBAACuG,GAAG,EAAE6E,OAAQ;gBAAAnL,MAAA,EAAA0J,MAAA;gBAAAzJ,QAAA;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA;cAAA,CAAiB,CAAC;YAEnD;YACA,oBACE9C,KAAA,CAAAuC,aAAA;cAAKiK,SAAS,EAAC,iBAAiB;cAACzD,GAAG,EAAE6E,OAAQ;cAAAnL,MAAA,EAAA0J,MAAA;cAAAzJ,QAAA;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAA,gBAC5C9C,KAAA,CAAAuC,aAAA;cAAGiK,SAAS,EAAC,uBAAuB;cAAA/J,MAAA,EAAA0J,MAAA;cAAAzJ,QAAA;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAA,GACjCyG,KAAK,CAAChC,KAAK,IAAI,EAAE,GAAGgC,KAAK,CAAChC,KAAK,GAAG,GAAG,GAAG,IAAI,EAAE,GAC9C,CAAC,eACJvH,KAAA,CAAAuC,aAAA;cAAGiK,SAAS,EAAC,uBAAuB;cAAA/J,MAAA,EAAA0J,MAAA;cAAAzJ,QAAA;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAA,GAEjCyG,KAAK,CAACrG,cAAc,CAAC,MAAM,CAAC,IAC3BqG,KAAK,CAAC,MAAM,CAAC,IAAI,UAAU,IAC3BhI,cAAc,CAACgI,KAAK,CAACjG,KAAK,CAAC,EAC5BiG,KAAK,CAACrG,cAAc,CAAC,MAAM,CAAC,IAC3BqG,KAAK,CAAC,MAAM,CAAC,IAAI,SAAS,IAC1BA,KAAK,CAACjG,KAAK,GAAG,IAAI,EACnB,CAACiG,KAAK,CAACrG,cAAc,CAAC,MAAM,CAAC,IAAIqG,KAAK,CAACjG,KACvC,CACA,CAAC;UAEV,CAAC,CAAC,EACH6D,WAAW,CAAC0G,IAAI,IAAI1G,WAAW,CAAC0G,IAAI,CAACzE,MAAM,GAAG,CAAC,iBAC9CpJ,KAAA,CAAAuC,aAAA,CAACvC,KAAK,CAACwC,QAAQ;YAAAC,MAAA,EAAA0J,MAAA;YAAAzJ,QAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAA,GACZyK,OAAO,CAACnK,EAAE,IACT,qCAAqC,iBACnCpD,KAAA,CAAAuC,aAAA,CAACvC,KAAK,CAACwC,QAAQ;YAAAC,MAAA,EAAA0J,MAAA;YAAAzJ,QAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAA,gBACb9C,KAAA,CAAAuC,aAAA;YAAKiK,SAAS,EAAC,gBAAgB;YAAA/J,MAAA,EAAA0J,MAAA;YAAAzJ,QAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAA,gBAC7B9C,KAAA,CAAAuC,aAAA;YAAKiK,SAAS,EAAC,oBAAoB;YAAA/J,MAAA,EAAA0J,MAAA;YAAAzJ,QAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAA,GAAC,qCAE/B,CAAC,eACN9C,KAAA,CAAAuC,aAAA;YAAKiK,SAAS,EAAC,oBAAoB;YAAA/J,MAAA,EAAA0J,MAAA;YAAAzJ,QAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAA,GAAC,UAE/B,CAAC,eACN9C,KAAA,CAAAuC,aAAA;YAAKiK,SAAS,EAAC,oBAAoB;YAAA/J,MAAA,EAAA0J,MAAA;YAAAzJ,QAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAA,GAAC,WAE/B,CACF,CAAC,EACLqE,WAAW,CAAC0G,IAAI,CAACnB,GAAG,CACnB,UAACoB,iBAAiB,EAAEC,MAAM,EAAK;YAC7B,oBACE/N,KAAA,CAAAuC,aAAA;cACEiK,SAAS,EAAC,gBAAgB;cAC1BzD,GAAG,EAAEgF,MAAO;cAAAtL,MAAA,EAAA0J,MAAA;cAAAzJ,QAAA;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAA,gBAEZ9C,KAAA,CAAAuC,aAAA;cAAKiK,SAAS,EAAC,oBAAoB;cAAA/J,MAAA,EAAA0J,MAAA;cAAAzJ,QAAA;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAA,GAE/BgL,iBAAiB,CACjB,2BAA2B,CAG1B,CAAC,eACN9N,KAAA,CAAAuC,aAAA;cAAKiK,SAAS,EAAC,oBAAoB;cAAA/J,MAAA,EAAA0J,MAAA;cAAAzJ,QAAA;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAA,GAChCvB,cAAc,CACbuM,iBAAiB,CAAC,SAAS,CAC7B,CACG,CAAC,eACN9N,KAAA,CAAAuC,aAAA;cAAKiK,SAAS,EAAC,oBAAoB;cAAA/J,MAAA,EAAA0J,MAAA;cAAAzJ,QAAA;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAA,GAChCgL,iBAAiB,CAAC,UAAU,CAC1B,CACF,CAAC;UAEV,CACF,CACc,CACjB,EACFP,OAAO,CAACnK,EAAE,IAAI,8BAA8B,iBAC3CpD,KAAA,CAAAuC,aAAA,CAACvC,KAAK,CAACwC,QAAQ;YAAAC,MAAA,EAAA0J,MAAA;YAAAzJ,QAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAA,gBACb9C,KAAA,CAAAuC,aAAA;YAAKiK,SAAS,EAAC,gBAAgB;YAAA/J,MAAA,EAAA0J,MAAA;YAAAzJ,QAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAA,gBAC7B9C,KAAA,CAAAuC,aAAA;YAAKiK,SAAS,EAAC,oBAAoB;YAAA/J,MAAA,EAAA0J,MAAA;YAAAzJ,QAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAA,GAAC,qBAE/B,CAAC,eACN9C,KAAA,CAAAuC,aAAA;YAAKiK,SAAS,EAAC,oBAAoB;YAAA/J,MAAA,EAAA0J,MAAA;YAAAzJ,QAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAA,GAAC,YAE/B,CACF,CAAC,EACLqE,WAAW,CAAC0G,IAAI,CAACnB,GAAG,CACnB,UAACsB,cAAc,EAAED,MAAM,EAAK;YAC1B,oBACE/N,KAAA,CAAAuC,aAAA;cACEiK,SAAS,EAAC,gBAAgB;cAC1BzD,GAAG,EAAEgF,MAAO;cAAAtL,MAAA,EAAA0J,MAAA;cAAAzJ,QAAA;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAA,gBAEZ9C,KAAA,CAAAuC,aAAA;cAAKiK,SAAS,EAAC,oBAAoB;cAAA/J,MAAA,EAAA0J,MAAA;cAAAzJ,QAAA;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAA,GAChCkL,cAAc,CAAC,gBAAgB,CAC7B,CAAC,eACNhO,KAAA,CAAAuC,aAAA;cAAKiK,SAAS,EAAC,oBAAoB;cAAA/J,MAAA,EAAA0J,MAAA;cAAAzJ,QAAA;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAA,GAChCkL,cAAc,CAAC,YAAY,CAAC,GAAG,IAC7B,CACF,CAAC;UAEV,CACF,CACc,CAEJ,CAEf,CACF,CAAC;QAEV,CAAC,CAAC;MACJ,CAAC,CACE,CACF,CACF,CAAC;IAEV;EAAC;EAAA,OAAAnI,kBAAA;AAAA,EAjkC8B5F,SAAS;AAokC1C,eAAeC,OAAO,CAAC,CAAC,CAAC2F,kBAAkB,CAAC"},"metadata":{},"sourceType":"module"}