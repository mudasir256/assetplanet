{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17, _templateObject18, _templateObject19, _templateObject20, _templateObject21, _templateObject22, _templateObject23, _templateObject24, _templateObject25, _templateObject26, _templateObject27, _templateObject28, _templateObject29, _templateObject30, _templateObject31, _templateObject32, _templateObject33, _templateObject34, _templateObject35, _templateObject36, _templateObject37, _templateObject38, _templateObject39, _templateObject40, _templateObject41, _templateObject42, _templateObject43, _templateObject44, _templateObject45, _templateObject46, _templateObject47, _templateObject48, _templateObject49, _templateObject50, _templateObject51, _templateObject52, _templateObject53, _templateObject54, _templateObject55, _templateObject56, _templateObject57, _templateObject58, _templateObject59, _templateObject60, _templateObject61, _templateObject62, _templateObject63, _templateObject64, _templateObject65, _templateObject66, _templateObject67, _templateObject68, _templateObject69, _templateObject70, _templateObject71, _templateObject72, _templateObject73, _templateObject74, _templateObject75, _templateObject76, _templateObject77, _templateObject78, _templateObject79, _templateObject80, _templateObject81, _templateObject82, _templateObject83, _templateObject84, _templateObject85, _templateObject86;\nimport { gql } from 'apollo-boost';\nexport var QL_CLIENT_LIST = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    {\\n        clients {\\n            address {\\n                city\\n                country\\n                firstLine\\n                id\\n                postalCode\\n                secondLine\\n                state\\n            }\\n            birthdate\\n            charities {\\n                contactNumber\\n                contactPersonFirstName\\n                contactPersonLastName\\n                emailAddress\\n                id\\n                notes\\n                website\\n            }\\n            corporates {\\n                corporateType\\n                creationDate\\n                id\\n                name\\n                stateIncorporated\\n            }\\n            dependents {\\n                birthdate\\n                childTaxCreditEndAt\\n                disability\\n                firstName\\n                gender\\n                id\\n                lastName\\n                relationship\\n            }\\n            emailAddress\\n            estimatedDeathAge\\n            financiallyImpacteds {\\n                contactNumber\\n                contactPersonFirstName\\n                contactPersonLastName\\n                emailAddress\\n                firstName\\n                id\\n                lastName\\n                notes\\n                relationship\\n                website\\n            }\\n            firstName\\n            gender\\n            id\\n            investmentKnowledge\\n            lastName\\n            primaryContactNumber\\n            professionalContacts {\\n                company\\n                emailAddress\\n                firstName\\n                id\\n                lastName\\n                mobileContactNumber\\n                officeContactNumber\\n                profession\\n            }\\n            retirementDate\\n            secondaryContactNumber\\n            secondaryEmailAddress\\n            spouse {\\n                birthdate\\n                emailAddress\\n                estimatedDeathAge\\n                firstName\\n                gender\\n                id\\n                investmentKnowledge\\n                lastName\\n                partner\\n                primaryContactNumber\\n                retirementDate\\n                secondaryContactNumber\\n                secondaryEmailAddress\\n                workContactNumber\\n            }\\n            trusts {\\n                firstName\\n                id\\n                lastName\\n                name\\n                percentage\\n            }\\n            workContactNumber\\n        }\\n    }\\n\"])));\nexport var QL_CLIENT_GET = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    query client($id: String!) {\\n        client(id: $id) {\\n            address {\\n                city\\n                country\\n                firstLine\\n                id\\n                postalCode\\n                secondLine\\n                state\\n            }\\n            birthdate\\n            charities {\\n                contactNumber\\n                contactPersonFirstName\\n                contactPersonLastName\\n                emailAddress\\n                id\\n                notes\\n                website\\n            }\\n            corporates {\\n                corporateType\\n                creationDate\\n                id\\n                name\\n                stateIncorporated\\n            }\\n            dependents {\\n                birthdate\\n                childTaxCreditEndAt\\n                disability\\n                firstName\\n                gender\\n                id\\n                lastName\\n                relationship\\n            }\\n            emailAddress\\n            estimatedDeathAge\\n            financiallyImpacteds {\\n                contactNumber\\n                contactPersonFirstName\\n                contactPersonLastName\\n                emailAddress\\n                firstName\\n                id\\n                lastName\\n                notes\\n                relationship\\n                website\\n            }\\n            firstName\\n            gender\\n            id\\n            investmentKnowledge\\n            lastName\\n            primaryContactNumber\\n            professionalContacts {\\n                company\\n                emailAddress\\n                firstName\\n                id\\n                lastName\\n                mobileContactNumber\\n                officeContactNumber\\n                profession\\n            }\\n            retirementDate\\n            secondaryContactNumber\\n            secondaryEmailAddress\\n            spouse {\\n                birthdate\\n                emailAddress\\n                estimatedDeathAge\\n                firstName\\n                gender\\n                id\\n                investmentKnowledge\\n                lastName\\n                partner\\n                primaryContactNumber\\n                retirementDate\\n                secondaryContactNumber\\n                secondaryEmailAddress\\n                workContactNumber\\n            }\\n            trusts {\\n                firstName\\n                id\\n                lastName\\n                name\\n                percentage\\n            }\\n            workContactNumber\\n        }\\n    }\\n\"])));\nexport var QL_CLIENT_ADD = gql(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n    mutation createClient($data: ClientMutationAttributes){\\n        createClient(attributes: $data){\\n            address {\\n                city\\n                country\\n                firstLine\\n                id\\n                postalCode\\n                secondLine\\n                state\\n            }\\n            birthdate\\n            charities {\\n                contactNumber\\n                contactPersonFirstName\\n                contactPersonLastName\\n                emailAddress\\n                id\\n                notes\\n                website\\n            }\\n            corporates {\\n                corporateType\\n                creationDate\\n                id\\n                name\\n                stateIncorporated\\n            }\\n            dependents {\\n                birthdate\\n                childTaxCreditEndAt\\n                disability\\n                firstName\\n                gender\\n                id\\n                lastName\\n                relationship\\n            }\\n            emailAddress\\n            estimatedDeathAge\\n            financiallyImpacteds {\\n                contactNumber\\n                contactPersonFirstName\\n                contactPersonLastName\\n                emailAddress\\n                firstName\\n                id\\n                lastName\\n                notes\\n                relationship\\n                website\\n            }\\n            firstName\\n            gender\\n            id\\n            investmentKnowledge\\n            lastName\\n            primaryContactNumber\\n            professionalContacts {\\n                company\\n                emailAddress\\n                firstName\\n                id\\n                lastName\\n                mobileContactNumber\\n                officeContactNumber\\n                profession\\n            }\\n            retirementDate\\n            secondaryContactNumber\\n            secondaryEmailAddress\\n            spouse {\\n                birthdate\\n                emailAddress\\n                estimatedDeathAge\\n                firstName\\n                gender\\n                id\\n                investmentKnowledge\\n                lastName\\n                partner\\n                primaryContactNumber\\n                retirementDate\\n                secondaryContactNumber\\n                secondaryEmailAddress\\n                workContactNumber\\n            }\\n            trusts {\\n                firstName\\n                id\\n                lastName\\n                name\\n                percentage\\n            }\\n            workContactNumber\\n        }\\n    }\\n\"])));\nexport var QL_CLIENT_UPDATE = gql(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n    mutation updateClient($id: String!, $data: ClientMutationAttributes){\\n        updateClient(id: $id, attributes: $data){\\n            id\\n        }\\n    }\\n\"])));\nexport var QL_CLIENT_DELETE = gql(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n    mutation deleteClient($id: String!){\\n        deleteClient(id: $id){\\n            id\\n        }\\n    }\\n\"])));\nexport var QL_RATES_OF_RETURN_LIST = gql(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n    {\\n        ratesOfReturns {\\n            monteCarloRateOfReturns {\\n                average\\n                description\\n                expectedAverage\\n                highBand\\n                howManyYears\\n                id\\n                lowBand\\n                regenerate\\n                startYear\\n            }\\n            ratesOfReturn {\\n                id\\n                professionalPrediction\\n                static\\n            }\\n            userDefinedRateOfReturns {\\n                howManyYears\\n                id\\n                percent\\n                year\\n            }\\n        }\\n    }\\n\"])));\nexport var QL_RATES_OF_RETURN_GET = gql(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n    query ratesOfReturn($id: String!) {\\n        ratesOfReturn(id: $id) {\\n            monteCarloRateOfReturns {\\n                average\\n                description\\n                expectedAverage\\n                highBand\\n                howManyYears\\n                id\\n                lowBand\\n                regenerate\\n                startYear\\n            }\\n            ratesOfReturn {\\n                id\\n                professionalPrediction\\n                static\\n            }\\n            userDefinedRateOfReturns {\\n                howManyYears\\n                id\\n                percent\\n                year\\n            }\\n        }\\n    }\\n\"])));\nexport var QL_RATES_OF_RETURN_ADD = gql(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\\n    mutation createRatesOfReturn($data: RatesOfReturnMutationAttributes){\\n        createRatesOfReturn(attributes: $data){\\n            ratesOfReturn {\\n                id\\n                professionalPrediction\\n                static\\n            }\\n            monteCarloRateOfReturns {\\n                average\\n                description\\n                expectedAverage\\n                highBand\\n                howManyYears\\n                id\\n                lowBand\\n                regenerate\\n                startYear\\n            }\\n            userDefinedRateOfReturns {\\n                howManyYears\\n                id\\n                percent\\n                year\\n            }\\n        }\\n    }\\n\"])));\nexport var QL_RATES_OF_RETURN_UPDATE = gql(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"\\n    mutation updateRatesOfReturn($id: String!, $data: RatesOfReturnMutationAttributes){\\n        updateRatesOfReturn(id: $id, attributes: $data){\\n            ratesOfReturn {\\n                id\\n                professionalPrediction\\n                static\\n            }\\n            monteCarloRateOfReturns {\\n                average\\n                description\\n                expectedAverage\\n                highBand\\n                howManyYears\\n                id\\n                lowBand\\n                regenerate\\n                startYear\\n            }\\n            userDefinedRateOfReturns {\\n                howManyYears\\n                id\\n                percent\\n                year\\n            }\\n        }\\n    }\\n\"])));\nexport var QL_TAX_INFLATION_LIST = gql(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"\\n    {\\n        taxAndInflations {\\n            amountOfCarryForward\\n            amountWithdrawnSubjectToCapGains\\n            capGainsRateFederal\\n            capGainsRateState\\n            carryForwardDate\\n            carryForwardLossNotes\\n            deductions\\n            doYouHaveCarryForwardLoss\\n            educationInflation\\n            educationInflationRate\\n            federalCollectibleTaxRate\\n            federalTaxRate\\n            generalInflation\\n            generalInflationRate\\n            housingInflation\\n            housingInflationRate\\n            id\\n            luxuryInflation\\n            luxuryInflationRate\\n            medicalInflation\\n            medicalInflationRate\\n            stateTaxEffectiveRate\\n            stateTaxation\\n            taxCredits {\\n                amountOfCredit\\n                id\\n                otherTaxCredit\\n            }\\n            taxFilingElection\\n            totalAdjustedGrossIncome\\n            totalTaxRate\\n        }\\n    }\\n\"])));\nexport var QL_TAX_INFLATION_GET = gql(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral([\"\\n    query taxAndInflation($id: String!) {\\n        taxAndInflation(id: $id) {\\n            amountOfCarryForward\\n            amountWithdrawnSubjectToCapGains\\n            capGainsRateFederal\\n            capGainsRateState\\n            carryForwardDate\\n            carryForwardLossNotes\\n            deductions\\n            doYouHaveCarryForwardLoss\\n            educationInflation\\n            educationInflationRate\\n            federalCollectibleTaxRate\\n            federalTaxRate\\n            generalInflation\\n            generalInflationRate\\n            housingInflation\\n            housingInflationRate\\n            id\\n            luxuryInflation\\n            luxuryInflationRate\\n            medicalInflation\\n            medicalInflationRate\\n            stateTaxEffectiveRate\\n            stateTaxation\\n            taxCredits {\\n                amountOfCredit\\n                id\\n                otherTaxCredit\\n            }\\n            taxFilingElection\\n            totalAdjustedGrossIncome\\n            totalTaxRate\\n        }\\n    }\\n\"])));\nexport var QL_TAX_INFLATION_ADD = gql(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral([\"\\n    mutation createTaxAndInflation($data: TaxAndInflationMutationAttributes){\\n        createTaxAndInflation(attributes: $data){\\n            amountOfCarryForward\\n            amountWithdrawnSubjectToCapGains\\n            capGainsRateFederal\\n            capGainsRateState\\n            carryForwardDate\\n            carryForwardLossNotes\\n            deductions\\n            doYouHaveCarryForwardLoss\\n            educationInflation\\n            educationInflationRate\\n            federalCollectibleTaxRate\\n            federalTaxRate\\n            generalInflation\\n            generalInflationRate\\n            housingInflation\\n            housingInflationRate\\n            id\\n            luxuryInflation\\n            luxuryInflationRate\\n            medicalInflation\\n            medicalInflationRate\\n            stateTaxEffectiveRate\\n            stateTaxation\\n            taxCredits {\\n                amountOfCredit\\n                id\\n                otherTaxCredit\\n            }\\n            taxFilingElection\\n            totalAdjustedGrossIncome\\n            totalTaxRate\\n        }\\n    }\\n\"])));\nexport var QL_TAX_INFLATION_UPDATE = gql(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral([\"\\n    mutation updateTaxAndInflation($id: String!, $data: TaxAndInflationMutationAttributes){\\n        updateTaxAndInflation(id: $id, attributes: $data){\\n            id\\n        }\\n    }\\n\"])));\nexport var QL_CLIENT_CONTACT_LIST = gql(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral([\"\\n    {\\n        clientContacts {\\n            address {\\n                city\\n                country\\n                firstLine\\n                id\\n                postalCode\\n                secondLine\\n                state\\n            }\\n            company\\n            email\\n            firstName\\n            id\\n            lastName\\n            notes\\n            partOfMyProfessionalTeam\\n            primaryContactNumber\\n            profession\\n            relationship\\n            secondaryContactNumber\\n        }\\n    }\\n\"])));\nexport var QL_CLIENT_CONTACT_GET = gql(_templateObject15 || (_templateObject15 = _taggedTemplateLiteral([\"\\n    query clientContact($id: String!) {\\n        clientContact(id: $id) {\\n            address {\\n                city\\n                country\\n                firstLine\\n                id\\n                postalCode\\n                secondLine\\n                state\\n            }\\n            company\\n            email\\n            firstName\\n            id\\n            lastName\\n            notes\\n            partOfMyProfessionalTeam\\n            primaryContactNumber\\n            profession\\n            relationship\\n            secondaryContactNumber\\n        }\\n    }\\n\"])));\nexport var QL_CLIENT_CONTACT_ADD = gql(_templateObject16 || (_templateObject16 = _taggedTemplateLiteral([\"\\n    mutation createClientContact($data: ClientContactMutationAttributes){\\n        createClientContact(attributes: $data){\\n            address {\\n                city\\n                country\\n                firstLine\\n                id\\n                postalCode\\n                secondLine\\n                state\\n            }\\n            company\\n            email\\n            firstName\\n            id\\n            lastName\\n            notes\\n            partOfMyProfessionalTeam\\n            primaryContactNumber\\n            profession\\n            relationship\\n            secondaryContactNumber\\n        }\\n    }\\n\"])));\nexport var QL_CLIENT_CONTACT_UPDATE = gql(_templateObject17 || (_templateObject17 = _taggedTemplateLiteral([\"\\n    mutation updateClientContact($id: String!, $data: ClientContactMutationAttributes){\\n        updateClientContact(id: $id, attributes: $data){\\n            id\\n        }\\n    }\\n\"])));\nexport var QL_CLIENT_CONTACT_DELETE = gql(_templateObject18 || (_templateObject18 = _taggedTemplateLiteral([\"\\n    mutation deleteClientContact($id: String!){\\n        deleteClientContact(id: $id){\\n            address {\\n                city\\n                country\\n                firstLine\\n                id\\n                postalCode\\n                secondLine\\n                state\\n            }\\n            company\\n            email\\n            firstName\\n            id\\n            lastName\\n            notes\\n            partOfMyProfessionalTeam\\n            primaryContactNumber\\n            profession\\n            relationship\\n            secondaryContactNumber\\n        }\\n    }\\n\"])));\nexport var QL_LIABILITIES_CREDIT_LIST = gql(_templateObject19 || (_templateObject19 = _taggedTemplateLiteral([\"\\n    {\\n        liabilitiesAndCredits{\\n            addToMonthlyBudget\\n            additionalCreditCardInformation {\\n                additionalNotesAboutCreditCard\\n                annualFee\\n                creditBalance\\n                creditLimit\\n                id\\n                interestRate\\n                monthlyPayment\\n                phoneNumberOfIssuer\\n                pointBalance\\n                pointExpiration\\n            }\\n            additionalPrincipalPayments\\n            additionalPrincipals {\\n                extraPrincipalPaymentDescription\\n                howMuch\\n                howOften\\n                id\\n                lastAdditionalPayment\\n                numberOfOccurrences\\n                whenWillPaymentStart\\n            }\\n            adjustableLoanDetails {\\n                adjustableLoanDetails\\n                dateOfRateChange\\n                id\\n                monthOfRateChange\\n                newPercentage\\n            }\\n            associatedAsset\\n            generalAssumption {\\n                currentBalance\\n                currentMonthlyPayment\\n                dateOfCurrentBalance\\n                futurePaymentChanges\\n                id\\n                monthNumberOfCurrentBalanceDate\\n                originalCumulativeInterest\\n                originalMonthToPayOff\\n                totalMonthToPayOff\\n            }\\n            id\\n            initialLoanAmount\\n            interestRate\\n            isThereAnAssociatedAsset\\n            last4DigitsOfAccount\\n            lengthOfLoan\\n            liabilityPayoffDate\\n            liabilityType\\n            loanPaybackType\\n            maturityDate\\n            monthlyPayment\\n            nameOfFinancialInstitution\\n            nameOfLiability\\n            owner\\n            startDate\\n            statusOfLiability\\n            typeOfLoan\\n        }\\n    }\\n\"])));\nexport var QL_LIABILITIES_CREDIT_GET = gql(_templateObject20 || (_templateObject20 = _taggedTemplateLiteral([\"\\n    query liabilitiesAndCredit($id: String!) {\\n        liabilitiesAndCredit(id: $id) {\\n            addToMonthlyBudget\\n            additionalCreditCardInformation {\\n                additionalNotesAboutCreditCard\\n                annualFee\\n                creditBalance\\n                creditLimit\\n                id\\n                interestRate\\n                monthlyPayment\\n                phoneNumberOfIssuer\\n                pointBalance\\n                pointExpiration\\n            }\\n            additionalPrincipalPayments\\n            additionalPrincipals {\\n                extraPrincipalPaymentDescription\\n                howMuch\\n                howOften\\n                id\\n                lastAdditionalPayment\\n                numberOfOccurrences\\n                whenWillPaymentStart\\n            }\\n            adjustableLoanDetails {\\n                adjustableLoanDetails\\n                dateOfRateChange\\n                id\\n                monthOfRateChange\\n                newPercentage\\n            }\\n            associatedAsset\\n            generalAssumption {\\n                currentBalance\\n                currentMonthlyPayment\\n                dateOfCurrentBalance\\n                futurePaymentChanges\\n                id\\n                monthNumberOfCurrentBalanceDate\\n                originalCumulativeInterest\\n                originalMonthToPayOff\\n                totalMonthToPayOff\\n            }\\n            id\\n            initialLoanAmount\\n            interestRate\\n            isThereAnAssociatedAsset\\n            last4DigitsOfAccount\\n            lengthOfLoan\\n            liabilityPayoffDate\\n            liabilityType\\n            loanPaybackType\\n            maturityDate\\n            monthlyPayment\\n            nameOfFinancialInstitution\\n            nameOfLiability\\n            owner\\n            startDate\\n            statusOfLiability\\n            typeOfLoan\\n        }\\n    }\\n\"])));\nexport var QL_LIABILITIES_CREDIT_ADD = gql(_templateObject21 || (_templateObject21 = _taggedTemplateLiteral([\"\\n    mutation createLiabilitiesAndCredit($data: LiabilitiesAndCreditMutationAttributes){\\n        createLiabilitiesAndCredit(attributes: $data){\\n            addToMonthlyBudget\\n            additionalCreditCardInformation {\\n                additionalNotesAboutCreditCard\\n                annualFee\\n                creditBalance\\n                creditLimit\\n                id\\n                interestRate\\n                monthlyPayment\\n                phoneNumberOfIssuer\\n                pointBalance\\n                pointExpiration\\n            }\\n            additionalPrincipalPayments\\n            additionalPrincipals {\\n                extraPrincipalPaymentDescription\\n                howMuch\\n                howOften\\n                id\\n                lastAdditionalPayment\\n                numberOfOccurrences\\n                whenWillPaymentStart\\n            }\\n            adjustableLoanDetails {\\n                adjustableLoanDetails\\n                dateOfRateChange\\n                id\\n                monthOfRateChange\\n                newPercentage\\n            }\\n            associatedAsset\\n            generalAssumption {\\n                currentBalance\\n                currentMonthlyPayment\\n                dateOfCurrentBalance\\n                futurePaymentChanges\\n                id\\n                monthNumberOfCurrentBalanceDate\\n                originalCumulativeInterest\\n                originalMonthToPayOff\\n                totalMonthToPayOff\\n            }\\n            id\\n            initialLoanAmount\\n            interestRate\\n            isThereAnAssociatedAsset\\n            last4DigitsOfAccount\\n            lengthOfLoan\\n            liabilityPayoffDate\\n            liabilityType\\n            loanPaybackType\\n            maturityDate\\n            monthlyPayment\\n            nameOfFinancialInstitution\\n            nameOfLiability\\n            owner\\n            startDate\\n            statusOfLiability\\n            typeOfLoan\\n        }\\n    }\\n\"])));\nexport var QL_LIABILITIES_CREDIT_UPDATE = gql(_templateObject22 || (_templateObject22 = _taggedTemplateLiteral([\"\\n    mutation updateLiabilitiesAndCredit($id: String!, $data: LiabilitiesAndCreditMutationAttributes){\\n        updateLiabilitiesAndCredit(id: $id, attributes: $data){\\n            id\\n        }\\n    }\\n\"])));\nexport var QL_LIABILITIES_CREDIT_DELETE = gql(_templateObject23 || (_templateObject23 = _taggedTemplateLiteral([\"\\n    mutation deleteLiabilitiesAndCredit($id: String!){\\n        deleteLiabilitiesAndCredit(id: $id){\\n            addToMonthlyBudget\\n            additionalCreditCardInformation {\\n                additionalNotesAboutCreditCard\\n                annualFee\\n                creditBalance\\n                creditLimit\\n                id\\n                interestRate\\n                monthlyPayment\\n                phoneNumberOfIssuer\\n                pointBalance\\n                pointExpiration\\n            }\\n            additionalPrincipalPayments\\n            additionalPrincipals {\\n                extraPrincipalPaymentDescription\\n                howMuch\\n                howOften\\n                id\\n                lastAdditionalPayment\\n                numberOfOccurrences\\n                whenWillPaymentStart\\n            }\\n            adjustableLoanDetails {\\n                adjustableLoanDetails\\n                dateOfRateChange\\n                id\\n                monthOfRateChange\\n                newPercentage\\n            }\\n            associatedAsset\\n            generalAssumption {\\n                currentBalance\\n                currentMonthlyPayment\\n                dateOfCurrentBalance\\n                futurePaymentChanges\\n                id\\n                monthNumberOfCurrentBalanceDate\\n                originalCumulativeInterest\\n                originalMonthToPayOff\\n                totalMonthToPayOff\\n            }\\n            id\\n            initialLoanAmount\\n            interestRate\\n            isThereAnAssociatedAsset\\n            last4DigitsOfAccount\\n            lengthOfLoan\\n            liabilityPayoffDate\\n            liabilityType\\n            loanPaybackType\\n            maturityDate\\n            monthlyPayment\\n            nameOfFinancialInstitution\\n            nameOfLiability\\n            owner\\n            startDate\\n            statusOfLiability\\n            typeOfLoan\\n        }\\n    }\\n\"])));\nexport var QL_INSURANCE_PRODUCT_LIST = gql(_templateObject24 || (_templateObject24 = _taggedTemplateLiteral([\"\\n    {\\n        insuranceProducts{\\n            autoInsuranceInformation {\\n                bodilyInjuryAggregate\\n                bodilyInjuryPerIncident\\n                id\\n                propertyDamagePerIncident\\n            }\\n            financialInformation {\\n                annualPremium\\n                cashValue\\n                cashValueDate\\n                deductible\\n                faceValue\\n                id\\n                monthlyPremium\\n            }\\n            id\\n            incomeInformation {\\n                currentAnnualIncome\\n                currentMonthlyIncome\\n                dateFutureIncomeEnds\\n                frequencyOfCurrentIncome\\n                futureAnnualIncome\\n                futureIncomeDate\\n                futureLumpSumPayment\\n                id\\n                incomeEndsAtDeath\\n                incomeStartsAtRetirement\\n                lumpSumPaymentDate\\n                taxable\\n            }\\n            longTermCare {\\n                dailyBenefit\\n                eliminationPeriod\\n                id\\n                inflationRider\\n                lifetimeBenefit\\n                monthlyBenefit\\n            }\\n            productInformation {\\n                addBeneficiaries\\n                carrier\\n                id\\n                insuranceType\\n                insured\\n                lastFourOfPolicyNumber\\n                nameOfBeneficiary\\n                nicknameOfInsuranceProduct\\n                owner\\n                percent\\n                policyEndDate\\n                policyStartDate\\n            }\\n        }\\n    }\\n\"])));\nexport var QL_INSURANCE_PRODUCT_GET = gql(_templateObject25 || (_templateObject25 = _taggedTemplateLiteral([\"\\n    query insuranceProduct($id: String!) {\\n        insuranceProduct(id: $id) {\\n            autoInsuranceInformation {\\n                bodilyInjuryAggregate\\n                bodilyInjuryPerIncident\\n                id\\n                propertyDamagePerIncident\\n            }\\n            financialInformation {\\n                annualPremium\\n                cashValue\\n                cashValueDate\\n                deductible\\n                faceValue\\n                id\\n                monthlyPremium\\n            }\\n            id\\n            incomeInformation {\\n                currentAnnualIncome\\n                currentMonthlyIncome\\n                dateFutureIncomeEnds\\n                frequencyOfCurrentIncome\\n                futureAnnualIncome\\n                futureIncomeDate\\n                futureLumpSumPayment\\n                id\\n                incomeEndsAtDeath\\n                incomeStartsAtRetirement\\n                lumpSumPaymentDate\\n                taxable\\n            }\\n            longTermCare {\\n                dailyBenefit\\n                eliminationPeriod\\n                id\\n                inflationRider\\n                lifetimeBenefit\\n                monthlyBenefit\\n            }\\n            productInformation {\\n                addBeneficiaries\\n                carrier\\n                id\\n                insuranceType\\n                insured\\n                lastFourOfPolicyNumber\\n                nameOfBeneficiary\\n                nicknameOfInsuranceProduct\\n                owner\\n                percent\\n                policyEndDate\\n                policyStartDate\\n            }\\n        }\\n    }\\n\"])));\nexport var QL_INSURANCE_PRODUCT_ADD = gql(_templateObject26 || (_templateObject26 = _taggedTemplateLiteral([\"\\n    mutation createInsuranceProduct($data: InsuranceProductMutationAttributes){\\n        createInsuranceProduct(attributes: $data){\\n            autoInsuranceInformation {\\n                bodilyInjuryAggregate\\n                bodilyInjuryPerIncident\\n                id\\n                propertyDamagePerIncident\\n            }\\n            financialInformation {\\n                annualPremium\\n                cashValue\\n                cashValueDate\\n                deductible\\n                faceValue\\n                id\\n                monthlyPremium\\n            }\\n            id\\n            incomeInformation {\\n                currentAnnualIncome\\n                currentMonthlyIncome\\n                dateFutureIncomeEnds\\n                frequencyOfCurrentIncome\\n                futureAnnualIncome\\n                futureIncomeDate\\n                futureLumpSumPayment\\n                id\\n                incomeEndsAtDeath\\n                incomeStartsAtRetirement\\n                lumpSumPaymentDate\\n                taxable\\n            }\\n            longTermCare {\\n                dailyBenefit\\n                eliminationPeriod\\n                id\\n                inflationRider\\n                lifetimeBenefit\\n                monthlyBenefit\\n            }\\n            productInformation {\\n                addBeneficiaries\\n                carrier\\n                id\\n                insuranceType\\n                insured\\n                lastFourOfPolicyNumber\\n                nameOfBeneficiary\\n                nicknameOfInsuranceProduct\\n                owner\\n                percent\\n                policyEndDate\\n                policyStartDate\\n            }\\n        }\\n    }\\n\"])));\nexport var QL_INSURANCE_PRODUCT_UPDATE = gql(_templateObject27 || (_templateObject27 = _taggedTemplateLiteral([\"\\n    mutation updateInsuranceProduct($id: String!, $data: InsuranceProductMutationAttributes){\\n        updateInsuranceProduct(id: $id, attributes: $data){\\n            id\\n        }\\n    }\\n\"])));\nexport var QL_INSURANCE_PRODUCT_DELETE = gql(_templateObject28 || (_templateObject28 = _taggedTemplateLiteral([\"\\n    mutation deleteInsuranceProduct($id: String!){\\n        deleteInsuranceProduct(id: $id){\\n            autoInsuranceInformation {\\n                bodilyInjuryAggregate\\n                bodilyInjuryPerIncident\\n                id\\n                propertyDamagePerIncident\\n            }\\n            financialInformation {\\n                annualPremium\\n                cashValue\\n                cashValueDate\\n                deductible\\n                faceValue\\n                id\\n                monthlyPremium\\n            }\\n            id\\n            incomeInformation {\\n                currentAnnualIncome\\n                currentMonthlyIncome\\n                dateFutureIncomeEnds\\n                frequencyOfCurrentIncome\\n                futureAnnualIncome\\n                futureIncomeDate\\n                futureLumpSumPayment\\n                id\\n                incomeEndsAtDeath\\n                incomeStartsAtRetirement\\n                lumpSumPaymentDate\\n                taxable\\n            }\\n            longTermCare {\\n                dailyBenefit\\n                eliminationPeriod\\n                id\\n                inflationRider\\n                lifetimeBenefit\\n                monthlyBenefit\\n            }\\n            productInformation {\\n                addBeneficiaries\\n                carrier\\n                id\\n                insuranceType\\n                insured\\n                lastFourOfPolicyNumber\\n                nameOfBeneficiary\\n                nicknameOfInsuranceProduct\\n                owner\\n                percent\\n                policyEndDate\\n                policyStartDate\\n            }\\n        }\\n    }\\n\"])));\nexport var QL_INCOME_LIST = gql(_templateObject29 || (_templateObject29 = _taggedTemplateLiteral([\"\\n    {\\n        incomes{\\n            ageAtDesiredRetirement\\n            alreadyReceivingIncome\\n            amountSubjectToTax\\n            dateIncomeEnds\\n            dateIncomeStarts\\n            earnedIncomeInformation {\\n                id\\n                typeOfEmploymentIncome\\n            }\\n            employee {\\n                employeeRetirementContributions\\n                federalTaxes\\n                id\\n                stateTaxes\\n            }\\n            estimatedAmountRemainingFirstYear\\n            estimatedMonthlyIncome\\n            frequencyOfPayPeriods\\n            grossWages\\n            id\\n            incomeEndsAt\\n            incomeSourceFromAsset\\n            incomeSourceFromInsurancePolicy\\n            incomeTaxation {\\n                adjustedGrossIncome\\n                amountSubjectToFederalTaxation\\n                federalTaxationType\\n                id\\n                passiveOrEarned\\n                stateTaxationType\\n            }\\n            incomeType\\n            independentContractor {\\n                id\\n                lessSelfEmploymentAdjustment\\n                taxableSelfEmploymentEarnings\\n            }\\n            militaryBenefit {\\n                amountSubjectToStateTax\\n                id\\n                payeeOfSurvivorBenefits\\n                percentToSurvivor\\n            }\\n            nicknameIncome\\n            notes\\n            otherIncomeType\\n            owner\\n            payeeOfSurvivorBenefits\\n            percentToSurvivor\\n            percentageYearlyIncrease\\n        }\\n    }\\n\"])));\nexport var QL_INCOME_GET = gql(_templateObject30 || (_templateObject30 = _taggedTemplateLiteral([\"\\n    query income($id: String!) {\\n        income(id: $id) {\\n            ageAtDesiredRetirement\\n            alreadyReceivingIncome\\n            amountSubjectToTax\\n            dateIncomeEnds\\n            dateIncomeStarts\\n            earnedIncomeInformation {\\n                id\\n                typeOfEmploymentIncome\\n            }\\n            employee {\\n                employeeRetirementContributions\\n                federalTaxes\\n                id\\n                stateTaxes\\n            }\\n            estimatedAmountRemainingFirstYear\\n            estimatedMonthlyIncome\\n            frequencyOfPayPeriods\\n            grossWages\\n            id\\n            incomeEndsAt\\n            incomeSourceFromAsset\\n            incomeSourceFromInsurancePolicy\\n            incomeTaxation {\\n                adjustedGrossIncome\\n                amountSubjectToFederalTaxation\\n                federalTaxationType\\n                id\\n                passiveOrEarned\\n                stateTaxationType\\n            }\\n            incomeType\\n            independentContractor {\\n                id\\n                lessSelfEmploymentAdjustment\\n                taxableSelfEmploymentEarnings\\n            }\\n            militaryBenefit {\\n                amountSubjectToStateTax\\n                id\\n                payeeOfSurvivorBenefits\\n                percentToSurvivor\\n            }\\n            nicknameIncome\\n            notes\\n            otherIncomeType\\n            owner\\n            payeeOfSurvivorBenefits\\n            percentToSurvivor\\n            percentageYearlyIncrease\\n        }\\n    }\\n\"])));\nexport var QL_INCOME_ADD = gql(_templateObject31 || (_templateObject31 = _taggedTemplateLiteral([\"\\n    mutation createIncome($data: IncomeMutationAttributes){\\n        createIncome(attributes: $data){\\n            ageAtDesiredRetirement\\n            alreadyReceivingIncome\\n            amountSubjectToTax\\n            dateIncomeEnds\\n            dateIncomeStarts\\n            earnedIncomeInformation {\\n                id\\n                typeOfEmploymentIncome\\n            }\\n            employee {\\n                employeeRetirementContributions\\n                federalTaxes\\n                id\\n                stateTaxes\\n            }\\n            estimatedAmountRemainingFirstYear\\n            estimatedMonthlyIncome\\n            frequencyOfPayPeriods\\n            grossWages\\n            id\\n            incomeEndsAt\\n            incomeSourceFromAsset\\n            incomeSourceFromInsurancePolicy\\n            incomeTaxation {\\n                adjustedGrossIncome\\n                amountSubjectToFederalTaxation\\n                federalTaxationType\\n                id\\n                passiveOrEarned\\n                stateTaxationType\\n            }\\n            incomeType\\n            independentContractor {\\n                id\\n                lessSelfEmploymentAdjustment\\n                taxableSelfEmploymentEarnings\\n            }\\n            militaryBenefit {\\n                amountSubjectToStateTax\\n                id\\n                payeeOfSurvivorBenefits\\n                percentToSurvivor\\n            }\\n            nicknameIncome\\n            notes\\n            otherIncomeType\\n            owner\\n            payeeOfSurvivorBenefits\\n            percentToSurvivor\\n            percentageYearlyIncrease\\n        }\\n    }\\n\"])));\nexport var QL_INCOME_UPDATE = gql(_templateObject32 || (_templateObject32 = _taggedTemplateLiteral([\"\\n    mutation updateIncome($id: String!, $data: IncomeMutationAttributes){\\n        updateIncome(id: $id, attributes: $data){\\n            id\\n        }\\n    }\\n\"])));\nexport var QL_INCOME_DELETE = gql(_templateObject33 || (_templateObject33 = _taggedTemplateLiteral([\"\\n    mutation deleteIncome($id: String!){\\n        deleteIncome(id: $id){\\n            ageAtDesiredRetirement\\n            alreadyReceivingIncome\\n            amountSubjectToTax\\n            dateIncomeEnds\\n            dateIncomeStarts\\n            earnedIncomeInformation {\\n                id\\n                typeOfEmploymentIncome\\n            }\\n            employee {\\n                employeeRetirementContributions\\n                federalTaxes\\n                id\\n                stateTaxes\\n            }\\n            estimatedAmountRemainingFirstYear\\n            estimatedMonthlyIncome\\n            frequencyOfPayPeriods\\n            grossWages\\n            id\\n            incomeEndsAt\\n            incomeSourceFromAsset\\n            incomeSourceFromInsurancePolicy\\n            incomeTaxation {\\n                adjustedGrossIncome\\n                amountSubjectToFederalTaxation\\n                federalTaxationType\\n                id\\n                passiveOrEarned\\n                stateTaxationType\\n            }\\n            incomeType\\n            independentContractor {\\n                id\\n                lessSelfEmploymentAdjustment\\n                taxableSelfEmploymentEarnings\\n            }\\n            militaryBenefit {\\n                amountSubjectToStateTax\\n                id\\n                payeeOfSurvivorBenefits\\n                percentToSurvivor\\n            }\\n            nicknameIncome\\n            notes\\n            otherIncomeType\\n            owner\\n            payeeOfSurvivorBenefits\\n            percentToSurvivor\\n            percentageYearlyIncrease\\n        }\\n    }\\n\"])));\nexport var QL_SOCIAL_SECURITY_LIST = gql(_templateObject34 || (_templateObject34 = _taggedTemplateLiteral([\"\\n    {\\n        socialSecurities{\\n            clientBirthdate\\n            clientEstimatedYearOfDeath\\n            clientEstimatedYearOfRetirement\\n            id\\n            itemsRelatedToMoney {\\n                clientMonthlyBenefitAtFullRetirementAge\\n                costOfLivingAdjustment\\n                id\\n                timeValueOfMoneyInterestRate\\n            }\\n            retirementEarningsCalculator {\\n                dateToBeginReceivingBenefits\\n                id\\n                yourEstimatedEarnings\\n            }\\n            spouseRetirementEarningsCalculator {\\n                dateToBeginReceivingBenefits\\n                id\\n                monthlyDecreaseInBenefit\\n                yourEstimatedEarnings\\n            }\\n            spouseSection {\\n                id\\n                spouseCostOfLivingAdjustment\\n                spouseEstimatedYearOfRetirement\\n                spouseMonthlyBenefitAtFullRetirementAge\\n                spouseTimeValueOfMoneyInterestRate\\n            }\\n        }\\n    }\\n\"])));\nexport var QL_SOCIAL_SECURITY_GET = gql(_templateObject35 || (_templateObject35 = _taggedTemplateLiteral([\"\\n    query socialSecurity($id: String!) {\\n        socialSecurity(id: $id) {\\n            clientBirthdate\\n            clientEstimatedYearOfDeath\\n            clientEstimatedYearOfRetirement\\n            id\\n            itemsRelatedToMoney {\\n                clientMonthlyBenefitAtFullRetirementAge\\n                costOfLivingAdjustment\\n                id\\n                timeValueOfMoneyInterestRate\\n            }\\n            retirementEarningsCalculator {\\n                dateToBeginReceivingBenefits\\n                id\\n                yourEstimatedEarnings\\n            }\\n            spouseRetirementEarningsCalculator {\\n                dateToBeginReceivingBenefits\\n                id\\n                monthlyDecreaseInBenefit\\n                yourEstimatedEarnings\\n            }\\n            spouseSection {\\n                id\\n                spouseCostOfLivingAdjustment\\n                spouseEstimatedYearOfRetirement\\n                spouseMonthlyBenefitAtFullRetirementAge\\n                spouseTimeValueOfMoneyInterestRate\\n            }\\n        }\\n    }\\n\"])));\nexport var QL_SOCIAL_SECURITY_ADD = gql(_templateObject36 || (_templateObject36 = _taggedTemplateLiteral([\"\\n    mutation createSocialSecurity($data: SocialSecurityMutationAttributes){\\n        createSocialSecurity(attributes: $data){\\n            clientBirthdate\\n            clientEstimatedYearOfDeath\\n            clientEstimatedYearOfRetirement\\n            id\\n            itemsRelatedToMoney {\\n                clientMonthlyBenefitAtFullRetirementAge\\n                costOfLivingAdjustment\\n                id\\n                timeValueOfMoneyInterestRate\\n            }\\n            retirementEarningsCalculator {\\n                dateToBeginReceivingBenefits\\n                id\\n                yourEstimatedEarnings\\n            }\\n            spouseRetirementEarningsCalculator {\\n                dateToBeginReceivingBenefits\\n                id\\n                monthlyDecreaseInBenefit\\n                yourEstimatedEarnings\\n            }\\n            spouseSection {\\n                id\\n                spouseCostOfLivingAdjustment\\n                spouseEstimatedYearOfRetirement\\n                spouseMonthlyBenefitAtFullRetirementAge\\n                spouseTimeValueOfMoneyInterestRate\\n            }\\n        }\\n    }\\n\"])));\nexport var QL_SOCIAL_SECURITY_UPDATE = gql(_templateObject37 || (_templateObject37 = _taggedTemplateLiteral([\"\\n    mutation updateSocialSecurity($id: String!, $data: SocialSecurityMutationAttributes){\\n        updateSocialSecurity(id: $id, attributes: $data){\\n            id\\n        }\\n    }\\n\"])));\nexport var QL_ASSISTANCE_IN_LIST = gql(_templateObject38 || (_templateObject38 = _taggedTemplateLiteral([\"\\n    {\\n        assistanceIns{\\n            amountReceived\\n            assistanceEnds\\n            currentAssistance\\n            estimatedStartDate\\n            frequency\\n            id\\n            inheritanceAmount\\n            personInheritingFromFirstName\\n            personInheritingFromLastName\\n            personProvidingAssistanceFirstName\\n            personProvidingAssistanceLastName\\n            recipientFirstName\\n            recipientLastName\\n            relationship\\n            yearOfExpectedIncome\\n        }\\n    }\\n\"])));\nexport var QL_ASSISTANCE_IN_GET = gql(_templateObject39 || (_templateObject39 = _taggedTemplateLiteral([\"\\n    query assistanceIn($id: String!) {\\n        assistanceIn(id: $id) {\\n            amountReceived\\n            assistanceEnds\\n            currentAssistance\\n            estimatedStartDate\\n            frequency\\n            id\\n            inheritanceAmount\\n            personInheritingFromFirstName\\n            personInheritingFromLastName\\n            personProvidingAssistanceFirstName\\n            personProvidingAssistanceLastName\\n            recipientFirstName\\n            recipientLastName\\n            relationship\\n            yearOfExpectedIncome\\n        }\\n    }\\n\"])));\nexport var QL_ASSISTANCE_IN_ADD = gql(_templateObject40 || (_templateObject40 = _taggedTemplateLiteral([\"\\n    mutation createAssistanceIn($data: AssistanceInMutationAttributes){\\n        createAssistanceIn(attributes: $data){\\n            amountReceived\\n            assistanceEnds\\n            currentAssistance\\n            estimatedStartDate\\n            frequency\\n            id\\n            inheritanceAmount\\n            personInheritingFromFirstName\\n            personInheritingFromLastName\\n            personProvidingAssistanceFirstName\\n            personProvidingAssistanceLastName\\n            recipientFirstName\\n            recipientLastName\\n            relationship\\n            yearOfExpectedIncome\\n        }\\n    }\\n\"])));\nexport var QL_ASSISTANCE_IN_UPDATE = gql(_templateObject41 || (_templateObject41 = _taggedTemplateLiteral([\"\\n    mutation updateAssistanceIn($id: String!, $data: AssistanceInMutationAttributes){\\n        updateAssistanceIn(id: $id, attributes: $data){\\n            id\\n        }\\n    }\\n\"])));\nexport var QL_ASSISTANCE_IN_DELETE = gql(_templateObject42 || (_templateObject42 = _taggedTemplateLiteral([\"\\n    mutation deleteAssistanceIn($id: String!){\\n        deleteAssistanceIn(id: $id){\\n            id\\n        }\\n    }\\n\"])));\nexport var QL_ASSISTANCE_OUT_LIST = gql(_templateObject43 || (_templateObject43 = _taggedTemplateLiteral([\"\\n    {\\n        assistanceOuts{\\n            addToMonthlyBudget\\n            annualGiftingAmount\\n            assistanceEnds\\n            budgetItem\\n            estimatedEndDate\\n            estimatedStartDate\\n            frequency\\n            id\\n            notes\\n            personProvidingAssistance\\n            recipientFirstName\\n            recipientLastName\\n            relationship\\n        }\\n    }\\n\"])));\nexport var QL_ASSISTANCE_OUT_GET = gql(_templateObject44 || (_templateObject44 = _taggedTemplateLiteral([\"\\n    query assistanceOut($id: String!) {\\n        assistanceOut(id: $id) {\\n            addToMonthlyBudget\\n            annualGiftingAmount\\n            assistanceEnds\\n            budgetItem\\n            estimatedEndDate\\n            estimatedStartDate\\n            frequency\\n            id\\n            notes\\n            personProvidingAssistance\\n            recipientFirstName\\n            recipientLastName\\n            relationship\\n        }\\n    }\\n\"])));\nexport var QL_ASSISTANCE_OUT_ADD = gql(_templateObject45 || (_templateObject45 = _taggedTemplateLiteral([\"\\n    mutation createAssistanceOut($data: AssistanceOutMutationAttributes){\\n        createAssistanceOut(attributes: $data){\\n            addToMonthlyBudget\\n            annualGiftingAmount\\n            assistanceEnds\\n            budgetItem\\n            estimatedEndDate\\n            estimatedStartDate\\n            frequency\\n            id\\n            notes\\n            personProvidingAssistance\\n            recipientFirstName\\n            recipientLastName\\n            relationship\\n        }\\n    }\\n\"])));\nexport var QL_ASSISTANCE_OUT_UPDATE = gql(_templateObject46 || (_templateObject46 = _taggedTemplateLiteral([\"\\n    mutation updateAssistanceOut($id: String!, $data: AssistanceOutMutationAttributes){\\n        updateAssistanceOut(id: $id, attributes: $data){\\n            id\\n        }\\n    }\\n\"])));\nexport var QL_ASSISTANCE_OUT_DELETE = gql(_templateObject47 || (_templateObject47 = _taggedTemplateLiteral([\"\\n    mutation deleteAssistanceOut($id: String!){\\n        deleteAssistanceOut(id: $id){\\n            id\\n        }\\n    }\\n\"])));\nexport var QL_ASSETS_LIST = gql(_templateObject48 || (_templateObject48 = _taggedTemplateLiteral([\"\\n    {\\n        assets {\\n            accountType\\n            additionalQuestion {\\n                id\\n                isSpouseSoleBeneficiary\\n                takeEntireBalanceByEndOf5thYear\\n            }\\n            assetAllocation {\\n                assetAllocation\\n                id\\n                percentageOfPortfolioInBonds\\n                percentageOfPortfolioInStocks\\n                totalPercent\\n            }\\n            assetPerformance {\\n                id\\n                monetaryValue\\n                rateOfReturn\\n                valueAsOfDate\\n            }\\n            beneficiaries {\\n                id\\n                name\\n                percent\\n            }\\n            collectible{\\n                additionNotes\\n                appraised\\n                condition\\n                describeCollectible\\n                dollarAppliedToMonthlyBudget\\n                id\\n                insured\\n                make\\n                model\\n                purchasePrice\\n                typeOfArt\\n                typeOfClothing\\n                typeOfCollectible\\n                typeOfMemorabilia\\n                typeOfMetalOrJewelry\\n                whenWasAppraisalDone\\n                year\\n            }\\n            contributionOrDistributions {\\n                addToMonthlyBudget\\n                amount\\n                contributionOrDistribution\\n                description\\n                endDate\\n                frequency\\n                id\\n                orderToDistribute\\n                startDate\\n            }\\n            generatesIncome\\n            hasLoan\\n            heldWhere\\n            id\\n            inheritedInformation {\\n                deceasedIraOwnersBirthdate\\n                deceasedIraOwnersDeathDate\\n                id\\n                ownersRelationshipToDeceased\\n                regularContributionsOrDistributions\\n            }\\n            investmentPropertyImprovement {\\n                adjustedCostBasics\\n                costOfImprovement\\n                dateFirstInService\\n                depreciationSystems\\n                id\\n                improvementNotes\\n                salvageValue\\n            }\\n            last4DigitsOfAccount\\n            livestocks {\\n                animalType\\n                count\\n                id\\n                livestockNotes\\n            }\\n            name\\n            nameOfInsuranceProduct\\n            owner\\n            privatePlacementAndVc {\\n                additionalFutureCommittments\\n                futureCommittmentDollarAmount\\n                id\\n                nickname\\n                notes\\n                whenFutureCommittmentDate\\n            }\\n            realState {\\n                briefDescription\\n                datePropertyFirstInService\\n                dollarValueOfLand\\n                dollarValueOfStructure\\n                downpayment\\n                gdsOrAdsDepreciation\\n                id\\n                improvementsMadeToProperty\\n                incomePropertyToDepreciate\\n                investmentPropertyAddress\\n                monthlyLease\\n                originalPurchasePrice\\n                primarayResidence\\n                purchasePriceOfProperty\\n                totalMonthlyExpenses\\n                typeOfProperty\\n            }\\n            sellingAssetCost {\\n                actualValueAtSaleDate\\n                commisionOnSale\\n                considerForRetirement\\n                dateOfSale\\n                id\\n                otherTransactionCosts\\n                taxes\\n                totalLiabilities\\n                totalNetSoldValue\\n                valueBasedOnRateOfReturn\\n            }\\n            status\\n            stockIndividualSubforms {\\n                enterTodaysValue\\n                id\\n                stockSymbol\\n            }\\n            taxAndLiquidity {\\n                abilityForPartialSale\\n                costBasis\\n                costBasisDate\\n                earlyWithdrawlPenalty\\n                estimatedUnrealizedGains\\n                id\\n                penaltyBasedOnAgeInClientsAndPlans\\n                rmdEligible\\n                taxabilityOfDistribution\\n                taxabilityOnDistribution\\n                taxibility\\n                thisAssetIsLiquid\\n            }\\n            userDefinedPortfolio {\\n                id\\n                portfolioPercentageOfBonds\\n                portfolioPercentageOfCash\\n                portfolioPercentageOfGold\\n                portfolioPercentageOfRealEstate\\n                portfolioPercentageOfSAndP500\\n                totalPercentage\\n            }\\n            userDefinedReturnSubform {\\n                id\\n                monetaryValue\\n                monteCarlo\\n                percent\\n                startYear\\n                staticReturn\\n                valueAsOfDate\\n                year\\n            }\\n        }\\n    }\\n\"])));\nexport var QL_ASSETS_GET = gql(_templateObject49 || (_templateObject49 = _taggedTemplateLiteral([\"\\n    query asset($id: String!) {\\n        asset(id: $id) {\\n            accountType\\n            additionalQuestion {\\n                id\\n                isSpouseSoleBeneficiary\\n                takeEntireBalanceByEndOf5thYear\\n            }\\n            assetAllocation {\\n                assetAllocation\\n                id\\n                percentageOfPortfolioInBonds\\n                percentageOfPortfolioInStocks\\n                totalPercent\\n            }\\n            assetPerformance {\\n                id\\n                monetaryValue\\n                rateOfReturn\\n                valueAsOfDate\\n            }\\n            beneficiaries {\\n                id\\n                name\\n                percent\\n            }\\n            collectible{\\n                additionNotes\\n                appraised\\n                condition\\n                describeCollectible\\n                dollarAppliedToMonthlyBudget\\n                id\\n                insured\\n                make\\n                model\\n                purchasePrice\\n                typeOfArt\\n                typeOfClothing\\n                typeOfCollectible\\n                typeOfMemorabilia\\n                typeOfMetalOrJewelry\\n                whenWasAppraisalDone\\n                year\\n            }\\n            contributionOrDistributions {\\n                addToMonthlyBudget\\n                amount\\n                contributionOrDistribution\\n                description\\n                endDate\\n                frequency\\n                id\\n                orderToDistribute\\n                startDate\\n            }\\n            generatesIncome\\n            hasLoan\\n            heldWhere\\n            id\\n            inheritedInformation {\\n                deceasedIraOwnersBirthdate\\n                deceasedIraOwnersDeathDate\\n                id\\n                ownersRelationshipToDeceased\\n                regularContributionsOrDistributions\\n            }\\n            investmentPropertyImprovement {\\n                adjustedCostBasics\\n                costOfImprovement\\n                dateFirstInService\\n                depreciationSystems\\n                id\\n                improvementNotes\\n                salvageValue\\n            }\\n            last4DigitsOfAccount\\n            livestocks {\\n                animalType\\n                count\\n                id\\n                livestockNotes\\n            }\\n            name\\n            nameOfInsuranceProduct\\n            owner\\n            privatePlacementAndVc {\\n                additionalFutureCommittments\\n                futureCommittmentDollarAmount\\n                id\\n                nickname\\n                notes\\n                whenFutureCommittmentDate\\n            }\\n            realState {\\n                briefDescription\\n                datePropertyFirstInService\\n                dollarValueOfLand\\n                dollarValueOfStructure\\n                downpayment\\n                gdsOrAdsDepreciation\\n                id\\n                improvementsMadeToProperty\\n                incomePropertyToDepreciate\\n                investmentPropertyAddress\\n                monthlyLease\\n                originalPurchasePrice\\n                primarayResidence\\n                purchasePriceOfProperty\\n                totalMonthlyExpenses\\n                typeOfProperty\\n            }\\n            sellingAssetCost {\\n                actualValueAtSaleDate\\n                commisionOnSale\\n                considerForRetirement\\n                dateOfSale\\n                id\\n                otherTransactionCosts\\n                taxes\\n                totalLiabilities\\n                totalNetSoldValue\\n                valueBasedOnRateOfReturn\\n            }\\n            status\\n            stockIndividualSubforms {\\n                enterTodaysValue\\n                id\\n                stockSymbol\\n            }\\n            taxAndLiquidity {\\n                abilityForPartialSale\\n                costBasis\\n                costBasisDate\\n                earlyWithdrawlPenalty\\n                estimatedUnrealizedGains\\n                id\\n                penaltyBasedOnAgeInClientsAndPlans\\n                rmdEligible\\n                taxabilityOfDistribution\\n                taxabilityOnDistribution\\n                taxibility\\n                thisAssetIsLiquid\\n            }\\n            userDefinedPortfolio {\\n                id\\n                portfolioPercentageOfBonds\\n                portfolioPercentageOfCash\\n                portfolioPercentageOfGold\\n                portfolioPercentageOfRealEstate\\n                portfolioPercentageOfSAndP500\\n                totalPercentage\\n            }\\n            userDefinedReturnSubform {\\n                id\\n                monetaryValue\\n                monteCarlo\\n                percent\\n                startYear\\n                staticReturn\\n                valueAsOfDate\\n                year\\n            }\\n        }\\n    }\\n\"])));\nexport var QL_ASSETS_ADD = gql(_templateObject50 || (_templateObject50 = _taggedTemplateLiteral([\"\\n    mutation createAsset($data: AssetMutationAttributes){\\n        createAsset(attributes: $data){\\n            id\\n        }\\n    }\\n\"])));\nexport var QL_ASSETS_UPDATE = gql(_templateObject51 || (_templateObject51 = _taggedTemplateLiteral([\"\\n    mutation updateAsset($id: String!, $data: AssetMutationAttributes){\\n        updateAsset(id: $id, attributes: $data){\\n            id\\n        }\\n    }\\n\"])));\nexport var QL_ASSETS_DELETE = gql(_templateObject52 || (_templateObject52 = _taggedTemplateLiteral([\"\\n    mutation deleteAsset($id: String!){\\n        deleteAsset(id: $id){\\n            id\\n        }\\n    }\\n\"])));\nexport var QL_CLIENT_PLAN_LIST = gql(_templateObject53 || (_templateObject53 = _taggedTemplateLiteral([\"\\n    query plans($clientId: String!) {\\n        plans(clientId: $clientId) {\\n            createdAt\\n            description\\n            id\\n            nickname\\n            notes\\n            number\\n            replicate\\n        }\\n    }\\n\"])));\nexport var QL_CLIENT_PLAN_GET = gql(_templateObject54 || (_templateObject54 = _taggedTemplateLiteral([\"\\n    query plan($clientId: String = null, $id: String!) {\\n        plan(clientId: $clientId, id: $id) {\\n            createdAt\\n            description\\n            id\\n            nickname\\n            notes\\n            number\\n            replicate\\n        }\\n    }\\n\"])));\nexport var QL_CLIENT_PLAN_ADD = gql(_templateObject55 || (_templateObject55 = _taggedTemplateLiteral([\"\\n    mutation createPlan($data: PlanMutationAttributes){\\n        createPlan(attributes: $data){\\n            id\\n        }\\n    }\\n\"])));\nexport var QL_CLIENT_PLAN_UPDATE = gql(_templateObject56 || (_templateObject56 = _taggedTemplateLiteral([\"\\n    mutation updatePlan($id: String!, $data: PlanMutationAttributes){\\n        updatePlan(id: $id, attributes: $data){\\n            id\\n        }\\n    }\\n\"])));\nexport var QL_CLIENT_PLAN_DELETE = gql(_templateObject57 || (_templateObject57 = _taggedTemplateLiteral([\"\\n    mutation deletePlan($id: String!){\\n        deletePlan(id: $id){\\n            id\\n        }\\n    }\\n\"])));\nexport var QL_GOAL_LIST = gql(_templateObject58 || (_templateObject58 = _taggedTemplateLiteral([\"\\n    {\\n        goals {\\n            assetsToAssignToGoal {\\n                addAssetsToGoal\\n                amountToUseForThisGoal\\n                amountUsedInOtherGoal\\n                assetsToAssignToGoal\\n                id\\n                loanValueAtGoalDate\\n                netAfterTaxAppliedToGoal\\n                showChartOfLiquidAssets\\n                showChartOfLiquidAssetsToSell\\n                taxes\\n                totalShortfallToFund\\n                valueOfAssetAtGoalDate\\n            }\\n            assignSavingsToGoal {\\n                applySavingsToGoal\\n                assetsToAssignToGoal\\n                currentMonthlySavingCapacity\\n                dateToEndContribution\\n                dateToStartContribution\\n                futureValueOfAssetWithSavings\\n                id\\n                monthlyNeededToFundGoal\\n                monthlySavingsToAssign\\n                totalMonthlySaving\\n                totalSavingIncludingRateOfReturn\\n            }\\n            assignedTo\\n            assistanceReceivedDetail {\\n                amountReceived\\n                estimatedEndDate\\n                estimatedStartDate\\n                financialGiftFromOutsideSource\\n                frequency\\n                id\\n                personProvidingAssistanceFirstName\\n                personProvidingAssistanceLastName\\n                recipientFirstName\\n                recipientLastName\\n                relationship\\n                totalAmountOfGiftReceived\\n            }\\n            clientStartAge\\n            currentSavedForGoal\\n            date\\n            description\\n            details\\n            goalFinancingInformation {\\n                amountNeededInFutureWithInflation\\n                dollarAmountNeeded\\n                id\\n                inflationRateForThisGoal\\n            }\\n            goalType\\n            id\\n            loan {\\n                amountNeededInFutureWithInflation\\n                currentSavedForGoal\\n                id\\n                loanNeeded\\n                percentGoalSuccess\\n                totalLoanAssignedToGoal\\n            }\\n            percentGoalSuccess\\n        }\\n    }\\n\"])));\nexport var QL_GOAL_GET = gql(_templateObject59 || (_templateObject59 = _taggedTemplateLiteral([\"\\n    query goal($id: String!) {\\n        goal(id: $id) {\\n            assetsToAssignToGoal {\\n                addAssetsToGoal\\n                amountToUseForThisGoal\\n                amountUsedInOtherGoal\\n                assetsToAssignToGoal\\n                id\\n                loanValueAtGoalDate\\n                netAfterTaxAppliedToGoal\\n                showChartOfLiquidAssets\\n                showChartOfLiquidAssetsToSell\\n                taxes\\n                totalShortfallToFund\\n                valueOfAssetAtGoalDate\\n            }\\n            assignSavingsToGoal {\\n                applySavingsToGoal\\n                assetsToAssignToGoal\\n                currentMonthlySavingCapacity\\n                dateToEndContribution\\n                dateToStartContribution\\n                futureValueOfAssetWithSavings\\n                id\\n                monthlyNeededToFundGoal\\n                monthlySavingsToAssign\\n                totalMonthlySaving\\n                totalSavingIncludingRateOfReturn\\n            }\\n            assignedTo\\n            assistanceReceivedDetail {\\n                amountReceived\\n                estimatedEndDate\\n                estimatedStartDate\\n                financialGiftFromOutsideSource\\n                frequency\\n                id\\n                personProvidingAssistanceFirstName\\n                personProvidingAssistanceLastName\\n                recipientFirstName\\n                recipientLastName\\n                relationship\\n                totalAmountOfGiftReceived\\n            }\\n            clientStartAge\\n            currentSavedForGoal\\n            date\\n            description\\n            details\\n            goalFinancingInformation {\\n                amountNeededInFutureWithInflation\\n                dollarAmountNeeded\\n                id\\n                inflationRateForThisGoal\\n            }\\n            goalType\\n            id\\n            loan {\\n                amountNeededInFutureWithInflation\\n                currentSavedForGoal\\n                id\\n                loanNeeded\\n                percentGoalSuccess\\n                totalLoanAssignedToGoal\\n            }\\n            percentGoalSuccess\\n        }\\n    }\\n\"])));\nexport var QL_GOAL_ADD = gql(_templateObject60 || (_templateObject60 = _taggedTemplateLiteral([\"\\n    mutation createGoal($data: GoalMutationAttributes){\\n        createGoal(attributes: $data){\\n            id\\n        }\\n    }\\n\"])));\nexport var QL_GOAL_UPDATE = gql(_templateObject61 || (_templateObject61 = _taggedTemplateLiteral([\"\\n    mutation updateGoal($id: String!, $data: GoalMutationAttributes){\\n        updateGoal(id: $id, attributes: $data){\\n            id\\n        }\\n    }\\n\"])));\nexport var QL_GOAL_DELETE = gql(_templateObject62 || (_templateObject62 = _taggedTemplateLiteral([\"\\n    mutation deleteGoal($id: String!){\\n        deleteGoal(id: $id){\\n            id\\n        }\\n    }\\n\"])));\nexport var QL_SIGN_IN = gql(_templateObject63 || (_templateObject63 = _taggedTemplateLiteral([\"\\n    mutation signin($data: SigninAttributes!){\\n        signin(attributes: $data){\\n            account {\\n                id\\n                role\\n                username\\n            }\\n            token\\n        }\\n    }\\n\"])));\nexport var QL_SIGN_UP = gql(_templateObject64 || (_templateObject64 = _taggedTemplateLiteral([\"\\n    mutation signup($data: SignupAttributes!){\\n        signup(attributes: $data){\\n            account {\\n                id\\n                role\\n                username\\n            }\\n        }\\n    }\\n\"])));\nexport var QL_ACCOUNT_LIST = gql(_templateObject65 || (_templateObject65 = _taggedTemplateLiteral([\"\\n    {\\n        accounts{\\n            id\\n            role\\n            username\\n        }\\n    }\\n\"])));\nexport var QL_ACCOUNT_GET = gql(_templateObject66 || (_templateObject66 = _taggedTemplateLiteral([\"\\n    query account($id: String!) {\\n        account(id: $id) {\\n            id\\n            role\\n            username\\n        }\\n    }\\n\"])));\nexport var QL_PLAID_ACCOUNT_LIST = gql(_templateObject67 || (_templateObject67 = _taggedTemplateLiteral([\"\\n    query plaidAccounts($accountId: String = null) {\\n        plaidAccounts(accountId: $accountId) {\\n            balances\\n            id\\n            mask\\n            name\\n            officialName\\n            plaidAccountType\\n            subtype\\n            uuid\\n        }\\n    }\\n\"])));\nexport var QL_PLAID_ACCOUNT_GET = gql(_templateObject68 || (_templateObject68 = _taggedTemplateLiteral([\"\\n    query plaidAccount($accountId: String = null, $id: String) {\\n        plaidAccount(accountId: $accountId, id: $id) {\\n            balances\\n            id\\n            mask\\n            name\\n            officialName\\n            plaidAccountType\\n            subtype\\n            uuid\\n        }\\n    }\\n\"])));\nexport var QL_PLAID_ACCOUNT_ADD = gql(_templateObject69 || (_templateObject69 = _taggedTemplateLiteral([\"\\n    mutation createPlaidAccount($data: PlaidAccountMutationAttributes){\\n        createPlaidAccount(attributes: $data){\\n            balances\\n            id\\n            mask\\n            name\\n            officialName\\n            plaidAccountType\\n            subtype\\n            uuid\\n        }\\n    }\\n\"])));\nexport var QL_PLAID_ACCOUNT_UPDATE = gql(_templateObject70 || (_templateObject70 = _taggedTemplateLiteral([\"\\n    mutation updatePlaidAccount($id: String!, $data: PlaidAccountMutationAttributes){\\n        updatePlaidAccount(id: $id, attributes: $data){\\n            balances\\n            id\\n            mask\\n            name\\n            officialName\\n            plaidAccountType\\n            subtype\\n            uuid\\n        }\\n    }\\n\"])));\nexport var QL_PLAID_ACCOUNT_DELETE = gql(_templateObject71 || (_templateObject71 = _taggedTemplateLiteral([\"\\n    mutation deletePlaidAccount($id: String!){\\n        deletePlaidAccount(id: $id){\\n            id\\n        }\\n    }\\n\"])));\nexport var QL_PLAID_INCOME_LIST = gql(_templateObject72 || (_templateObject72 = _taggedTemplateLiteral([\"\\n    query plaidIncomes($accountId: String = null) {\\n        plaidIncomes(accountId: $accountId) {\\n            id\\n            incomeStreams\\n            lastYearIncome\\n            lastYearIncomeBeforeTax\\n            maxNumberOfOverlappingIncomeStreams\\n            numberOfIncomeStreams\\n            projectedYearlyIncome\\n            projectedYearlyIncomeBeforeTax\\n        }\\n    }\\n\"])));\nexport var QL_PLAID_INCOME_GET = gql(_templateObject73 || (_templateObject73 = _taggedTemplateLiteral([\"\\n    query plaidIncome($accountId: String = null, $id: String) {\\n        plaidIncome(accountId: $accountId, id: $id) {\\n            id\\n            incomeStreams\\n            lastYearIncome\\n            lastYearIncomeBeforeTax\\n            maxNumberOfOverlappingIncomeStreams\\n            numberOfIncomeStreams\\n            projectedYearlyIncome\\n            projectedYearlyIncomeBeforeTax\\n        }\\n    }\\n\"])));\nexport var QL_PLAID_INCOME_ADD = gql(_templateObject74 || (_templateObject74 = _taggedTemplateLiteral([\"\\n    mutation createPlaidIncome($data: PlaidIncomeMutationAttributes){\\n        createPlaidIncome(attributes: $data){\\n            id\\n            incomeStreams\\n            lastYearIncome\\n            lastYearIncomeBeforeTax\\n            maxNumberOfOverlappingIncomeStreams\\n            numberOfIncomeStreams\\n            projectedYearlyIncome\\n            projectedYearlyIncomeBeforeTax\\n        }\\n    }\\n\"])));\nexport var QL_PLAID_INCOME_UPDATE = gql(_templateObject75 || (_templateObject75 = _taggedTemplateLiteral([\"\\n    mutation updatePlaidIncome($id: String!, $data: PlaidIncomeMutationAttributes){\\n        updatePlaidIncome(id: $id, attributes: $data){\\n            id\\n            incomeStreams\\n            lastYearIncome\\n            lastYearIncomeBeforeTax\\n            maxNumberOfOverlappingIncomeStreams\\n            numberOfIncomeStreams\\n            projectedYearlyIncome\\n            projectedYearlyIncomeBeforeTax\\n        }\\n    }\\n\"])));\nexport var QL_PLAID_INCOME_DELETE = gql(_templateObject76 || (_templateObject76 = _taggedTemplateLiteral([\"\\n    mutation deletePlaidIncome($id: String!){\\n        deletePlaidIncome(id: $id){\\n            id\\n        }\\n    }\\n\"])));\nexport var QL_PLAID_INVESTMENT_LIST = gql(_templateObject77 || (_templateObject77 = _taggedTemplateLiteral([\"\\n    query plaidInvestments($accountId: String = null) {\\n        plaidInvestments(accountId: $accountId) {\\n            amount\\n            cancelTransactionId\\n            date\\n            fees\\n            id\\n            investmentTransactionId\\n            investmentType\\n            isoCurrencyCode\\n            name\\n            price\\n            quantity\\n            securityId\\n            unofficialCurrencyCode\\n            uuid\\n        }\\n    }\\n\"])));\nexport var QL_PLAID_INVESTMENT_GET = gql(_templateObject78 || (_templateObject78 = _taggedTemplateLiteral([\"\\n    query plaidInvestment($accountId: String = null, $id: String) {\\n        plaidInvestment(accountId: $accountId, id: $id) {\\n            amount\\n            cancelTransactionId\\n            date\\n            fees\\n            id\\n            investmentTransactionId\\n            investmentType\\n            isoCurrencyCode\\n            name\\n            price\\n            quantity\\n            securityId\\n            unofficialCurrencyCode\\n            uuid\\n        }\\n    }\\n\"])));\nexport var QL_PLAID_INVESTMENT_ADD = gql(_templateObject79 || (_templateObject79 = _taggedTemplateLiteral([\"\\n    mutation createPlaidInvestment($data: PlaidInvestmentMutationAttributes){\\n        createPlaidInvestment(attributes: $data){\\n            amount\\n            cancelTransactionId\\n            date\\n            fees\\n            id\\n            investmentTransactionId\\n            investmentType\\n            isoCurrencyCode\\n            name\\n            price\\n            quantity\\n            securityId\\n            unofficialCurrencyCode\\n            uuid\\n        }\\n    }\\n\"])));\nexport var QL_PLAID_INVESTMENT_UPDATE = gql(_templateObject80 || (_templateObject80 = _taggedTemplateLiteral([\"\\n    mutation updatePlaidInvestment($id: String!, $data: PlaidInvestmentMutationAttributes){\\n        updatePlaidInvestment(id: $id, attributes: $data){\\n            amount\\n            cancelTransactionId\\n            date\\n            fees\\n            id\\n            investmentTransactionId\\n            investmentType\\n            isoCurrencyCode\\n            name\\n            price\\n            quantity\\n            securityId\\n            unofficialCurrencyCode\\n            uuid\\n        }\\n    }\\n\"])));\nexport var QL_PLAID_INVESTMENT_DELETE = gql(_templateObject81 || (_templateObject81 = _taggedTemplateLiteral([\"\\n    mutation deletePlaidInvestment($id: String!){\\n        deletePlaidInvestment(id: $id){\\n            id\\n        }\\n    }\\n\"])));\nexport var QL_PLAID_ITEM_LIST = gql(_templateObject82 || (_templateObject82 = _taggedTemplateLiteral([\"\\n    query plaidItems($accountId: String = null) {\\n        plaidItems(accountId: $accountId) {\\n            availableProducts\\n            billedProducts\\n            consentExpirationTime\\n            error\\n            id\\n            institutionId\\n            uuid\\n            webhook\\n        }\\n    }\\n\"])));\nexport var QL_PLAID_ITEM_GET = gql(_templateObject83 || (_templateObject83 = _taggedTemplateLiteral([\"\\n    query plaidItem($accountId: String = null, $id: String) {\\n        plaidItem(accountId: $accountId, id: $id) {\\n            availableProducts\\n            billedProducts\\n            consentExpirationTime\\n            error\\n            id\\n            institutionId\\n            uuid\\n            webhook\\n        }\\n    }\\n\"])));\nexport var QL_PLAID_ITEM_ADD = gql(_templateObject84 || (_templateObject84 = _taggedTemplateLiteral([\"\\n    mutation createPlaidItem($data: PlaidItemMutationAttributes){\\n        createPlaidItem(attributes: $data){\\n            availableProducts\\n            billedProducts\\n            consentExpirationTime\\n            error\\n            id\\n            institutionId\\n            uuid\\n            webhook\\n        }\\n    }\\n\"])));\nexport var QL_PLAID_ITEM_UPDATE = gql(_templateObject85 || (_templateObject85 = _taggedTemplateLiteral([\"\\n    mutation updatePlaidItem($id: String!, $data: PlaidItemMutationAttributes){\\n        updatePlaidItem(id: $id, attributes: $data){\\n            availableProducts\\n            billedProducts\\n            consentExpirationTime\\n            error\\n            id\\n            institutionId\\n            uuid\\n            webhook\\n        }\\n    }\\n\"])));\nexport var QL_PLAID_ITEM_DELETE = gql(_templateObject86 || (_templateObject86 = _taggedTemplateLiteral([\"\\n    mutation deletePlaidItem($id: String!){\\n        deletePlaidItem(id: $id){\\n            id\\n        }\\n    }\\n\"])));","map":{"version":3,"names":["gql","QL_CLIENT_LIST","_templateObject","_taggedTemplateLiteral","QL_CLIENT_GET","_templateObject2","QL_CLIENT_ADD","_templateObject3","QL_CLIENT_UPDATE","_templateObject4","QL_CLIENT_DELETE","_templateObject5","QL_RATES_OF_RETURN_LIST","_templateObject6","QL_RATES_OF_RETURN_GET","_templateObject7","QL_RATES_OF_RETURN_ADD","_templateObject8","QL_RATES_OF_RETURN_UPDATE","_templateObject9","QL_TAX_INFLATION_LIST","_templateObject10","QL_TAX_INFLATION_GET","_templateObject11","QL_TAX_INFLATION_ADD","_templateObject12","QL_TAX_INFLATION_UPDATE","_templateObject13","QL_CLIENT_CONTACT_LIST","_templateObject14","QL_CLIENT_CONTACT_GET","_templateObject15","QL_CLIENT_CONTACT_ADD","_templateObject16","QL_CLIENT_CONTACT_UPDATE","_templateObject17","QL_CLIENT_CONTACT_DELETE","_templateObject18","QL_LIABILITIES_CREDIT_LIST","_templateObject19","QL_LIABILITIES_CREDIT_GET","_templateObject20","QL_LIABILITIES_CREDIT_ADD","_templateObject21","QL_LIABILITIES_CREDIT_UPDATE","_templateObject22","QL_LIABILITIES_CREDIT_DELETE","_templateObject23","QL_INSURANCE_PRODUCT_LIST","_templateObject24","QL_INSURANCE_PRODUCT_GET","_templateObject25","QL_INSURANCE_PRODUCT_ADD","_templateObject26","QL_INSURANCE_PRODUCT_UPDATE","_templateObject27","QL_INSURANCE_PRODUCT_DELETE","_templateObject28","QL_INCOME_LIST","_templateObject29","QL_INCOME_GET","_templateObject30","QL_INCOME_ADD","_templateObject31","QL_INCOME_UPDATE","_templateObject32","QL_INCOME_DELETE","_templateObject33","QL_SOCIAL_SECURITY_LIST","_templateObject34","QL_SOCIAL_SECURITY_GET","_templateObject35","QL_SOCIAL_SECURITY_ADD","_templateObject36","QL_SOCIAL_SECURITY_UPDATE","_templateObject37","QL_ASSISTANCE_IN_LIST","_templateObject38","QL_ASSISTANCE_IN_GET","_templateObject39","QL_ASSISTANCE_IN_ADD","_templateObject40","QL_ASSISTANCE_IN_UPDATE","_templateObject41","QL_ASSISTANCE_IN_DELETE","_templateObject42","QL_ASSISTANCE_OUT_LIST","_templateObject43","QL_ASSISTANCE_OUT_GET","_templateObject44","QL_ASSISTANCE_OUT_ADD","_templateObject45","QL_ASSISTANCE_OUT_UPDATE","_templateObject46","QL_ASSISTANCE_OUT_DELETE","_templateObject47","QL_ASSETS_LIST","_templateObject48","QL_ASSETS_GET","_templateObject49","QL_ASSETS_ADD","_templateObject50","QL_ASSETS_UPDATE","_templateObject51","QL_ASSETS_DELETE","_templateObject52","QL_CLIENT_PLAN_LIST","_templateObject53","QL_CLIENT_PLAN_GET","_templateObject54","QL_CLIENT_PLAN_ADD","_templateObject55","QL_CLIENT_PLAN_UPDATE","_templateObject56","QL_CLIENT_PLAN_DELETE","_templateObject57","QL_GOAL_LIST","_templateObject58","QL_GOAL_GET","_templateObject59","QL_GOAL_ADD","_templateObject60","QL_GOAL_UPDATE","_templateObject61","QL_GOAL_DELETE","_templateObject62","QL_SIGN_IN","_templateObject63","QL_SIGN_UP","_templateObject64","QL_ACCOUNT_LIST","_templateObject65","QL_ACCOUNT_GET","_templateObject66","QL_PLAID_ACCOUNT_LIST","_templateObject67","QL_PLAID_ACCOUNT_GET","_templateObject68","QL_PLAID_ACCOUNT_ADD","_templateObject69","QL_PLAID_ACCOUNT_UPDATE","_templateObject70","QL_PLAID_ACCOUNT_DELETE","_templateObject71","QL_PLAID_INCOME_LIST","_templateObject72","QL_PLAID_INCOME_GET","_templateObject73","QL_PLAID_INCOME_ADD","_templateObject74","QL_PLAID_INCOME_UPDATE","_templateObject75","QL_PLAID_INCOME_DELETE","_templateObject76","QL_PLAID_INVESTMENT_LIST","_templateObject77","QL_PLAID_INVESTMENT_GET","_templateObject78","QL_PLAID_INVESTMENT_ADD","_templateObject79","QL_PLAID_INVESTMENT_UPDATE","_templateObject80","QL_PLAID_INVESTMENT_DELETE","_templateObject81","QL_PLAID_ITEM_LIST","_templateObject82","QL_PLAID_ITEM_GET","_templateObject83","QL_PLAID_ITEM_ADD","_templateObject84","QL_PLAID_ITEM_UPDATE","_templateObject85","QL_PLAID_ITEM_DELETE","_templateObject86"],"sources":["/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/src/constants/queries.js"],"sourcesContent":["import { gql } from 'apollo-boost';\n\nexport const QL_CLIENT_LIST = gql`\n    {\n        clients {\n            address {\n                city\n                country\n                firstLine\n                id\n                postalCode\n                secondLine\n                state\n            }\n            birthdate\n            charities {\n                contactNumber\n                contactPersonFirstName\n                contactPersonLastName\n                emailAddress\n                id\n                notes\n                website\n            }\n            corporates {\n                corporateType\n                creationDate\n                id\n                name\n                stateIncorporated\n            }\n            dependents {\n                birthdate\n                childTaxCreditEndAt\n                disability\n                firstName\n                gender\n                id\n                lastName\n                relationship\n            }\n            emailAddress\n            estimatedDeathAge\n            financiallyImpacteds {\n                contactNumber\n                contactPersonFirstName\n                contactPersonLastName\n                emailAddress\n                firstName\n                id\n                lastName\n                notes\n                relationship\n                website\n            }\n            firstName\n            gender\n            id\n            investmentKnowledge\n            lastName\n            primaryContactNumber\n            professionalContacts {\n                company\n                emailAddress\n                firstName\n                id\n                lastName\n                mobileContactNumber\n                officeContactNumber\n                profession\n            }\n            retirementDate\n            secondaryContactNumber\n            secondaryEmailAddress\n            spouse {\n                birthdate\n                emailAddress\n                estimatedDeathAge\n                firstName\n                gender\n                id\n                investmentKnowledge\n                lastName\n                partner\n                primaryContactNumber\n                retirementDate\n                secondaryContactNumber\n                secondaryEmailAddress\n                workContactNumber\n            }\n            trusts {\n                firstName\n                id\n                lastName\n                name\n                percentage\n            }\n            workContactNumber\n        }\n    }\n`;\n\nexport const QL_CLIENT_GET = gql`\n    query client($id: String!) {\n        client(id: $id) {\n            address {\n                city\n                country\n                firstLine\n                id\n                postalCode\n                secondLine\n                state\n            }\n            birthdate\n            charities {\n                contactNumber\n                contactPersonFirstName\n                contactPersonLastName\n                emailAddress\n                id\n                notes\n                website\n            }\n            corporates {\n                corporateType\n                creationDate\n                id\n                name\n                stateIncorporated\n            }\n            dependents {\n                birthdate\n                childTaxCreditEndAt\n                disability\n                firstName\n                gender\n                id\n                lastName\n                relationship\n            }\n            emailAddress\n            estimatedDeathAge\n            financiallyImpacteds {\n                contactNumber\n                contactPersonFirstName\n                contactPersonLastName\n                emailAddress\n                firstName\n                id\n                lastName\n                notes\n                relationship\n                website\n            }\n            firstName\n            gender\n            id\n            investmentKnowledge\n            lastName\n            primaryContactNumber\n            professionalContacts {\n                company\n                emailAddress\n                firstName\n                id\n                lastName\n                mobileContactNumber\n                officeContactNumber\n                profession\n            }\n            retirementDate\n            secondaryContactNumber\n            secondaryEmailAddress\n            spouse {\n                birthdate\n                emailAddress\n                estimatedDeathAge\n                firstName\n                gender\n                id\n                investmentKnowledge\n                lastName\n                partner\n                primaryContactNumber\n                retirementDate\n                secondaryContactNumber\n                secondaryEmailAddress\n                workContactNumber\n            }\n            trusts {\n                firstName\n                id\n                lastName\n                name\n                percentage\n            }\n            workContactNumber\n        }\n    }\n`;\n\nexport const QL_CLIENT_ADD = gql`\n    mutation createClient($data: ClientMutationAttributes){\n        createClient(attributes: $data){\n            address {\n                city\n                country\n                firstLine\n                id\n                postalCode\n                secondLine\n                state\n            }\n            birthdate\n            charities {\n                contactNumber\n                contactPersonFirstName\n                contactPersonLastName\n                emailAddress\n                id\n                notes\n                website\n            }\n            corporates {\n                corporateType\n                creationDate\n                id\n                name\n                stateIncorporated\n            }\n            dependents {\n                birthdate\n                childTaxCreditEndAt\n                disability\n                firstName\n                gender\n                id\n                lastName\n                relationship\n            }\n            emailAddress\n            estimatedDeathAge\n            financiallyImpacteds {\n                contactNumber\n                contactPersonFirstName\n                contactPersonLastName\n                emailAddress\n                firstName\n                id\n                lastName\n                notes\n                relationship\n                website\n            }\n            firstName\n            gender\n            id\n            investmentKnowledge\n            lastName\n            primaryContactNumber\n            professionalContacts {\n                company\n                emailAddress\n                firstName\n                id\n                lastName\n                mobileContactNumber\n                officeContactNumber\n                profession\n            }\n            retirementDate\n            secondaryContactNumber\n            secondaryEmailAddress\n            spouse {\n                birthdate\n                emailAddress\n                estimatedDeathAge\n                firstName\n                gender\n                id\n                investmentKnowledge\n                lastName\n                partner\n                primaryContactNumber\n                retirementDate\n                secondaryContactNumber\n                secondaryEmailAddress\n                workContactNumber\n            }\n            trusts {\n                firstName\n                id\n                lastName\n                name\n                percentage\n            }\n            workContactNumber\n        }\n    }\n`;\n\nexport const QL_CLIENT_UPDATE = gql`\n    mutation updateClient($id: String!, $data: ClientMutationAttributes){\n        updateClient(id: $id, attributes: $data){\n            id\n        }\n    }\n`;\n\nexport const QL_CLIENT_DELETE = gql`\n    mutation deleteClient($id: String!){\n        deleteClient(id: $id){\n            id\n        }\n    }\n`;\n\nexport const QL_RATES_OF_RETURN_LIST = gql`\n    {\n        ratesOfReturns {\n            monteCarloRateOfReturns {\n                average\n                description\n                expectedAverage\n                highBand\n                howManyYears\n                id\n                lowBand\n                regenerate\n                startYear\n            }\n            ratesOfReturn {\n                id\n                professionalPrediction\n                static\n            }\n            userDefinedRateOfReturns {\n                howManyYears\n                id\n                percent\n                year\n            }\n        }\n    }\n`;\n\nexport const QL_RATES_OF_RETURN_GET = gql`\n    query ratesOfReturn($id: String!) {\n        ratesOfReturn(id: $id) {\n            monteCarloRateOfReturns {\n                average\n                description\n                expectedAverage\n                highBand\n                howManyYears\n                id\n                lowBand\n                regenerate\n                startYear\n            }\n            ratesOfReturn {\n                id\n                professionalPrediction\n                static\n            }\n            userDefinedRateOfReturns {\n                howManyYears\n                id\n                percent\n                year\n            }\n        }\n    }\n`;\n\nexport const QL_RATES_OF_RETURN_ADD = gql`\n    mutation createRatesOfReturn($data: RatesOfReturnMutationAttributes){\n        createRatesOfReturn(attributes: $data){\n            ratesOfReturn {\n                id\n                professionalPrediction\n                static\n            }\n            monteCarloRateOfReturns {\n                average\n                description\n                expectedAverage\n                highBand\n                howManyYears\n                id\n                lowBand\n                regenerate\n                startYear\n            }\n            userDefinedRateOfReturns {\n                howManyYears\n                id\n                percent\n                year\n            }\n        }\n    }\n`;\n\nexport const QL_RATES_OF_RETURN_UPDATE = gql`\n    mutation updateRatesOfReturn($id: String!, $data: RatesOfReturnMutationAttributes){\n        updateRatesOfReturn(id: $id, attributes: $data){\n            ratesOfReturn {\n                id\n                professionalPrediction\n                static\n            }\n            monteCarloRateOfReturns {\n                average\n                description\n                expectedAverage\n                highBand\n                howManyYears\n                id\n                lowBand\n                regenerate\n                startYear\n            }\n            userDefinedRateOfReturns {\n                howManyYears\n                id\n                percent\n                year\n            }\n        }\n    }\n`;\n\nexport const QL_TAX_INFLATION_LIST = gql`\n    {\n        taxAndInflations {\n            amountOfCarryForward\n            amountWithdrawnSubjectToCapGains\n            capGainsRateFederal\n            capGainsRateState\n            carryForwardDate\n            carryForwardLossNotes\n            deductions\n            doYouHaveCarryForwardLoss\n            educationInflation\n            educationInflationRate\n            federalCollectibleTaxRate\n            federalTaxRate\n            generalInflation\n            generalInflationRate\n            housingInflation\n            housingInflationRate\n            id\n            luxuryInflation\n            luxuryInflationRate\n            medicalInflation\n            medicalInflationRate\n            stateTaxEffectiveRate\n            stateTaxation\n            taxCredits {\n                amountOfCredit\n                id\n                otherTaxCredit\n            }\n            taxFilingElection\n            totalAdjustedGrossIncome\n            totalTaxRate\n        }\n    }\n`;\n\n\nexport const QL_TAX_INFLATION_GET = gql`\n    query taxAndInflation($id: String!) {\n        taxAndInflation(id: $id) {\n            amountOfCarryForward\n            amountWithdrawnSubjectToCapGains\n            capGainsRateFederal\n            capGainsRateState\n            carryForwardDate\n            carryForwardLossNotes\n            deductions\n            doYouHaveCarryForwardLoss\n            educationInflation\n            educationInflationRate\n            federalCollectibleTaxRate\n            federalTaxRate\n            generalInflation\n            generalInflationRate\n            housingInflation\n            housingInflationRate\n            id\n            luxuryInflation\n            luxuryInflationRate\n            medicalInflation\n            medicalInflationRate\n            stateTaxEffectiveRate\n            stateTaxation\n            taxCredits {\n                amountOfCredit\n                id\n                otherTaxCredit\n            }\n            taxFilingElection\n            totalAdjustedGrossIncome\n            totalTaxRate\n        }\n    }\n`;\n\nexport const QL_TAX_INFLATION_ADD = gql`\n    mutation createTaxAndInflation($data: TaxAndInflationMutationAttributes){\n        createTaxAndInflation(attributes: $data){\n            amountOfCarryForward\n            amountWithdrawnSubjectToCapGains\n            capGainsRateFederal\n            capGainsRateState\n            carryForwardDate\n            carryForwardLossNotes\n            deductions\n            doYouHaveCarryForwardLoss\n            educationInflation\n            educationInflationRate\n            federalCollectibleTaxRate\n            federalTaxRate\n            generalInflation\n            generalInflationRate\n            housingInflation\n            housingInflationRate\n            id\n            luxuryInflation\n            luxuryInflationRate\n            medicalInflation\n            medicalInflationRate\n            stateTaxEffectiveRate\n            stateTaxation\n            taxCredits {\n                amountOfCredit\n                id\n                otherTaxCredit\n            }\n            taxFilingElection\n            totalAdjustedGrossIncome\n            totalTaxRate\n        }\n    }\n`;\n\nexport const QL_TAX_INFLATION_UPDATE = gql`\n    mutation updateTaxAndInflation($id: String!, $data: TaxAndInflationMutationAttributes){\n        updateTaxAndInflation(id: $id, attributes: $data){\n            id\n        }\n    }\n`;\n\nexport const QL_CLIENT_CONTACT_LIST = gql`\n    {\n        clientContacts {\n            address {\n                city\n                country\n                firstLine\n                id\n                postalCode\n                secondLine\n                state\n            }\n            company\n            email\n            firstName\n            id\n            lastName\n            notes\n            partOfMyProfessionalTeam\n            primaryContactNumber\n            profession\n            relationship\n            secondaryContactNumber\n        }\n    }\n`;\n\nexport const QL_CLIENT_CONTACT_GET = gql`\n    query clientContact($id: String!) {\n        clientContact(id: $id) {\n            address {\n                city\n                country\n                firstLine\n                id\n                postalCode\n                secondLine\n                state\n            }\n            company\n            email\n            firstName\n            id\n            lastName\n            notes\n            partOfMyProfessionalTeam\n            primaryContactNumber\n            profession\n            relationship\n            secondaryContactNumber\n        }\n    }\n`;\n\nexport const QL_CLIENT_CONTACT_ADD = gql`\n    mutation createClientContact($data: ClientContactMutationAttributes){\n        createClientContact(attributes: $data){\n            address {\n                city\n                country\n                firstLine\n                id\n                postalCode\n                secondLine\n                state\n            }\n            company\n            email\n            firstName\n            id\n            lastName\n            notes\n            partOfMyProfessionalTeam\n            primaryContactNumber\n            profession\n            relationship\n            secondaryContactNumber\n        }\n    }\n`;\n\nexport const QL_CLIENT_CONTACT_UPDATE = gql`\n    mutation updateClientContact($id: String!, $data: ClientContactMutationAttributes){\n        updateClientContact(id: $id, attributes: $data){\n            id\n        }\n    }\n`;\n\nexport const QL_CLIENT_CONTACT_DELETE = gql`\n    mutation deleteClientContact($id: String!){\n        deleteClientContact(id: $id){\n            address {\n                city\n                country\n                firstLine\n                id\n                postalCode\n                secondLine\n                state\n            }\n            company\n            email\n            firstName\n            id\n            lastName\n            notes\n            partOfMyProfessionalTeam\n            primaryContactNumber\n            profession\n            relationship\n            secondaryContactNumber\n        }\n    }\n`;\n\nexport const QL_LIABILITIES_CREDIT_LIST = gql`\n    {\n        liabilitiesAndCredits{\n            addToMonthlyBudget\n            additionalCreditCardInformation {\n                additionalNotesAboutCreditCard\n                annualFee\n                creditBalance\n                creditLimit\n                id\n                interestRate\n                monthlyPayment\n                phoneNumberOfIssuer\n                pointBalance\n                pointExpiration\n            }\n            additionalPrincipalPayments\n            additionalPrincipals {\n                extraPrincipalPaymentDescription\n                howMuch\n                howOften\n                id\n                lastAdditionalPayment\n                numberOfOccurrences\n                whenWillPaymentStart\n            }\n            adjustableLoanDetails {\n                adjustableLoanDetails\n                dateOfRateChange\n                id\n                monthOfRateChange\n                newPercentage\n            }\n            associatedAsset\n            generalAssumption {\n                currentBalance\n                currentMonthlyPayment\n                dateOfCurrentBalance\n                futurePaymentChanges\n                id\n                monthNumberOfCurrentBalanceDate\n                originalCumulativeInterest\n                originalMonthToPayOff\n                totalMonthToPayOff\n            }\n            id\n            initialLoanAmount\n            interestRate\n            isThereAnAssociatedAsset\n            last4DigitsOfAccount\n            lengthOfLoan\n            liabilityPayoffDate\n            liabilityType\n            loanPaybackType\n            maturityDate\n            monthlyPayment\n            nameOfFinancialInstitution\n            nameOfLiability\n            owner\n            startDate\n            statusOfLiability\n            typeOfLoan\n        }\n    }\n`;\n\nexport const QL_LIABILITIES_CREDIT_GET = gql`\n    query liabilitiesAndCredit($id: String!) {\n        liabilitiesAndCredit(id: $id) {\n            addToMonthlyBudget\n            additionalCreditCardInformation {\n                additionalNotesAboutCreditCard\n                annualFee\n                creditBalance\n                creditLimit\n                id\n                interestRate\n                monthlyPayment\n                phoneNumberOfIssuer\n                pointBalance\n                pointExpiration\n            }\n            additionalPrincipalPayments\n            additionalPrincipals {\n                extraPrincipalPaymentDescription\n                howMuch\n                howOften\n                id\n                lastAdditionalPayment\n                numberOfOccurrences\n                whenWillPaymentStart\n            }\n            adjustableLoanDetails {\n                adjustableLoanDetails\n                dateOfRateChange\n                id\n                monthOfRateChange\n                newPercentage\n            }\n            associatedAsset\n            generalAssumption {\n                currentBalance\n                currentMonthlyPayment\n                dateOfCurrentBalance\n                futurePaymentChanges\n                id\n                monthNumberOfCurrentBalanceDate\n                originalCumulativeInterest\n                originalMonthToPayOff\n                totalMonthToPayOff\n            }\n            id\n            initialLoanAmount\n            interestRate\n            isThereAnAssociatedAsset\n            last4DigitsOfAccount\n            lengthOfLoan\n            liabilityPayoffDate\n            liabilityType\n            loanPaybackType\n            maturityDate\n            monthlyPayment\n            nameOfFinancialInstitution\n            nameOfLiability\n            owner\n            startDate\n            statusOfLiability\n            typeOfLoan\n        }\n    }\n`;\n\nexport const QL_LIABILITIES_CREDIT_ADD = gql`\n    mutation createLiabilitiesAndCredit($data: LiabilitiesAndCreditMutationAttributes){\n        createLiabilitiesAndCredit(attributes: $data){\n            addToMonthlyBudget\n            additionalCreditCardInformation {\n                additionalNotesAboutCreditCard\n                annualFee\n                creditBalance\n                creditLimit\n                id\n                interestRate\n                monthlyPayment\n                phoneNumberOfIssuer\n                pointBalance\n                pointExpiration\n            }\n            additionalPrincipalPayments\n            additionalPrincipals {\n                extraPrincipalPaymentDescription\n                howMuch\n                howOften\n                id\n                lastAdditionalPayment\n                numberOfOccurrences\n                whenWillPaymentStart\n            }\n            adjustableLoanDetails {\n                adjustableLoanDetails\n                dateOfRateChange\n                id\n                monthOfRateChange\n                newPercentage\n            }\n            associatedAsset\n            generalAssumption {\n                currentBalance\n                currentMonthlyPayment\n                dateOfCurrentBalance\n                futurePaymentChanges\n                id\n                monthNumberOfCurrentBalanceDate\n                originalCumulativeInterest\n                originalMonthToPayOff\n                totalMonthToPayOff\n            }\n            id\n            initialLoanAmount\n            interestRate\n            isThereAnAssociatedAsset\n            last4DigitsOfAccount\n            lengthOfLoan\n            liabilityPayoffDate\n            liabilityType\n            loanPaybackType\n            maturityDate\n            monthlyPayment\n            nameOfFinancialInstitution\n            nameOfLiability\n            owner\n            startDate\n            statusOfLiability\n            typeOfLoan\n        }\n    }\n`;\n\nexport const QL_LIABILITIES_CREDIT_UPDATE = gql`\n    mutation updateLiabilitiesAndCredit($id: String!, $data: LiabilitiesAndCreditMutationAttributes){\n        updateLiabilitiesAndCredit(id: $id, attributes: $data){\n            id\n        }\n    }\n`;\n\nexport const QL_LIABILITIES_CREDIT_DELETE = gql`\n    mutation deleteLiabilitiesAndCredit($id: String!){\n        deleteLiabilitiesAndCredit(id: $id){\n            addToMonthlyBudget\n            additionalCreditCardInformation {\n                additionalNotesAboutCreditCard\n                annualFee\n                creditBalance\n                creditLimit\n                id\n                interestRate\n                monthlyPayment\n                phoneNumberOfIssuer\n                pointBalance\n                pointExpiration\n            }\n            additionalPrincipalPayments\n            additionalPrincipals {\n                extraPrincipalPaymentDescription\n                howMuch\n                howOften\n                id\n                lastAdditionalPayment\n                numberOfOccurrences\n                whenWillPaymentStart\n            }\n            adjustableLoanDetails {\n                adjustableLoanDetails\n                dateOfRateChange\n                id\n                monthOfRateChange\n                newPercentage\n            }\n            associatedAsset\n            generalAssumption {\n                currentBalance\n                currentMonthlyPayment\n                dateOfCurrentBalance\n                futurePaymentChanges\n                id\n                monthNumberOfCurrentBalanceDate\n                originalCumulativeInterest\n                originalMonthToPayOff\n                totalMonthToPayOff\n            }\n            id\n            initialLoanAmount\n            interestRate\n            isThereAnAssociatedAsset\n            last4DigitsOfAccount\n            lengthOfLoan\n            liabilityPayoffDate\n            liabilityType\n            loanPaybackType\n            maturityDate\n            monthlyPayment\n            nameOfFinancialInstitution\n            nameOfLiability\n            owner\n            startDate\n            statusOfLiability\n            typeOfLoan\n        }\n    }\n`;\n\n\nexport const QL_INSURANCE_PRODUCT_LIST = gql`\n    {\n        insuranceProducts{\n            autoInsuranceInformation {\n                bodilyInjuryAggregate\n                bodilyInjuryPerIncident\n                id\n                propertyDamagePerIncident\n            }\n            financialInformation {\n                annualPremium\n                cashValue\n                cashValueDate\n                deductible\n                faceValue\n                id\n                monthlyPremium\n            }\n            id\n            incomeInformation {\n                currentAnnualIncome\n                currentMonthlyIncome\n                dateFutureIncomeEnds\n                frequencyOfCurrentIncome\n                futureAnnualIncome\n                futureIncomeDate\n                futureLumpSumPayment\n                id\n                incomeEndsAtDeath\n                incomeStartsAtRetirement\n                lumpSumPaymentDate\n                taxable\n            }\n            longTermCare {\n                dailyBenefit\n                eliminationPeriod\n                id\n                inflationRider\n                lifetimeBenefit\n                monthlyBenefit\n            }\n            productInformation {\n                addBeneficiaries\n                carrier\n                id\n                insuranceType\n                insured\n                lastFourOfPolicyNumber\n                nameOfBeneficiary\n                nicknameOfInsuranceProduct\n                owner\n                percent\n                policyEndDate\n                policyStartDate\n            }\n        }\n    }\n`;\n\nexport const QL_INSURANCE_PRODUCT_GET = gql`\n    query insuranceProduct($id: String!) {\n        insuranceProduct(id: $id) {\n            autoInsuranceInformation {\n                bodilyInjuryAggregate\n                bodilyInjuryPerIncident\n                id\n                propertyDamagePerIncident\n            }\n            financialInformation {\n                annualPremium\n                cashValue\n                cashValueDate\n                deductible\n                faceValue\n                id\n                monthlyPremium\n            }\n            id\n            incomeInformation {\n                currentAnnualIncome\n                currentMonthlyIncome\n                dateFutureIncomeEnds\n                frequencyOfCurrentIncome\n                futureAnnualIncome\n                futureIncomeDate\n                futureLumpSumPayment\n                id\n                incomeEndsAtDeath\n                incomeStartsAtRetirement\n                lumpSumPaymentDate\n                taxable\n            }\n            longTermCare {\n                dailyBenefit\n                eliminationPeriod\n                id\n                inflationRider\n                lifetimeBenefit\n                monthlyBenefit\n            }\n            productInformation {\n                addBeneficiaries\n                carrier\n                id\n                insuranceType\n                insured\n                lastFourOfPolicyNumber\n                nameOfBeneficiary\n                nicknameOfInsuranceProduct\n                owner\n                percent\n                policyEndDate\n                policyStartDate\n            }\n        }\n    }\n`;\n\nexport const QL_INSURANCE_PRODUCT_ADD = gql`\n    mutation createInsuranceProduct($data: InsuranceProductMutationAttributes){\n        createInsuranceProduct(attributes: $data){\n            autoInsuranceInformation {\n                bodilyInjuryAggregate\n                bodilyInjuryPerIncident\n                id\n                propertyDamagePerIncident\n            }\n            financialInformation {\n                annualPremium\n                cashValue\n                cashValueDate\n                deductible\n                faceValue\n                id\n                monthlyPremium\n            }\n            id\n            incomeInformation {\n                currentAnnualIncome\n                currentMonthlyIncome\n                dateFutureIncomeEnds\n                frequencyOfCurrentIncome\n                futureAnnualIncome\n                futureIncomeDate\n                futureLumpSumPayment\n                id\n                incomeEndsAtDeath\n                incomeStartsAtRetirement\n                lumpSumPaymentDate\n                taxable\n            }\n            longTermCare {\n                dailyBenefit\n                eliminationPeriod\n                id\n                inflationRider\n                lifetimeBenefit\n                monthlyBenefit\n            }\n            productInformation {\n                addBeneficiaries\n                carrier\n                id\n                insuranceType\n                insured\n                lastFourOfPolicyNumber\n                nameOfBeneficiary\n                nicknameOfInsuranceProduct\n                owner\n                percent\n                policyEndDate\n                policyStartDate\n            }\n        }\n    }\n`;\n\nexport const QL_INSURANCE_PRODUCT_UPDATE = gql`\n    mutation updateInsuranceProduct($id: String!, $data: InsuranceProductMutationAttributes){\n        updateInsuranceProduct(id: $id, attributes: $data){\n            id\n        }\n    }\n`;\n\nexport const QL_INSURANCE_PRODUCT_DELETE = gql`\n    mutation deleteInsuranceProduct($id: String!){\n        deleteInsuranceProduct(id: $id){\n            autoInsuranceInformation {\n                bodilyInjuryAggregate\n                bodilyInjuryPerIncident\n                id\n                propertyDamagePerIncident\n            }\n            financialInformation {\n                annualPremium\n                cashValue\n                cashValueDate\n                deductible\n                faceValue\n                id\n                monthlyPremium\n            }\n            id\n            incomeInformation {\n                currentAnnualIncome\n                currentMonthlyIncome\n                dateFutureIncomeEnds\n                frequencyOfCurrentIncome\n                futureAnnualIncome\n                futureIncomeDate\n                futureLumpSumPayment\n                id\n                incomeEndsAtDeath\n                incomeStartsAtRetirement\n                lumpSumPaymentDate\n                taxable\n            }\n            longTermCare {\n                dailyBenefit\n                eliminationPeriod\n                id\n                inflationRider\n                lifetimeBenefit\n                monthlyBenefit\n            }\n            productInformation {\n                addBeneficiaries\n                carrier\n                id\n                insuranceType\n                insured\n                lastFourOfPolicyNumber\n                nameOfBeneficiary\n                nicknameOfInsuranceProduct\n                owner\n                percent\n                policyEndDate\n                policyStartDate\n            }\n        }\n    }\n`;\n\nexport const QL_INCOME_LIST = gql`\n    {\n        incomes{\n            ageAtDesiredRetirement\n            alreadyReceivingIncome\n            amountSubjectToTax\n            dateIncomeEnds\n            dateIncomeStarts\n            earnedIncomeInformation {\n                id\n                typeOfEmploymentIncome\n            }\n            employee {\n                employeeRetirementContributions\n                federalTaxes\n                id\n                stateTaxes\n            }\n            estimatedAmountRemainingFirstYear\n            estimatedMonthlyIncome\n            frequencyOfPayPeriods\n            grossWages\n            id\n            incomeEndsAt\n            incomeSourceFromAsset\n            incomeSourceFromInsurancePolicy\n            incomeTaxation {\n                adjustedGrossIncome\n                amountSubjectToFederalTaxation\n                federalTaxationType\n                id\n                passiveOrEarned\n                stateTaxationType\n            }\n            incomeType\n            independentContractor {\n                id\n                lessSelfEmploymentAdjustment\n                taxableSelfEmploymentEarnings\n            }\n            militaryBenefit {\n                amountSubjectToStateTax\n                id\n                payeeOfSurvivorBenefits\n                percentToSurvivor\n            }\n            nicknameIncome\n            notes\n            otherIncomeType\n            owner\n            payeeOfSurvivorBenefits\n            percentToSurvivor\n            percentageYearlyIncrease\n        }\n    }\n`;\n\nexport const QL_INCOME_GET = gql`\n    query income($id: String!) {\n        income(id: $id) {\n            ageAtDesiredRetirement\n            alreadyReceivingIncome\n            amountSubjectToTax\n            dateIncomeEnds\n            dateIncomeStarts\n            earnedIncomeInformation {\n                id\n                typeOfEmploymentIncome\n            }\n            employee {\n                employeeRetirementContributions\n                federalTaxes\n                id\n                stateTaxes\n            }\n            estimatedAmountRemainingFirstYear\n            estimatedMonthlyIncome\n            frequencyOfPayPeriods\n            grossWages\n            id\n            incomeEndsAt\n            incomeSourceFromAsset\n            incomeSourceFromInsurancePolicy\n            incomeTaxation {\n                adjustedGrossIncome\n                amountSubjectToFederalTaxation\n                federalTaxationType\n                id\n                passiveOrEarned\n                stateTaxationType\n            }\n            incomeType\n            independentContractor {\n                id\n                lessSelfEmploymentAdjustment\n                taxableSelfEmploymentEarnings\n            }\n            militaryBenefit {\n                amountSubjectToStateTax\n                id\n                payeeOfSurvivorBenefits\n                percentToSurvivor\n            }\n            nicknameIncome\n            notes\n            otherIncomeType\n            owner\n            payeeOfSurvivorBenefits\n            percentToSurvivor\n            percentageYearlyIncrease\n        }\n    }\n`;\n\nexport const QL_INCOME_ADD = gql`\n    mutation createIncome($data: IncomeMutationAttributes){\n        createIncome(attributes: $data){\n            ageAtDesiredRetirement\n            alreadyReceivingIncome\n            amountSubjectToTax\n            dateIncomeEnds\n            dateIncomeStarts\n            earnedIncomeInformation {\n                id\n                typeOfEmploymentIncome\n            }\n            employee {\n                employeeRetirementContributions\n                federalTaxes\n                id\n                stateTaxes\n            }\n            estimatedAmountRemainingFirstYear\n            estimatedMonthlyIncome\n            frequencyOfPayPeriods\n            grossWages\n            id\n            incomeEndsAt\n            incomeSourceFromAsset\n            incomeSourceFromInsurancePolicy\n            incomeTaxation {\n                adjustedGrossIncome\n                amountSubjectToFederalTaxation\n                federalTaxationType\n                id\n                passiveOrEarned\n                stateTaxationType\n            }\n            incomeType\n            independentContractor {\n                id\n                lessSelfEmploymentAdjustment\n                taxableSelfEmploymentEarnings\n            }\n            militaryBenefit {\n                amountSubjectToStateTax\n                id\n                payeeOfSurvivorBenefits\n                percentToSurvivor\n            }\n            nicknameIncome\n            notes\n            otherIncomeType\n            owner\n            payeeOfSurvivorBenefits\n            percentToSurvivor\n            percentageYearlyIncrease\n        }\n    }\n`;\n\nexport const QL_INCOME_UPDATE = gql`\n    mutation updateIncome($id: String!, $data: IncomeMutationAttributes){\n        updateIncome(id: $id, attributes: $data){\n            id\n        }\n    }\n`;\n\nexport const QL_INCOME_DELETE = gql`\n    mutation deleteIncome($id: String!){\n        deleteIncome(id: $id){\n            ageAtDesiredRetirement\n            alreadyReceivingIncome\n            amountSubjectToTax\n            dateIncomeEnds\n            dateIncomeStarts\n            earnedIncomeInformation {\n                id\n                typeOfEmploymentIncome\n            }\n            employee {\n                employeeRetirementContributions\n                federalTaxes\n                id\n                stateTaxes\n            }\n            estimatedAmountRemainingFirstYear\n            estimatedMonthlyIncome\n            frequencyOfPayPeriods\n            grossWages\n            id\n            incomeEndsAt\n            incomeSourceFromAsset\n            incomeSourceFromInsurancePolicy\n            incomeTaxation {\n                adjustedGrossIncome\n                amountSubjectToFederalTaxation\n                federalTaxationType\n                id\n                passiveOrEarned\n                stateTaxationType\n            }\n            incomeType\n            independentContractor {\n                id\n                lessSelfEmploymentAdjustment\n                taxableSelfEmploymentEarnings\n            }\n            militaryBenefit {\n                amountSubjectToStateTax\n                id\n                payeeOfSurvivorBenefits\n                percentToSurvivor\n            }\n            nicknameIncome\n            notes\n            otherIncomeType\n            owner\n            payeeOfSurvivorBenefits\n            percentToSurvivor\n            percentageYearlyIncrease\n        }\n    }\n`;\n\nexport const QL_SOCIAL_SECURITY_LIST = gql`\n    {\n        socialSecurities{\n            clientBirthdate\n            clientEstimatedYearOfDeath\n            clientEstimatedYearOfRetirement\n            id\n            itemsRelatedToMoney {\n                clientMonthlyBenefitAtFullRetirementAge\n                costOfLivingAdjustment\n                id\n                timeValueOfMoneyInterestRate\n            }\n            retirementEarningsCalculator {\n                dateToBeginReceivingBenefits\n                id\n                yourEstimatedEarnings\n            }\n            spouseRetirementEarningsCalculator {\n                dateToBeginReceivingBenefits\n                id\n                monthlyDecreaseInBenefit\n                yourEstimatedEarnings\n            }\n            spouseSection {\n                id\n                spouseCostOfLivingAdjustment\n                spouseEstimatedYearOfRetirement\n                spouseMonthlyBenefitAtFullRetirementAge\n                spouseTimeValueOfMoneyInterestRate\n            }\n        }\n    }\n`;\n\nexport const QL_SOCIAL_SECURITY_GET = gql`\n    query socialSecurity($id: String!) {\n        socialSecurity(id: $id) {\n            clientBirthdate\n            clientEstimatedYearOfDeath\n            clientEstimatedYearOfRetirement\n            id\n            itemsRelatedToMoney {\n                clientMonthlyBenefitAtFullRetirementAge\n                costOfLivingAdjustment\n                id\n                timeValueOfMoneyInterestRate\n            }\n            retirementEarningsCalculator {\n                dateToBeginReceivingBenefits\n                id\n                yourEstimatedEarnings\n            }\n            spouseRetirementEarningsCalculator {\n                dateToBeginReceivingBenefits\n                id\n                monthlyDecreaseInBenefit\n                yourEstimatedEarnings\n            }\n            spouseSection {\n                id\n                spouseCostOfLivingAdjustment\n                spouseEstimatedYearOfRetirement\n                spouseMonthlyBenefitAtFullRetirementAge\n                spouseTimeValueOfMoneyInterestRate\n            }\n        }\n    }\n`;\n\nexport const QL_SOCIAL_SECURITY_ADD = gql`\n    mutation createSocialSecurity($data: SocialSecurityMutationAttributes){\n        createSocialSecurity(attributes: $data){\n            clientBirthdate\n            clientEstimatedYearOfDeath\n            clientEstimatedYearOfRetirement\n            id\n            itemsRelatedToMoney {\n                clientMonthlyBenefitAtFullRetirementAge\n                costOfLivingAdjustment\n                id\n                timeValueOfMoneyInterestRate\n            }\n            retirementEarningsCalculator {\n                dateToBeginReceivingBenefits\n                id\n                yourEstimatedEarnings\n            }\n            spouseRetirementEarningsCalculator {\n                dateToBeginReceivingBenefits\n                id\n                monthlyDecreaseInBenefit\n                yourEstimatedEarnings\n            }\n            spouseSection {\n                id\n                spouseCostOfLivingAdjustment\n                spouseEstimatedYearOfRetirement\n                spouseMonthlyBenefitAtFullRetirementAge\n                spouseTimeValueOfMoneyInterestRate\n            }\n        }\n    }\n`;\n\nexport const QL_SOCIAL_SECURITY_UPDATE = gql`\n    mutation updateSocialSecurity($id: String!, $data: SocialSecurityMutationAttributes){\n        updateSocialSecurity(id: $id, attributes: $data){\n            id\n        }\n    }\n`;\n\nexport const QL_ASSISTANCE_IN_LIST = gql`\n    {\n        assistanceIns{\n            amountReceived\n            assistanceEnds\n            currentAssistance\n            estimatedStartDate\n            frequency\n            id\n            inheritanceAmount\n            personInheritingFromFirstName\n            personInheritingFromLastName\n            personProvidingAssistanceFirstName\n            personProvidingAssistanceLastName\n            recipientFirstName\n            recipientLastName\n            relationship\n            yearOfExpectedIncome\n        }\n    }\n`;\n\nexport const QL_ASSISTANCE_IN_GET = gql`\n    query assistanceIn($id: String!) {\n        assistanceIn(id: $id) {\n            amountReceived\n            assistanceEnds\n            currentAssistance\n            estimatedStartDate\n            frequency\n            id\n            inheritanceAmount\n            personInheritingFromFirstName\n            personInheritingFromLastName\n            personProvidingAssistanceFirstName\n            personProvidingAssistanceLastName\n            recipientFirstName\n            recipientLastName\n            relationship\n            yearOfExpectedIncome\n        }\n    }\n`;\n\nexport const QL_ASSISTANCE_IN_ADD = gql`\n    mutation createAssistanceIn($data: AssistanceInMutationAttributes){\n        createAssistanceIn(attributes: $data){\n            amountReceived\n            assistanceEnds\n            currentAssistance\n            estimatedStartDate\n            frequency\n            id\n            inheritanceAmount\n            personInheritingFromFirstName\n            personInheritingFromLastName\n            personProvidingAssistanceFirstName\n            personProvidingAssistanceLastName\n            recipientFirstName\n            recipientLastName\n            relationship\n            yearOfExpectedIncome\n        }\n    }\n`;\n\nexport const QL_ASSISTANCE_IN_UPDATE = gql`\n    mutation updateAssistanceIn($id: String!, $data: AssistanceInMutationAttributes){\n        updateAssistanceIn(id: $id, attributes: $data){\n            id\n        }\n    }\n`;\n\nexport const QL_ASSISTANCE_IN_DELETE = gql`\n    mutation deleteAssistanceIn($id: String!){\n        deleteAssistanceIn(id: $id){\n            id\n        }\n    }\n`;\n\nexport const QL_ASSISTANCE_OUT_LIST = gql`\n    {\n        assistanceOuts{\n            addToMonthlyBudget\n            annualGiftingAmount\n            assistanceEnds\n            budgetItem\n            estimatedEndDate\n            estimatedStartDate\n            frequency\n            id\n            notes\n            personProvidingAssistance\n            recipientFirstName\n            recipientLastName\n            relationship\n        }\n    }\n`;\n\nexport const QL_ASSISTANCE_OUT_GET = gql`\n    query assistanceOut($id: String!) {\n        assistanceOut(id: $id) {\n            addToMonthlyBudget\n            annualGiftingAmount\n            assistanceEnds\n            budgetItem\n            estimatedEndDate\n            estimatedStartDate\n            frequency\n            id\n            notes\n            personProvidingAssistance\n            recipientFirstName\n            recipientLastName\n            relationship\n        }\n    }\n`;\n\nexport const QL_ASSISTANCE_OUT_ADD = gql`\n    mutation createAssistanceOut($data: AssistanceOutMutationAttributes){\n        createAssistanceOut(attributes: $data){\n            addToMonthlyBudget\n            annualGiftingAmount\n            assistanceEnds\n            budgetItem\n            estimatedEndDate\n            estimatedStartDate\n            frequency\n            id\n            notes\n            personProvidingAssistance\n            recipientFirstName\n            recipientLastName\n            relationship\n        }\n    }\n`;\n\nexport const QL_ASSISTANCE_OUT_UPDATE = gql`\n    mutation updateAssistanceOut($id: String!, $data: AssistanceOutMutationAttributes){\n        updateAssistanceOut(id: $id, attributes: $data){\n            id\n        }\n    }\n`;\n\nexport const QL_ASSISTANCE_OUT_DELETE = gql`\n    mutation deleteAssistanceOut($id: String!){\n        deleteAssistanceOut(id: $id){\n            id\n        }\n    }\n`;\n\nexport const QL_ASSETS_LIST = gql`\n    {\n        assets {\n            accountType\n            additionalQuestion {\n                id\n                isSpouseSoleBeneficiary\n                takeEntireBalanceByEndOf5thYear\n            }\n            assetAllocation {\n                assetAllocation\n                id\n                percentageOfPortfolioInBonds\n                percentageOfPortfolioInStocks\n                totalPercent\n            }\n            assetPerformance {\n                id\n                monetaryValue\n                rateOfReturn\n                valueAsOfDate\n            }\n            beneficiaries {\n                id\n                name\n                percent\n            }\n            collectible{\n                additionNotes\n                appraised\n                condition\n                describeCollectible\n                dollarAppliedToMonthlyBudget\n                id\n                insured\n                make\n                model\n                purchasePrice\n                typeOfArt\n                typeOfClothing\n                typeOfCollectible\n                typeOfMemorabilia\n                typeOfMetalOrJewelry\n                whenWasAppraisalDone\n                year\n            }\n            contributionOrDistributions {\n                addToMonthlyBudget\n                amount\n                contributionOrDistribution\n                description\n                endDate\n                frequency\n                id\n                orderToDistribute\n                startDate\n            }\n            generatesIncome\n            hasLoan\n            heldWhere\n            id\n            inheritedInformation {\n                deceasedIraOwnersBirthdate\n                deceasedIraOwnersDeathDate\n                id\n                ownersRelationshipToDeceased\n                regularContributionsOrDistributions\n            }\n            investmentPropertyImprovement {\n                adjustedCostBasics\n                costOfImprovement\n                dateFirstInService\n                depreciationSystems\n                id\n                improvementNotes\n                salvageValue\n            }\n            last4DigitsOfAccount\n            livestocks {\n                animalType\n                count\n                id\n                livestockNotes\n            }\n            name\n            nameOfInsuranceProduct\n            owner\n            privatePlacementAndVc {\n                additionalFutureCommittments\n                futureCommittmentDollarAmount\n                id\n                nickname\n                notes\n                whenFutureCommittmentDate\n            }\n            realState {\n                briefDescription\n                datePropertyFirstInService\n                dollarValueOfLand\n                dollarValueOfStructure\n                downpayment\n                gdsOrAdsDepreciation\n                id\n                improvementsMadeToProperty\n                incomePropertyToDepreciate\n                investmentPropertyAddress\n                monthlyLease\n                originalPurchasePrice\n                primarayResidence\n                purchasePriceOfProperty\n                totalMonthlyExpenses\n                typeOfProperty\n            }\n            sellingAssetCost {\n                actualValueAtSaleDate\n                commisionOnSale\n                considerForRetirement\n                dateOfSale\n                id\n                otherTransactionCosts\n                taxes\n                totalLiabilities\n                totalNetSoldValue\n                valueBasedOnRateOfReturn\n            }\n            status\n            stockIndividualSubforms {\n                enterTodaysValue\n                id\n                stockSymbol\n            }\n            taxAndLiquidity {\n                abilityForPartialSale\n                costBasis\n                costBasisDate\n                earlyWithdrawlPenalty\n                estimatedUnrealizedGains\n                id\n                penaltyBasedOnAgeInClientsAndPlans\n                rmdEligible\n                taxabilityOfDistribution\n                taxabilityOnDistribution\n                taxibility\n                thisAssetIsLiquid\n            }\n            userDefinedPortfolio {\n                id\n                portfolioPercentageOfBonds\n                portfolioPercentageOfCash\n                portfolioPercentageOfGold\n                portfolioPercentageOfRealEstate\n                portfolioPercentageOfSAndP500\n                totalPercentage\n            }\n            userDefinedReturnSubform {\n                id\n                monetaryValue\n                monteCarlo\n                percent\n                startYear\n                staticReturn\n                valueAsOfDate\n                year\n            }\n        }\n    }\n`;\n\nexport const QL_ASSETS_GET = gql`\n    query asset($id: String!) {\n        asset(id: $id) {\n            accountType\n            additionalQuestion {\n                id\n                isSpouseSoleBeneficiary\n                takeEntireBalanceByEndOf5thYear\n            }\n            assetAllocation {\n                assetAllocation\n                id\n                percentageOfPortfolioInBonds\n                percentageOfPortfolioInStocks\n                totalPercent\n            }\n            assetPerformance {\n                id\n                monetaryValue\n                rateOfReturn\n                valueAsOfDate\n            }\n            beneficiaries {\n                id\n                name\n                percent\n            }\n            collectible{\n                additionNotes\n                appraised\n                condition\n                describeCollectible\n                dollarAppliedToMonthlyBudget\n                id\n                insured\n                make\n                model\n                purchasePrice\n                typeOfArt\n                typeOfClothing\n                typeOfCollectible\n                typeOfMemorabilia\n                typeOfMetalOrJewelry\n                whenWasAppraisalDone\n                year\n            }\n            contributionOrDistributions {\n                addToMonthlyBudget\n                amount\n                contributionOrDistribution\n                description\n                endDate\n                frequency\n                id\n                orderToDistribute\n                startDate\n            }\n            generatesIncome\n            hasLoan\n            heldWhere\n            id\n            inheritedInformation {\n                deceasedIraOwnersBirthdate\n                deceasedIraOwnersDeathDate\n                id\n                ownersRelationshipToDeceased\n                regularContributionsOrDistributions\n            }\n            investmentPropertyImprovement {\n                adjustedCostBasics\n                costOfImprovement\n                dateFirstInService\n                depreciationSystems\n                id\n                improvementNotes\n                salvageValue\n            }\n            last4DigitsOfAccount\n            livestocks {\n                animalType\n                count\n                id\n                livestockNotes\n            }\n            name\n            nameOfInsuranceProduct\n            owner\n            privatePlacementAndVc {\n                additionalFutureCommittments\n                futureCommittmentDollarAmount\n                id\n                nickname\n                notes\n                whenFutureCommittmentDate\n            }\n            realState {\n                briefDescription\n                datePropertyFirstInService\n                dollarValueOfLand\n                dollarValueOfStructure\n                downpayment\n                gdsOrAdsDepreciation\n                id\n                improvementsMadeToProperty\n                incomePropertyToDepreciate\n                investmentPropertyAddress\n                monthlyLease\n                originalPurchasePrice\n                primarayResidence\n                purchasePriceOfProperty\n                totalMonthlyExpenses\n                typeOfProperty\n            }\n            sellingAssetCost {\n                actualValueAtSaleDate\n                commisionOnSale\n                considerForRetirement\n                dateOfSale\n                id\n                otherTransactionCosts\n                taxes\n                totalLiabilities\n                totalNetSoldValue\n                valueBasedOnRateOfReturn\n            }\n            status\n            stockIndividualSubforms {\n                enterTodaysValue\n                id\n                stockSymbol\n            }\n            taxAndLiquidity {\n                abilityForPartialSale\n                costBasis\n                costBasisDate\n                earlyWithdrawlPenalty\n                estimatedUnrealizedGains\n                id\n                penaltyBasedOnAgeInClientsAndPlans\n                rmdEligible\n                taxabilityOfDistribution\n                taxabilityOnDistribution\n                taxibility\n                thisAssetIsLiquid\n            }\n            userDefinedPortfolio {\n                id\n                portfolioPercentageOfBonds\n                portfolioPercentageOfCash\n                portfolioPercentageOfGold\n                portfolioPercentageOfRealEstate\n                portfolioPercentageOfSAndP500\n                totalPercentage\n            }\n            userDefinedReturnSubform {\n                id\n                monetaryValue\n                monteCarlo\n                percent\n                startYear\n                staticReturn\n                valueAsOfDate\n                year\n            }\n        }\n    }\n`;\n\nexport const QL_ASSETS_ADD = gql`\n    mutation createAsset($data: AssetMutationAttributes){\n        createAsset(attributes: $data){\n            id\n        }\n    }\n`;\n\nexport const QL_ASSETS_UPDATE = gql`\n    mutation updateAsset($id: String!, $data: AssetMutationAttributes){\n        updateAsset(id: $id, attributes: $data){\n            id\n        }\n    }\n`;\n\nexport const QL_ASSETS_DELETE = gql`\n    mutation deleteAsset($id: String!){\n        deleteAsset(id: $id){\n            id\n        }\n    }\n`;\n\n\nexport const QL_CLIENT_PLAN_LIST = gql`\n    query plans($clientId: String!) {\n        plans(clientId: $clientId) {\n            createdAt\n            description\n            id\n            nickname\n            notes\n            number\n            replicate\n        }\n    }\n`;\n\nexport const QL_CLIENT_PLAN_GET = gql`\n    query plan($clientId: String = null, $id: String!) {\n        plan(clientId: $clientId, id: $id) {\n            createdAt\n            description\n            id\n            nickname\n            notes\n            number\n            replicate\n        }\n    }\n`;\n\nexport const QL_CLIENT_PLAN_ADD = gql`\n    mutation createPlan($data: PlanMutationAttributes){\n        createPlan(attributes: $data){\n            id\n        }\n    }\n`;\n\nexport const QL_CLIENT_PLAN_UPDATE = gql`\n    mutation updatePlan($id: String!, $data: PlanMutationAttributes){\n        updatePlan(id: $id, attributes: $data){\n            id\n        }\n    }\n`;\n\nexport const QL_CLIENT_PLAN_DELETE = gql`\n    mutation deletePlan($id: String!){\n        deletePlan(id: $id){\n            id\n        }\n    }\n`;\n\nexport const QL_GOAL_LIST = gql`\n    {\n        goals {\n            assetsToAssignToGoal {\n                addAssetsToGoal\n                amountToUseForThisGoal\n                amountUsedInOtherGoal\n                assetsToAssignToGoal\n                id\n                loanValueAtGoalDate\n                netAfterTaxAppliedToGoal\n                showChartOfLiquidAssets\n                showChartOfLiquidAssetsToSell\n                taxes\n                totalShortfallToFund\n                valueOfAssetAtGoalDate\n            }\n            assignSavingsToGoal {\n                applySavingsToGoal\n                assetsToAssignToGoal\n                currentMonthlySavingCapacity\n                dateToEndContribution\n                dateToStartContribution\n                futureValueOfAssetWithSavings\n                id\n                monthlyNeededToFundGoal\n                monthlySavingsToAssign\n                totalMonthlySaving\n                totalSavingIncludingRateOfReturn\n            }\n            assignedTo\n            assistanceReceivedDetail {\n                amountReceived\n                estimatedEndDate\n                estimatedStartDate\n                financialGiftFromOutsideSource\n                frequency\n                id\n                personProvidingAssistanceFirstName\n                personProvidingAssistanceLastName\n                recipientFirstName\n                recipientLastName\n                relationship\n                totalAmountOfGiftReceived\n            }\n            clientStartAge\n            currentSavedForGoal\n            date\n            description\n            details\n            goalFinancingInformation {\n                amountNeededInFutureWithInflation\n                dollarAmountNeeded\n                id\n                inflationRateForThisGoal\n            }\n            goalType\n            id\n            loan {\n                amountNeededInFutureWithInflation\n                currentSavedForGoal\n                id\n                loanNeeded\n                percentGoalSuccess\n                totalLoanAssignedToGoal\n            }\n            percentGoalSuccess\n        }\n    }\n`;\n\nexport const QL_GOAL_GET = gql`\n    query goal($id: String!) {\n        goal(id: $id) {\n            assetsToAssignToGoal {\n                addAssetsToGoal\n                amountToUseForThisGoal\n                amountUsedInOtherGoal\n                assetsToAssignToGoal\n                id\n                loanValueAtGoalDate\n                netAfterTaxAppliedToGoal\n                showChartOfLiquidAssets\n                showChartOfLiquidAssetsToSell\n                taxes\n                totalShortfallToFund\n                valueOfAssetAtGoalDate\n            }\n            assignSavingsToGoal {\n                applySavingsToGoal\n                assetsToAssignToGoal\n                currentMonthlySavingCapacity\n                dateToEndContribution\n                dateToStartContribution\n                futureValueOfAssetWithSavings\n                id\n                monthlyNeededToFundGoal\n                monthlySavingsToAssign\n                totalMonthlySaving\n                totalSavingIncludingRateOfReturn\n            }\n            assignedTo\n            assistanceReceivedDetail {\n                amountReceived\n                estimatedEndDate\n                estimatedStartDate\n                financialGiftFromOutsideSource\n                frequency\n                id\n                personProvidingAssistanceFirstName\n                personProvidingAssistanceLastName\n                recipientFirstName\n                recipientLastName\n                relationship\n                totalAmountOfGiftReceived\n            }\n            clientStartAge\n            currentSavedForGoal\n            date\n            description\n            details\n            goalFinancingInformation {\n                amountNeededInFutureWithInflation\n                dollarAmountNeeded\n                id\n                inflationRateForThisGoal\n            }\n            goalType\n            id\n            loan {\n                amountNeededInFutureWithInflation\n                currentSavedForGoal\n                id\n                loanNeeded\n                percentGoalSuccess\n                totalLoanAssignedToGoal\n            }\n            percentGoalSuccess\n        }\n    }\n`;\n\nexport const QL_GOAL_ADD = gql`\n    mutation createGoal($data: GoalMutationAttributes){\n        createGoal(attributes: $data){\n            id\n        }\n    }\n`;\n\nexport const QL_GOAL_UPDATE = gql`\n    mutation updateGoal($id: String!, $data: GoalMutationAttributes){\n        updateGoal(id: $id, attributes: $data){\n            id\n        }\n    }\n`;\n\nexport const QL_GOAL_DELETE = gql`\n    mutation deleteGoal($id: String!){\n        deleteGoal(id: $id){\n            id\n        }\n    }\n`;\n\nexport const QL_SIGN_IN = gql`\n    mutation signin($data: SigninAttributes!){\n        signin(attributes: $data){\n            account {\n                id\n                role\n                username\n            }\n            token\n        }\n    }\n`;\n\nexport const QL_SIGN_UP = gql`\n    mutation signup($data: SignupAttributes!){\n        signup(attributes: $data){\n            account {\n                id\n                role\n                username\n            }\n        }\n    }\n`;\n\nexport const QL_ACCOUNT_LIST = gql`\n    {\n        accounts{\n            id\n            role\n            username\n        }\n    }\n`;\n\nexport const QL_ACCOUNT_GET = gql`\n    query account($id: String!) {\n        account(id: $id) {\n            id\n            role\n            username\n        }\n    }\n`;\n\nexport const QL_PLAID_ACCOUNT_LIST = gql`\n    query plaidAccounts($accountId: String = null) {\n        plaidAccounts(accountId: $accountId) {\n            balances\n            id\n            mask\n            name\n            officialName\n            plaidAccountType\n            subtype\n            uuid\n        }\n    }\n`;\n\nexport const QL_PLAID_ACCOUNT_GET = gql`\n    query plaidAccount($accountId: String = null, $id: String) {\n        plaidAccount(accountId: $accountId, id: $id) {\n            balances\n            id\n            mask\n            name\n            officialName\n            plaidAccountType\n            subtype\n            uuid\n        }\n    }\n`;\n\nexport const QL_PLAID_ACCOUNT_ADD = gql`\n    mutation createPlaidAccount($data: PlaidAccountMutationAttributes){\n        createPlaidAccount(attributes: $data){\n            balances\n            id\n            mask\n            name\n            officialName\n            plaidAccountType\n            subtype\n            uuid\n        }\n    }\n`;\n\nexport const QL_PLAID_ACCOUNT_UPDATE = gql`\n    mutation updatePlaidAccount($id: String!, $data: PlaidAccountMutationAttributes){\n        updatePlaidAccount(id: $id, attributes: $data){\n            balances\n            id\n            mask\n            name\n            officialName\n            plaidAccountType\n            subtype\n            uuid\n        }\n    }\n`;\n\nexport const QL_PLAID_ACCOUNT_DELETE = gql`\n    mutation deletePlaidAccount($id: String!){\n        deletePlaidAccount(id: $id){\n            id\n        }\n    }\n`;\n\nexport const QL_PLAID_INCOME_LIST = gql`\n    query plaidIncomes($accountId: String = null) {\n        plaidIncomes(accountId: $accountId) {\n            id\n            incomeStreams\n            lastYearIncome\n            lastYearIncomeBeforeTax\n            maxNumberOfOverlappingIncomeStreams\n            numberOfIncomeStreams\n            projectedYearlyIncome\n            projectedYearlyIncomeBeforeTax\n        }\n    }\n`;\n\nexport const QL_PLAID_INCOME_GET = gql`\n    query plaidIncome($accountId: String = null, $id: String) {\n        plaidIncome(accountId: $accountId, id: $id) {\n            id\n            incomeStreams\n            lastYearIncome\n            lastYearIncomeBeforeTax\n            maxNumberOfOverlappingIncomeStreams\n            numberOfIncomeStreams\n            projectedYearlyIncome\n            projectedYearlyIncomeBeforeTax\n        }\n    }\n`;\n\nexport const QL_PLAID_INCOME_ADD = gql`\n    mutation createPlaidIncome($data: PlaidIncomeMutationAttributes){\n        createPlaidIncome(attributes: $data){\n            id\n            incomeStreams\n            lastYearIncome\n            lastYearIncomeBeforeTax\n            maxNumberOfOverlappingIncomeStreams\n            numberOfIncomeStreams\n            projectedYearlyIncome\n            projectedYearlyIncomeBeforeTax\n        }\n    }\n`;\n\nexport const QL_PLAID_INCOME_UPDATE = gql`\n    mutation updatePlaidIncome($id: String!, $data: PlaidIncomeMutationAttributes){\n        updatePlaidIncome(id: $id, attributes: $data){\n            id\n            incomeStreams\n            lastYearIncome\n            lastYearIncomeBeforeTax\n            maxNumberOfOverlappingIncomeStreams\n            numberOfIncomeStreams\n            projectedYearlyIncome\n            projectedYearlyIncomeBeforeTax\n        }\n    }\n`;\n\nexport const QL_PLAID_INCOME_DELETE = gql`\n    mutation deletePlaidIncome($id: String!){\n        deletePlaidIncome(id: $id){\n            id\n        }\n    }\n`;\n\nexport const QL_PLAID_INVESTMENT_LIST = gql`\n    query plaidInvestments($accountId: String = null) {\n        plaidInvestments(accountId: $accountId) {\n            amount\n            cancelTransactionId\n            date\n            fees\n            id\n            investmentTransactionId\n            investmentType\n            isoCurrencyCode\n            name\n            price\n            quantity\n            securityId\n            unofficialCurrencyCode\n            uuid\n        }\n    }\n`;\n\nexport const QL_PLAID_INVESTMENT_GET = gql`\n    query plaidInvestment($accountId: String = null, $id: String) {\n        plaidInvestment(accountId: $accountId, id: $id) {\n            amount\n            cancelTransactionId\n            date\n            fees\n            id\n            investmentTransactionId\n            investmentType\n            isoCurrencyCode\n            name\n            price\n            quantity\n            securityId\n            unofficialCurrencyCode\n            uuid\n        }\n    }\n`;\n\nexport const QL_PLAID_INVESTMENT_ADD = gql`\n    mutation createPlaidInvestment($data: PlaidInvestmentMutationAttributes){\n        createPlaidInvestment(attributes: $data){\n            amount\n            cancelTransactionId\n            date\n            fees\n            id\n            investmentTransactionId\n            investmentType\n            isoCurrencyCode\n            name\n            price\n            quantity\n            securityId\n            unofficialCurrencyCode\n            uuid\n        }\n    }\n`;\n\nexport const QL_PLAID_INVESTMENT_UPDATE = gql`\n    mutation updatePlaidInvestment($id: String!, $data: PlaidInvestmentMutationAttributes){\n        updatePlaidInvestment(id: $id, attributes: $data){\n            amount\n            cancelTransactionId\n            date\n            fees\n            id\n            investmentTransactionId\n            investmentType\n            isoCurrencyCode\n            name\n            price\n            quantity\n            securityId\n            unofficialCurrencyCode\n            uuid\n        }\n    }\n`;\n\nexport const QL_PLAID_INVESTMENT_DELETE = gql`\n    mutation deletePlaidInvestment($id: String!){\n        deletePlaidInvestment(id: $id){\n            id\n        }\n    }\n`;\n\nexport const QL_PLAID_ITEM_LIST = gql`\n    query plaidItems($accountId: String = null) {\n        plaidItems(accountId: $accountId) {\n            availableProducts\n            billedProducts\n            consentExpirationTime\n            error\n            id\n            institutionId\n            uuid\n            webhook\n        }\n    }\n`;\n\nexport const QL_PLAID_ITEM_GET = gql`\n    query plaidItem($accountId: String = null, $id: String) {\n        plaidItem(accountId: $accountId, id: $id) {\n            availableProducts\n            billedProducts\n            consentExpirationTime\n            error\n            id\n            institutionId\n            uuid\n            webhook\n        }\n    }\n`;\n\nexport const QL_PLAID_ITEM_ADD = gql`\n    mutation createPlaidItem($data: PlaidItemMutationAttributes){\n        createPlaidItem(attributes: $data){\n            availableProducts\n            billedProducts\n            consentExpirationTime\n            error\n            id\n            institutionId\n            uuid\n            webhook\n        }\n    }\n`;\n\nexport const QL_PLAID_ITEM_UPDATE = gql`\n    mutation updatePlaidItem($id: String!, $data: PlaidItemMutationAttributes){\n        updatePlaidItem(id: $id, attributes: $data){\n            availableProducts\n            billedProducts\n            consentExpirationTime\n            error\n            id\n            institutionId\n            uuid\n            webhook\n        }\n    }\n`;\n\nexport const QL_PLAID_ITEM_DELETE = gql`\n    mutation deletePlaidItem($id: String!){\n        deletePlaidItem(id: $id){\n            id\n        }\n    }\n`;"],"mappings":"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"},"metadata":{},"sourceType":"module"}