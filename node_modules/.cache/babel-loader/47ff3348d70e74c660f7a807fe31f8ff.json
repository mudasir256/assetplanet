{"ast":null,"code":"import _classCallCheck from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _slicedToArray from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/src/pages/client_info/clients_plans/ClientPlanNew.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from 'antd';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { QL_CLIENT_PLAN_ADD, QL_CLIENT_PLAN_UPDATE, QL_CLIENT_PLAN_GET } from '../../../constants/queries';\nimport { FormPagePose } from '../../../components/Animations';\nimport PlanInformationSubForm from './subforms/PlanInformationSubForm';\nimport EndSubForm from './subforms/EndSubForm';\nvar fnMutationClientPlanAdd = null;\nvar dataMutationClientPlanAdd = null;\nvar prevPos = 0;\nvar fnMutationClientPlanUpdate = null;\nvar dataMutationClientPlanUpdate = null;\nfunction HiddenHook() {\n  var _useMutation = useMutation(QL_CLIENT_PLAN_ADD);\n  var _useMutation2 = _slicedToArray(_useMutation, 2);\n  fnMutationClientPlanAdd = _useMutation2[0];\n  dataMutationClientPlanAdd = _useMutation2[1].dataMutationClientPlanAdd;\n  var _useMutation3 = useMutation(QL_CLIENT_PLAN_UPDATE);\n  var _useMutation4 = _slicedToArray(_useMutation3, 2);\n  fnMutationClientPlanUpdate = _useMutation4[0];\n  dataMutationClientPlanUpdate = _useMutation4[1].dataMutationClientPlanUpdate;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  });\n}\nfunction convertDB2FormData(data) {\n  console.log('readData:', data);\n  var formData = [];\n  formData.push({\n    id: 'PlanInformationSubForm',\n    data: PlanInformationSubForm.FnCreateFormData({\n      planNumber: data['plan']['number'],\n      nickName: data['plan']['nickname'],\n      planDescription: data['plan']['description'],\n      replicatePlan: data['plan']['replicate'] ? 'Yes' : 'No'\n    }),\n    visible: true\n  });\n  return formData;\n}\nfunction LoadDBDataHook(props) {\n  if (props.dbID != null && props.dbID != '') {\n    var _useQuery = useQuery(QL_CLIENT_PLAN_GET, {\n        variables: {\n          clientId: '1',\n          id: props.dbID\n        }\n      }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n    if (data) {\n      console.log('call..');\n      props.cbLoadDBData(convertDB2FormData(data));\n    }\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  });\n}\nvar ClientPlanNew = /*#__PURE__*/function (_Component) {\n  _inherits(ClientPlanNew, _Component);\n  function ClientPlanNew(props) {\n    var _this;\n    _classCallCheck(this, ClientPlanNew);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ClientPlanNew).call(this, props));\n    _this.toggleRightSide = function (e) {\n      e.preventDefault();\n      _this.setState({\n        isRightSideOpen: !_this.state.isRightSideOpen\n      });\n    };\n    var dbID = null;\n    var dbLoaded = true;\n    var planID = _this.props.match.params.planID;\n    if (planID) {\n      dbID = planID;\n      dbLoaded = false;\n    }\n    _this.state = {\n      dataID: dbID,\n      curSubFormID: 'PlanInformationSubForm',\n      curSubForm: PlanInformationSubForm,\n      formVisible: false,\n      subFormData: {},\n      formData: [\n        // {\n        //     id: 'assetsInformation',\n        //     data: {\n        //         title: '',\n        //         fields: [\n        //             {\n        //                 id: '' ,\n        //                 title: '',\n        //                 value: ''\n        //              }   \n        //         ]\n        //     }\n        // }\n      ],\n      formSteps: [{\n        id: 'PlanInformationSubForm',\n        icon: 'icon_ex.png',\n        title: 'Step1'\n      }\n      // {\n      //     id: 'EndSubForm',\n      //     icon: 'icon_ex.png',\n      //     title: 'Step11'\n      // }\n      ],\n\n      dbLoaded: dbLoaded,\n      dbID: dbID\n    };\n    _this.goSubForm = _this.goSubForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateSubForm = _this.updateSubForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSubFormData = _this.getSubFormData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSubFormField = _this.getSubFormField.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createQLVariable = _this.createQLVariable.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSubFormFieldValue = _this.getSubFormFieldValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleRightSide = _this.toggleRightSide.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadDBData = _this.loadDBData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  _createClass(ClientPlanNew, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.goSubForm(\"PlanInformationSubForm\");\n    }\n  }, {\n    key: \"getSubFormField\",\n    value: function getSubFormField(formID, fieldID) {\n      var formData = this.state.formData;\n      for (var index = 0; index < formData.length; index++) {\n        if (formData[index]['id'] == formID) {\n          var data = formData[index]['data'];\n          var fields = data['fields'];\n          for (var findex = 0; findex < fields.length; findex++) {\n            if (fields[findex]['id'] == fieldID) {\n              return fields[findex];\n            }\n          }\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"getSubFormFieldValue\",\n    value: function getSubFormFieldValue(formID, fieldID) {\n      var field = this.getSubFormField(formID, fieldID);\n      if (field == null) {\n        return '';\n      } else {\n        return field.value;\n      }\n    }\n  }, {\n    key: \"createQLVariable\",\n    value: function createQLVariable(subFormID, subFormData) {\n      var varQL = null;\n      switch (subFormID) {\n        case 'PlanInformationSubForm':\n          varQL = {\n            \"clientId\": '1',\n            \"plan\": {\n              \"number\": this.getSubFormFieldValue(subFormID, 'planNumber'),\n              \"nickname\": this.getSubFormFieldValue(subFormID, 'nickName'),\n              \"description\": this.getSubFormFieldValue(subFormID, 'planDescription'),\n              \"replicate\": this.getSubFormFieldValue(subFormID, 'replicatePlan') == 'Yes' ? true : false\n            }\n          };\n          break;\n        case 'EndSubForm':\n      }\n      return varQL;\n    }\n  }, {\n    key: \"updateSubForm\",\n    value: function updateSubForm(subFormID, subFormData) {\n      var visible = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var formData = this.state.formData;\n      var bFound = false;\n      for (var findex = 0; findex < formData.length; findex++) {\n        if (formData[findex]['id'] == subFormID) {\n          formData[findex]['data'] = subFormData;\n          bFound = true;\n        }\n      }\n      if (!bFound) {\n        formData.push({\n          id: subFormID,\n          data: subFormData,\n          visible: visible\n        });\n      }\n      var varQL = this.createQLVariable(subFormID, subFormData);\n      console.log('varQL:', varQL, ', dataID:', this.state.dataID);\n      var instance = this;\n      if (varQL != null) {\n        if (this.state.dataID == null) {\n          fnMutationClientPlanAdd({\n            variables: {\n              data: varQL\n            }\n          }).then(function (response) {\n            instance.setState({\n              dataID: response['data']['createPlan']['id']\n            });\n          });\n        } else {\n          fnMutationClientPlanUpdate({\n            variables: {\n              id: this.state.dataID,\n              data: varQL\n            }\n          });\n        }\n      }\n      this.setState({\n        formData: formData\n      });\n    }\n  }, {\n    key: \"getSubFormData\",\n    value: function getSubFormData(subFormID) {\n      var fromState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var pformData = arguments.length > 2 ? arguments[2] : undefined;\n      var formData;\n      if (fromState) {\n        formData = this.state.formData;\n      } else {\n        formData = pformData;\n      }\n      for (var findex = 0; findex < formData.length; findex++) {\n        if (formData[findex]['id'] == subFormID) {\n          return formData[findex]['data'];\n        }\n      }\n      return {};\n    }\n  }, {\n    key: \"goSubForm\",\n    value: function goSubForm(subFormID) {\n      var _this2 = this;\n      this.setState({\n        formVisible: false\n      });\n      var nextSubForm = PlanInformationSubForm;\n      var subFormData = this.getSubFormData(subFormID);\n      switch (subFormID) {\n        case 'PlanInformationSubForm':\n          nextSubForm = PlanInformationSubForm;\n          break;\n        case 'EndSubForm':\n          nextSubForm = EndSubForm;\n          break;\n      }\n      setTimeout(function () {\n        _this2.setState({\n          formVisible: true,\n          curSubFormID: subFormID,\n          curSubForm: nextSubForm,\n          subFormData: subFormData\n        });\n      }, 100);\n    }\n  }, {\n    key: \"loadDBData\",\n    value: function loadDBData(formData) {\n      console.log('formData:', formData);\n      var instance = this;\n      setTimeout(function () {\n        instance.setState({\n          formVisible: true,\n          dbLoaded: true,\n          formData: formData,\n          subFormData: instance.getSubFormData(instance.state.curSubFormID, false, formData)\n        });\n      }, 100);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var navlinks = [{\n        href: '/',\n        title: 'Home'\n      }, {\n        href: '/modules',\n        title: 'Modules'\n      }, {\n        href: '/clients/plans',\n        //new='/clients/plans' old='/clients_plans' \n        title: 'Client and Plans'\n      }];\n      var SubForm = this.state.curSubForm;\n      var formpageClassName = 'form-page-container-wrap';\n      if (this.state.isRightSideOpen) {\n        formpageClassName = 'form-page-container-wrap right-side--opend';\n      } else {\n        formpageClassName = 'form-page-container-wrap right-side--collapsed';\n      }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: formpageClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--main-side\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(HiddenHook, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 21\n        }\n      }), !this.state.dbLoaded && /*#__PURE__*/React.createElement(LoadDBDataHook, {\n        dbLoaded: this.state.dbLoaded,\n        dbID: this.state.dbID,\n        cbLoadDBData: this.loadDBData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 25\n        }\n      }), this.state.dbLoaded && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--left-side\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(FormPagePose, {\n        className: \"info-form-block\",\n        pose: this.state.formVisible ? 'visible' : 'hidden',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(SubForm, {\n        subFormData: this.state.subFormData,\n        cbGoSubForm: this.goSubForm,\n        cbUpdateSubForm: this.updateSubForm,\n        formData: this.state.formData,\n        cbGetSubFormField: this.getSubFormField,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 37\n        }\n      }))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--right-side\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"right-side-collapse-icon\",\n        onClick: this.toggleRightSide,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fe-menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--right-side-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 21\n        }\n      }, this.state.formData.map(function (subForm, sindex) {\n        if (subForm.visible == false) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: sindex,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 45\n            }\n          });\n        }\n        var subFormData = subForm.data;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-brief-block\",\n          key: sindex,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-brief-top\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          className: \"form-brief-title\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 41\n          }\n        }, subFormData.title), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"form-brief-edit-btn\",\n          onClick: function onClick() {\n            return _this3.goSubForm(subForm.id);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          type: \"edit\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 122\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-brief-content\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 37\n          }\n        }, subFormData.fields.map(function (field, ffindex) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-item\",\n            key: ffindex,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 49\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            className: \"form-brief-item-title\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 53\n            }\n          }, field.title != '' ? field.title + \":\" : null, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n            className: \"form-brief-item-value\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 53\n            }\n          }, field.value));\n        })));\n      }))));\n    }\n  }]);\n  return ClientPlanNew;\n}(Component);\nexport default connect()(ClientPlanNew);","map":{"version":3,"names":["React","Component","connect","Icon","useMutation","useQuery","QL_CLIENT_PLAN_ADD","QL_CLIENT_PLAN_UPDATE","QL_CLIENT_PLAN_GET","FormPagePose","PlanInformationSubForm","EndSubForm","fnMutationClientPlanAdd","dataMutationClientPlanAdd","prevPos","fnMutationClientPlanUpdate","dataMutationClientPlanUpdate","HiddenHook","_useMutation","_useMutation2","_slicedToArray","_useMutation3","_useMutation4","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","convertDB2FormData","data","console","log","formData","push","id","FnCreateFormData","planNumber","nickName","planDescription","replicatePlan","visible","LoadDBDataHook","props","dbID","_useQuery","variables","clientId","loading","error","cbLoadDBData","ClientPlanNew","_Component","_inherits","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","toggleRightSide","e","preventDefault","setState","isRightSideOpen","state","dbLoaded","planID","match","params","dataID","curSubFormID","curSubForm","formVisible","subFormData","formSteps","icon","title","goSubForm","bind","_assertThisInitialized","updateSubForm","getSubFormData","getSubFormField","createQLVariable","getSubFormFieldValue","loadDBData","_createClass","key","value","componentDidMount","formID","fieldID","index","length","fields","findex","field","subFormID","varQL","arguments","undefined","bFound","instance","then","response","fromState","pformData","_this2","nextSubForm","setTimeout","render","_this3","navlinks","href","SubForm","formpageClassName","className","pose","cbGoSubForm","cbUpdateSubForm","cbGetSubFormField","onClick","map","subForm","sindex","type","ffindex"],"sources":["/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/src/pages/client_info/clients_plans/ClientPlanNew.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from 'antd';\n\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport {\n    QL_CLIENT_PLAN_ADD,\n    QL_CLIENT_PLAN_UPDATE,\n    QL_CLIENT_PLAN_GET\n} from '../../../constants/queries';\n\nimport { FormPagePose } from '../../../components/Animations';\n\nimport PlanInformationSubForm from './subforms/PlanInformationSubForm';\nimport EndSubForm from './subforms/EndSubForm';\n\nvar fnMutationClientPlanAdd = null;\nvar dataMutationClientPlanAdd = null;\nlet prevPos = 0;\n\nvar fnMutationClientPlanUpdate = null;\nvar dataMutationClientPlanUpdate = null;\n\nfunction HiddenHook(){\n    [fnMutationClientPlanAdd, { dataMutationClientPlanAdd }] = useMutation(QL_CLIENT_PLAN_ADD);\n    [fnMutationClientPlanUpdate, { dataMutationClientPlanUpdate }] = useMutation(QL_CLIENT_PLAN_UPDATE);\n\n    return (\n        <React.Fragment></React.Fragment>\n    )\n}\n\nfunction convertDB2FormData(data){\n\n    console.log('readData:', data);\n    let formData = [];\n\n    formData.push({\n        id: 'PlanInformationSubForm',\n        data: PlanInformationSubForm.FnCreateFormData({\n            planNumber: data['plan']['number'],\n            nickName: data['plan']['nickname'],\n            planDescription: data['plan']['description'],\n            replicatePlan: data['plan']['replicate'] ? 'Yes' : 'No'\n        }),\n        visible: true\n    })\n\n    return formData;\n}\n\nfunction LoadDBDataHook(props){\n    if(props.dbID != null && props.dbID != ''){\n        const {data, loading, error} = useQuery(QL_CLIENT_PLAN_GET, { variables: { clientId: '1', id: props.dbID} });\n        if(data){\n            console.log('call..');\n            props.cbLoadDBData(convertDB2FormData(data));\n        }\n    }\n    \n    return (\n        <React.Fragment></React.Fragment>\n    )\n}\n\nclass ClientPlanNew extends Component {\n\n    constructor(props) {\n        super(props);\n\n        let dbID = null;\n        let dbLoaded = true;      \n\n        const { planID } = this.props.match.params;        \n\n        if( planID ){\n            dbID = planID;\n            dbLoaded = false;\n        }\n\n        this.state = {\n            dataID: dbID,\n            curSubFormID: 'PlanInformationSubForm',\n            curSubForm: PlanInformationSubForm,\n            formVisible: false,\n            subFormData: {},\n            formData: [\n                // {\n                //     id: 'assetsInformation',\n                //     data: {\n                //         title: '',\n                //         fields: [\n                //             {\n                //                 id: '' ,\n                //                 title: '',\n                //                 value: ''\n                //              }   \n                //         ]\n                //     }\n                // }\n            ],\n            formSteps: [\n                {\n                    id: 'PlanInformationSubForm',\n                    icon: 'icon_ex.png',\n                    title: 'Step1'\n                },\n                // {\n                //     id: 'EndSubForm',\n                //     icon: 'icon_ex.png',\n                //     title: 'Step11'\n                // }\n            ],\n            dbLoaded: dbLoaded,\n            dbID: dbID\n        }\n\n        this.goSubForm = this.goSubForm.bind(this);\n        this.updateSubForm = this.updateSubForm.bind(this);\n        this.getSubFormData = this.getSubFormData.bind(this);\n        this.getSubFormField = this.getSubFormField.bind(this);\n\n        this.createQLVariable = this.createQLVariable.bind(this);\n        this.getSubFormFieldValue = this.getSubFormFieldValue.bind(this);\n\n        this.toggleRightSide = this.toggleRightSide.bind(this);\n\n        this.loadDBData = this.loadDBData.bind(this);\n    }\n\n    componentDidMount() {\n        this.goSubForm(\"PlanInformationSubForm\");\n    }\n\n    getSubFormField(formID, fieldID){\n        let formData = this.state.formData;\n\n        for(var index = 0; index < formData.length; index++){\n            if(formData[index]['id'] == formID){\n                let data = formData[index]['data'];\n                let fields = data['fields'];\n                for(var findex = 0; findex < fields.length; findex++){\n                    if(fields[findex]['id'] == fieldID){\n                        return fields[findex];\n                    }\n                }\n            }\n        }\n\n        return null\n    }\n\n    getSubFormFieldValue(formID, fieldID){\n        let field = this.getSubFormField(formID, fieldID);\n\n        if(field == null){\n            return '';\n        }\n        else{\n            return field.value;\n        }\n    }\n\n    createQLVariable(subFormID, subFormData){\n        let varQL = null;\n\n        switch(subFormID){\n            case 'PlanInformationSubForm': \n                varQL = {\n                    \"clientId\" : '1',\n                    \"plan\" : {\n                        \"number\": this.getSubFormFieldValue(subFormID, 'planNumber'),\n                        \"nickname\": this.getSubFormFieldValue(subFormID, 'nickName'),\n                        \"description\": this.getSubFormFieldValue(subFormID, 'planDescription'),\n                        \"replicate\": this.getSubFormFieldValue(subFormID, 'replicatePlan') == 'Yes' ? true : false,\n                    }\n                };\n                break;\n            case 'EndSubForm':\n                \n        }\n\n        return varQL;\n    }\n\n    updateSubForm(subFormID, subFormData, visible = true){\n        let formData = this.state.formData;\n\n        var bFound = false;\n        for(var findex = 0; findex < formData.length; findex++){\n            if(formData[findex]['id'] == subFormID){\n                formData[findex]['data'] = subFormData;\n                bFound = true;\n            }\n        }\n\n        if(!bFound){\n            formData.push({\n                id: subFormID,\n                data: subFormData,\n                visible: visible\n            })\n        }\n\n        let varQL = this.createQLVariable(subFormID, subFormData);\n\n        console.log('varQL:', varQL, ', dataID:', this.state.dataID);\n        \n        var instance = this;\n        if(varQL != null){\n            if(this.state.dataID == null){\n                fnMutationClientPlanAdd({ variables: { data: varQL } }).then((response) => {\n                    instance.setState({\n                        dataID: response['data']['createPlan']['id']\n                    })\n                });\n                \n            }\n            else{\n                fnMutationClientPlanUpdate({ variables: { id: this.state.dataID, data: varQL } })\n            }\n        }\n\n        this.setState({\n            formData: formData\n        });\n    }\n\n    getSubFormData(subFormID, fromState = true, pformData){\n\n        let formData;\n        if(fromState){\n            formData = this.state.formData;\n        }\n        else{\n            formData = pformData;\n        }\n        \n        for(var findex = 0; findex < formData.length; findex++){\n            if(formData[findex]['id'] == subFormID){\n                return formData[findex]['data'];\n            }\n        }\n\n        return {};\n    }\n\n    goSubForm(subFormID){\n\n        this.setState({\n            formVisible: false,\n        })\n\n        let nextSubForm = PlanInformationSubForm;\n        let subFormData = this.getSubFormData(subFormID);\n\n        switch(subFormID){\n            case 'PlanInformationSubForm':\n                nextSubForm = PlanInformationSubForm;\n                break;\n            case 'EndSubForm':\n                nextSubForm = EndSubForm;\n                break;\n        }\n\n        setTimeout(() => {\n            this.setState({ \n                formVisible: true,\n                curSubFormID: subFormID,\n                curSubForm: nextSubForm,\n                subFormData: subFormData\n            });\n        }, 100);\n\n    }\n\n    toggleRightSide = (e) => {\n        e.preventDefault();\n        this.setState({ isRightSideOpen: !this.state.isRightSideOpen });\n    }\n\n    loadDBData(formData){\n        console.log('formData:', formData);\n\n        var instance = this;\n        setTimeout(function(){\n            instance.setState({ \n                formVisible: true,\n                dbLoaded: true,\n                formData: formData,\n                subFormData: instance.getSubFormData(instance.state.curSubFormID, false, formData)\n            });\n        }, 100)        \n\n    }\n\n    render() {\n\n        const navlinks = [\n            {\n                href: '/',\n                title: 'Home'\n            },\n            {\n                href: '/modules',\n                title: 'Modules'\n            },\n            {\n                href: '/clients/plans', //new='/clients/plans' old='/clients_plans' \n                title: 'Client and Plans'\n            }\n        ]\n\n        let SubForm = this.state.curSubForm;\n\n        let formpageClassName = 'form-page-container-wrap';\n        if(this.state.isRightSideOpen){\n            formpageClassName = 'form-page-container-wrap right-side--opend';\n        }\n        else {\n            formpageClassName = 'form-page-container-wrap right-side--collapsed';\n        }\n        return (\n            <div className={formpageClassName}>\n                <div className=\"form-page--main-side\">\n                    <HiddenHook />\n                    {\n                        !this.state.dbLoaded && \n                        <LoadDBDataHook \n                            dbLoaded={this.state.dbLoaded}\n                            dbID={this.state.dbID}\n                            cbLoadDBData={this.loadDBData}\n                        />\n                    }\n                    \n                    {\n                        this.state.dbLoaded && \n                        <div className=\"form-page-container\">\n                            <div className=\"form-page--left-side\">\n                                <FormPagePose className=\"info-form-block\" pose={this.state.formVisible ? 'visible' : 'hidden'}>\n                                    <SubForm \n                                        subFormData={this.state.subFormData}\n                                        cbGoSubForm={this.goSubForm}\n                                        cbUpdateSubForm={this.updateSubForm}\n                                        formData={this.state.formData}\n                                        cbGetSubFormField={this.getSubFormField}\n                                    />\n                                </FormPagePose>\n                            </div>\n                        </div>\n                    }\n                </div>\n                <div className=\"form-page--right-side\">\n                    <span className=\"right-side-collapse-icon\" onClick={this.toggleRightSide}>\n                        <i className=\"fe-menu\"></i>\n                    </span>\n                    <div className=\"form-page--right-side-wrap\">\n                        {\n                            this.state.formData.map((subForm, sindex) => {\n                                if(subForm.visible == false){\n                                    return (<div key={sindex}></div>)\n                                }\n                                \n                                let subFormData = subForm.data;\n                                return(\n                                <div className=\"form-brief-block\" key={sindex}>\n                                    <div className=\"form-brief-top\">\n                                        <h4 className=\"form-brief-title\">{subFormData.title}</h4>\n                                        <span className=\"form-brief-edit-btn\" onClick={() => this.goSubForm(subForm.id)}><Icon type=\"edit\"></Icon></span>\n                                    </div>\n                                    <div className=\"form-brief-content\">\n                                    {\n                                        subFormData.fields.map((field, ffindex) => {\n                                            return(\n                                                <div className=\"form-brief-item\" key={ffindex}>\n                                                    <p className=\"form-brief-item-title\">{field.title != '' ? field.title + \":\" : null} </p>\n                                                    <p className=\"form-brief-item-value\">{field.value}</p>\n                                                </div>\n                                            )\n                                        })\n                                    }\n                                    </div>\n                                </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect()(ClientPlanNew);"],"mappings":"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"},"metadata":{},"sourceType":"module"}