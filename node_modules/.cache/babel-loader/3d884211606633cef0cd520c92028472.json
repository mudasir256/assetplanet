{"ast":null,"code":"\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar React = require(\"react\");\nvar PropTypes = require(\"prop-types\");\nvar ALL_INITIALIZERS = [];\nvar READY_INITIALIZERS = [];\nfunction isWebpackReady(getModuleIds) {\n  if ((typeof __webpack_modules__ === \"undefined\" ? \"undefined\" : _typeof(__webpack_modules__)) !== \"object\") {\n    return false;\n  }\n  return getModuleIds().every(function (moduleId) {\n    return typeof moduleId !== \"undefined\" && typeof __webpack_modules__[moduleId] !== \"undefined\";\n  });\n}\nfunction load(loader) {\n  var promise = loader();\n  var state = {\n    loading: true,\n    loaded: null,\n    error: null\n  };\n  state.promise = promise.then(function (loaded) {\n    state.loading = false;\n    state.loaded = loaded;\n    return loaded;\n  }).catch(function (err) {\n    state.loading = false;\n    state.error = err;\n    throw err;\n  });\n  return state;\n}\nfunction loadMap(obj) {\n  var state = {\n    loading: false,\n    loaded: {},\n    error: null\n  };\n  var promises = [];\n  try {\n    Object.keys(obj).forEach(function (key) {\n      var result = load(obj[key]);\n      if (!result.loading) {\n        state.loaded[key] = result.loaded;\n        state.error = result.error;\n      } else {\n        state.loading = true;\n      }\n      promises.push(result.promise);\n      result.promise.then(function (res) {\n        state.loaded[key] = res;\n      }).catch(function (err) {\n        state.error = err;\n      });\n    });\n  } catch (err) {\n    state.error = err;\n  }\n  state.promise = Promise.all(promises).then(function (res) {\n    state.loading = false;\n    return res;\n  }).catch(function (err) {\n    state.loading = false;\n    throw err;\n  });\n  return state;\n}\nfunction resolve(obj) {\n  return obj && obj.__esModule ? obj.default : obj;\n}\nfunction render(loaded, props) {\n  return React.createElement(resolve(loaded), props);\n}\nfunction createLoadableComponent(loadFn, options) {\n  var _class, _temp;\n  if (!options.loading) {\n    throw new Error(\"react-loadable requires a `loading` component\");\n  }\n  var opts = Object.assign({\n    loader: null,\n    loading: null,\n    delay: 200,\n    timeout: null,\n    render: render,\n    webpack: null,\n    modules: null\n  }, options);\n  var res = null;\n  function init() {\n    if (!res) {\n      res = loadFn(opts.loader);\n    }\n    return res.promise;\n  }\n  ALL_INITIALIZERS.push(init);\n  if (typeof opts.webpack === \"function\") {\n    READY_INITIALIZERS.push(function () {\n      if (isWebpackReady(opts.webpack)) {\n        return init();\n      }\n    });\n  }\n  return _temp = _class = function (_React$Component) {\n    _inherits(LoadableComponent, _React$Component);\n    function LoadableComponent(props) {\n      _classCallCheck(this, LoadableComponent);\n      var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n      _this.retry = function () {\n        _this.setState({\n          error: null,\n          loading: true,\n          timedOut: false\n        });\n        res = loadFn(opts.loader);\n        _this._loadModule();\n      };\n      init();\n      _this.state = {\n        error: res.error,\n        pastDelay: false,\n        timedOut: false,\n        loading: res.loading,\n        loaded: res.loaded\n      };\n      return _this;\n    }\n    LoadableComponent.preload = function preload() {\n      return init();\n    };\n    LoadableComponent.prototype.componentWillMount = function componentWillMount() {\n      this._mounted = true;\n      this._loadModule();\n    };\n    LoadableComponent.prototype._loadModule = function _loadModule() {\n      var _this2 = this;\n      if (this.context.loadable && Array.isArray(opts.modules)) {\n        opts.modules.forEach(function (moduleName) {\n          _this2.context.loadable.report(moduleName);\n        });\n      }\n      if (!res.loading) {\n        return;\n      }\n      if (typeof opts.delay === \"number\") {\n        if (opts.delay === 0) {\n          this.setState({\n            pastDelay: true\n          });\n        } else {\n          this._delay = setTimeout(function () {\n            _this2.setState({\n              pastDelay: true\n            });\n          }, opts.delay);\n        }\n      }\n      if (typeof opts.timeout === \"number\") {\n        this._timeout = setTimeout(function () {\n          _this2.setState({\n            timedOut: true\n          });\n        }, opts.timeout);\n      }\n      var update = function update() {\n        if (!_this2._mounted) {\n          return;\n        }\n        _this2.setState({\n          error: res.error,\n          loaded: res.loaded,\n          loading: res.loading\n        });\n        _this2._clearTimeouts();\n      };\n      res.promise.then(function () {\n        update();\n      }).catch(function (err) {\n        update();\n      });\n    };\n    LoadableComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n      this._mounted = false;\n      this._clearTimeouts();\n    };\n    LoadableComponent.prototype._clearTimeouts = function _clearTimeouts() {\n      clearTimeout(this._delay);\n      clearTimeout(this._timeout);\n    };\n    LoadableComponent.prototype.render = function render() {\n      if (this.state.loading || this.state.error) {\n        return React.createElement(opts.loading, {\n          isLoading: this.state.loading,\n          pastDelay: this.state.pastDelay,\n          timedOut: this.state.timedOut,\n          error: this.state.error,\n          retry: this.retry\n        });\n      } else if (this.state.loaded) {\n        return opts.render(this.state.loaded, this.props);\n      } else {\n        return null;\n      }\n    };\n    return LoadableComponent;\n  }(React.Component), _class.contextTypes = {\n    loadable: PropTypes.shape({\n      report: PropTypes.func.isRequired\n    })\n  }, _temp;\n}\nfunction Loadable(opts) {\n  return createLoadableComponent(load, opts);\n}\nfunction LoadableMap(opts) {\n  if (typeof opts.render !== \"function\") {\n    throw new Error(\"LoadableMap requires a `render(loaded, props)` function\");\n  }\n  return createLoadableComponent(loadMap, opts);\n}\nLoadable.Map = LoadableMap;\nvar Capture = function (_React$Component2) {\n  _inherits(Capture, _React$Component2);\n  function Capture() {\n    _classCallCheck(this, Capture);\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n  Capture.prototype.getChildContext = function getChildContext() {\n    return {\n      loadable: {\n        report: this.props.report\n      }\n    };\n  };\n  Capture.prototype.render = function render() {\n    return React.Children.only(this.props.children);\n  };\n  return Capture;\n}(React.Component);\nCapture.propTypes = {\n  report: PropTypes.func.isRequired\n};\nCapture.childContextTypes = {\n  loadable: PropTypes.shape({\n    report: PropTypes.func.isRequired\n  }).isRequired\n};\nLoadable.Capture = Capture;\nfunction flushInitializers(initializers) {\n  var promises = [];\n  while (initializers.length) {\n    var init = initializers.pop();\n    promises.push(init());\n  }\n  return Promise.all(promises).then(function () {\n    if (initializers.length) {\n      return flushInitializers(initializers);\n    }\n  });\n}\nLoadable.preloadAll = function () {\n  return new Promise(function (resolve, reject) {\n    flushInitializers(ALL_INITIALIZERS).then(resolve, reject);\n  });\n};\nLoadable.preloadReady = function () {\n  return new Promise(function (resolve, reject) {\n    // We always will resolve, errors should be handled within loading UIs.\n    flushInitializers(READY_INITIALIZERS).then(resolve, resolve);\n  });\n};\nmodule.exports = Loadable;","map":null,"metadata":{},"sourceType":"script"}