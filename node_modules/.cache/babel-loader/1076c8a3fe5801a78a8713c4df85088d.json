{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport addEventListener from \"rc-util/es/Dom/addEventListener\";\nimport Affix from '../affix';\nimport { ConfigConsumer } from '../config-provider';\nimport scrollTo from '../_util/scrollTo';\nimport getScroll from '../_util/getScroll';\nfunction getDefaultContainer() {\n  return window;\n}\nfunction getOffsetTop(element, container) {\n  if (!element) {\n    return 0;\n  }\n  if (!element.getClientRects().length) {\n    return 0;\n  }\n  var rect = element.getBoundingClientRect();\n  if (rect.width || rect.height) {\n    if (container === window) {\n      container = element.ownerDocument.documentElement;\n      return rect.top - container.clientTop;\n    }\n    return rect.top - container.getBoundingClientRect().top;\n  }\n  return rect.top;\n}\nvar sharpMatcherRegx = /#([^#]+)$/;\nvar Anchor = /*#__PURE__*/function (_React$Component) {\n  _inherits(Anchor, _React$Component);\n  var _super = _createSuper(Anchor);\n  function Anchor() {\n    var _this;\n    _classCallCheck(this, Anchor);\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      activeLink: null\n    };\n    _this.links = [];\n    _this.handleScrollTo = function (link) {\n      var _this$props = _this.props,\n        offsetTop = _this$props.offsetTop,\n        getContainer = _this$props.getContainer,\n        targetOffset = _this$props.targetOffset;\n      _this.setCurrentActiveLink(link);\n      var container = getContainer();\n      var scrollTop = getScroll(container, true);\n      var sharpLinkMatch = sharpMatcherRegx.exec(link);\n      if (!sharpLinkMatch) {\n        return;\n      }\n      var targetElement = document.getElementById(sharpLinkMatch[1]);\n      if (!targetElement) {\n        return;\n      }\n      var eleOffsetTop = getOffsetTop(targetElement, container);\n      var y = scrollTop + eleOffsetTop;\n      y -= targetOffset !== undefined ? targetOffset : offsetTop || 0;\n      _this.animating = true;\n      scrollTo(y, {\n        callback: function callback() {\n          _this.animating = false;\n        },\n        getContainer: getContainer\n      });\n    };\n    _this.saveInkNode = function (node) {\n      _this.inkNode = node;\n    };\n    _this.setCurrentActiveLink = function (link) {\n      var activeLink = _this.state.activeLink;\n      var onChange = _this.props.onChange;\n      if (activeLink !== link) {\n        _this.setState({\n          activeLink: link\n        });\n        if (onChange) {\n          onChange(link);\n        }\n      }\n    };\n    _this.handleScroll = function () {\n      if (_this.animating) {\n        return;\n      }\n      var _this$props2 = _this.props,\n        offsetTop = _this$props2.offsetTop,\n        bounds = _this$props2.bounds,\n        targetOffset = _this$props2.targetOffset;\n      var currentActiveLink = _this.getCurrentAnchor(targetOffset !== undefined ? targetOffset : offsetTop || 0, bounds);\n      _this.setCurrentActiveLink(currentActiveLink);\n    };\n    _this.updateInk = function () {\n      if (typeof document === 'undefined') {\n        return;\n      }\n      var _assertThisInitialize = _assertThisInitialized(_this),\n        prefixCls = _assertThisInitialize.prefixCls;\n      var anchorNode = ReactDOM.findDOMNode(_assertThisInitialized(_this));\n      var linkNode = anchorNode.getElementsByClassName(\"\".concat(prefixCls, \"-link-title-active\"))[0];\n      if (linkNode) {\n        _this.inkNode.style.top = \"\".concat(linkNode.offsetTop + linkNode.clientHeight / 2 - 4.5, \"px\");\n      }\n    };\n    _this.renderAnchor = function (_ref) {\n      var getPrefixCls = _ref.getPrefixCls;\n      var _this$props3 = _this.props,\n        customizePrefixCls = _this$props3.prefixCls,\n        _this$props3$classNam = _this$props3.className,\n        className = _this$props3$classNam === void 0 ? '' : _this$props3$classNam,\n        style = _this$props3.style,\n        offsetTop = _this$props3.offsetTop,\n        affix = _this$props3.affix,\n        showInkInFixed = _this$props3.showInkInFixed,\n        children = _this$props3.children,\n        getContainer = _this$props3.getContainer;\n      var activeLink = _this.state.activeLink;\n      var prefixCls = getPrefixCls('anchor', customizePrefixCls); // To support old version react.\n      // Have to add prefixCls on the instance.\n      // https://github.com/facebook/react/issues/12397\n\n      _this.prefixCls = prefixCls;\n      var inkClass = classNames(\"\".concat(prefixCls, \"-ink-ball\"), {\n        visible: activeLink\n      });\n      var wrapperClass = classNames(className, \"\".concat(prefixCls, \"-wrapper\"));\n      var anchorClass = classNames(prefixCls, {\n        fixed: !affix && !showInkInFixed\n      });\n      var wrapperStyle = _extends({\n        maxHeight: offsetTop ? \"calc(100vh - \".concat(offsetTop, \"px)\") : '100vh'\n      }, style);\n      var anchorContent = /*#__PURE__*/React.createElement(\"div\", {\n        className: wrapperClass,\n        style: wrapperStyle\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: anchorClass\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-ink\")\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: inkClass,\n        ref: _this.saveInkNode\n      })), children));\n      return !affix ? anchorContent : /*#__PURE__*/React.createElement(Affix, {\n        offsetTop: offsetTop,\n        target: getContainer\n      }, anchorContent);\n    };\n    return _this;\n  }\n  _createClass(Anchor, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      var _this2 = this;\n      var antAnchor = {\n        registerLink: function registerLink(link) {\n          if (!_this2.links.includes(link)) {\n            _this2.links.push(link);\n          }\n        },\n        unregisterLink: function unregisterLink(link) {\n          var index = _this2.links.indexOf(link);\n          if (index !== -1) {\n            _this2.links.splice(index, 1);\n          }\n        },\n        activeLink: this.state.activeLink,\n        scrollTo: this.handleScrollTo,\n        onClick: this.props.onClick\n      };\n      return {\n        antAnchor: antAnchor\n      };\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var getContainer = this.props.getContainer;\n      this.scrollContainer = getContainer();\n      this.scrollEvent = addEventListener(this.scrollContainer, 'scroll', this.handleScroll);\n      this.handleScroll();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.scrollEvent) {\n        var getContainer = this.props.getContainer;\n        var currentContainer = getContainer();\n        if (this.scrollContainer !== currentContainer) {\n          this.scrollContainer = currentContainer;\n          this.scrollEvent.remove();\n          this.scrollEvent = addEventListener(this.scrollContainer, 'scroll', this.handleScroll);\n          this.handleScroll();\n        }\n      }\n      this.updateInk();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.scrollEvent) {\n        this.scrollEvent.remove();\n      }\n    }\n  }, {\n    key: \"getCurrentAnchor\",\n    value: function getCurrentAnchor() {\n      var offsetTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var bounds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n      var getCurrentAnchor = this.props.getCurrentAnchor;\n      if (typeof getCurrentAnchor === 'function') {\n        return getCurrentAnchor();\n      }\n      var activeLink = '';\n      if (typeof document === 'undefined') {\n        return activeLink;\n      }\n      var linkSections = [];\n      var getContainer = this.props.getContainer;\n      var container = getContainer();\n      this.links.forEach(function (link) {\n        var sharpLinkMatch = sharpMatcherRegx.exec(link.toString());\n        if (!sharpLinkMatch) {\n          return;\n        }\n        var target = document.getElementById(sharpLinkMatch[1]);\n        if (target) {\n          var top = getOffsetTop(target, container);\n          if (top < offsetTop + bounds) {\n            linkSections.push({\n              link: link,\n              top: top\n            });\n          }\n        }\n      });\n      if (linkSections.length) {\n        var maxSection = linkSections.reduce(function (prev, curr) {\n          return curr.top > prev.top ? curr : prev;\n        });\n        return maxSection.link;\n      }\n      return '';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(ConfigConsumer, null, this.renderAnchor);\n    }\n  }]);\n  return Anchor;\n}(React.Component);\nexport { Anchor as default };\nAnchor.defaultProps = {\n  affix: true,\n  showInkInFixed: false,\n  getContainer: getDefaultContainer\n};\nAnchor.childContextTypes = {\n  antAnchor: PropTypes.object\n};","map":null,"metadata":{},"sourceType":"module"}