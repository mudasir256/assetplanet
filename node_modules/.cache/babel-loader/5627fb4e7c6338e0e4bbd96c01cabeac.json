{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nvar _assign = require('babel-runtime/core-js/object/assign');\nvar _assign2 = _interopRequireDefault(_assign);\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\nvar _extends2 = require('babel-runtime/helpers/extends');\nvar _extends3 = _interopRequireDefault(_extends2);\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\nvar _inherits2 = require('babel-runtime/helpers/inherits');\nvar _inherits3 = _interopRequireDefault(_inherits2);\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _propTypes = require('prop-types');\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _AvInput = require('./AvInput');\nvar _AvInput2 = _interopRequireDefault(_AvInput);\nvar _AvGroup = require('./AvGroup');\nvar _AvGroup2 = _interopRequireDefault(_AvGroup);\nvar _AvFeedback = require('./AvFeedback');\nvar _AvFeedback2 = _interopRequireDefault(_AvFeedback);\nvar _reactstrap = require('reactstrap');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar colSizes = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar AvField = function (_Component) {\n  (0, _inherits3.default)(AvField, _Component);\n  function AvField() {\n    (0, _classCallCheck3.default)(this, AvField);\n    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));\n  }\n  AvField.prototype.getChildContext = function getChildContext() {\n    var _this2 = this;\n    this.FormCtrl = (0, _extends3.default)({}, this.context.FormCtrl);\n    var registerValidator = this.FormCtrl.register;\n    this.FormCtrl.register = function (input) {\n      var updater = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : input && input.setState && input.setState.bind(input);\n      registerValidator(input, function () {\n        _this2.setState({});\n        if (updater) updater({});\n      });\n    };\n    return {\n      FormCtrl: this.FormCtrl\n    };\n  };\n  AvField.prototype.render = function render() {\n    var row = false;\n    var col = {};\n    var labelCol = {};\n    var _props = this.props,\n      helpMessage = _props.helpMessage,\n      label = _props.label,\n      labelHidden = _props.labelHidden,\n      inputClass = _props.inputClass,\n      labelClass = _props.labelClass,\n      children = _props.children,\n      _props$id = _props.id,\n      id = _props$id === undefined ? this.props.name : _props$id,\n      size = _props.size,\n      disabled = _props.disabled,\n      readOnly = _props.readOnly,\n      grid = _props.grid,\n      labelAttrs = _props.labelAttrs,\n      groupAttrs = _props.groupAttrs,\n      attributes = (0, _objectWithoutProperties3.default)(_props, ['helpMessage', 'label', 'labelHidden', 'inputClass', 'labelClass', 'children', 'id', 'size', 'disabled', 'readOnly', 'grid', 'labelAttrs', 'groupAttrs']);\n    if (grid) {\n      colSizes.forEach(function (colSize) {\n        if (grid[colSize]) {\n          row = true;\n          var sizeNum = parseInt(grid[colSize], 10);\n          col[colSize] = sizeNum;\n          labelCol[colSize] = 12 - sizeNum;\n        }\n      });\n    }\n    var input = _react2.default.createElement(_AvInput2.default, (0, _extends3.default)({\n      id: id,\n      className: inputClass,\n      size: size,\n      disabled: disabled,\n      readOnly: readOnly\n    }, attributes), children);\n    var validation = this.context.FormCtrl.getInputState(this.props.name);\n    var feedback = validation.errorMessage ? _react2.default.createElement(_AvFeedback2.default, null, validation.errorMessage) : null;\n    var help = helpMessage ? _react2.default.createElement(_reactstrap.FormText, null, helpMessage) : null;\n    var inputRow = row ? _react2.default.createElement(_reactstrap.Col, col, input, feedback, help) : input;\n    var check = attributes.type === 'checkbox';\n    if ((check || attributes.type === 'radio' || attributes.type === 'switch') && (attributes.tag === _reactstrap.CustomInput || Array.isArray(attributes.tag) && attributes.tag[0] === _reactstrap.CustomInput)) {\n      return _react2.default.createElement(_AvGroup2.default, {\n        className: 'mb-0'\n      }, _react2.default.createElement(_AvInput2.default, this.props, feedback, help));\n    }\n    return _react2.default.createElement(_AvGroup2.default, (0, _extends3.default)({\n      check: check,\n      disabled: disabled,\n      row: row\n    }, groupAttrs), check && inputRow, label && _react2.default.createElement(_reactstrap.Label, (0, _extends3.default)({\n      'for': id,\n      className: labelClass,\n      hidden: labelHidden,\n      size: size\n    }, labelCol, labelAttrs), label), !check && inputRow, !row && feedback, !row && help);\n  };\n  return AvField;\n}(_react.Component);\nAvField.propTypes = (0, _assign2.default)({}, _AvInput2.default.propTypes, {\n  label: _propTypes2.default.node,\n  labelHidden: _propTypes2.default.bool,\n  disabled: _propTypes2.default.bool,\n  readOnly: _propTypes2.default.bool,\n  id: _propTypes2.default.string,\n  inputClass: _propTypes2.default.string,\n  labelClass: _propTypes2.default.string,\n  helpMessage: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),\n  errorMessage: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),\n  labelAttrs: _propTypes2.default.object,\n  groupAttrs: _propTypes2.default.object,\n  grid: _propTypes2.default.object\n});\nAvField.contextTypes = {\n  FormCtrl: _propTypes2.default.object.isRequired\n};\nAvField.childContextTypes = {\n  FormCtrl: _propTypes2.default.object.isRequired\n};\nexports.default = AvField;","map":null,"metadata":{},"sourceType":"script"}