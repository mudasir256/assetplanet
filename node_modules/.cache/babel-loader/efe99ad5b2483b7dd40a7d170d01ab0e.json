{"ast":null,"code":"import _classCallCheck from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _asyncToGenerator from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/src/pages/modules/assets/AssetsNew.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Icon, Alert } from \"antd\";\nimport ImageIcon from \"assets/images/asset.png\";\nimport AssetPlanet from \"assets/images/asset-planet-logo.jpg\";\nimport { MODULE_API } from \"../../../apis\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { QL_ASSETS_ADD, QL_ASSETS_UPDATE, QL_ASSETS_GET } from \"../../../constants/queries\";\nimport { float2Currency } from \"helpers/Utils\";\nimport { FormPagePose } from \"../../../components/Animations\";\nimport SellingAssetCostsSubForm from \"./subforms/SellingAssetCostsSubForm\";\nimport CollectiblesSubForm from \"./subforms/CollectiblesSubForm\";\nimport VCSubForm from \"./subforms/VCSubForm\";\nimport StockSubForm from \"./subforms/StockSubForm\";\nimport UserPortfolioSubForm from \"./subforms/UserPortfolioSubForm\";\nimport ContributionSubForm from \"./subforms/ContributionSubForm\";\nimport AssetInformationSubForm from \"./subforms/AssetInformationSubForm\";\nimport QuestionRMDAdditionalSubForm from \"./subforms/QuestionRMDAdditionalSubForm\";\nimport QuestionShowFieldsAirplane from \"./subforms/QuestionShowFieldsAirplane\";\nimport QuestionContributionDistributionSubForm from \"./subforms/QuestionContributionDistributionSubForm\";\nimport AssetAllocationSubForm from \"./subforms/AssetAllocationSubForm\";\nimport AssetPerformanceSubForm from \"./subforms/AssetPerformanceSubForm\";\nimport LiveStockSubForm from \"./subforms/LiveStockSubForm\";\nimport PrimaryResidenceSubForm from \"./subforms/PrimaryResidenceSubForm\";\nimport TaxLiquiditySubForm from \"./subforms/TaxLiquiditySubForm\";\nimport CommittmentSubForm from \"./subforms/CommittmentSubForm\";\nimport PropertySubForm from \"./subforms/PropertySubForm\";\nimport InvestmentPropertySubForm from \"./subforms/InvestmentPropertySubForm\";\nimport InvestmentPropertyExpensesSubForm from \"./subforms/InvestmentPropertyExpensesSubForm\";\nimport InheritedIRASubForm from \"./subforms/InheritedIRASubForm\";\nimport EndSubForm from \"./subforms/EndSubForm\";\nvar fnMutationAssetsAdd = null;\nvar dataMutationAssetsAdd = null;\nvar fnMutationAssetsUpdate = null;\nvar dataMutationAssetsUpdate = null;\nvar prevPos = 0;\nfunction HiddenHook() {\n  var _useMutation = useMutation(QL_ASSETS_ADD);\n  var _useMutation2 = _slicedToArray(_useMutation, 2);\n  fnMutationAssetsAdd = _useMutation2[0];\n  dataMutationAssetsAdd = _useMutation2[1].dataMutationAssetsAdd;\n  var _useMutation3 = useMutation(QL_ASSETS_UPDATE);\n  var _useMutation4 = _slicedToArray(_useMutation3, 2);\n  fnMutationAssetsUpdate = _useMutation4[0];\n  dataMutationAssetsUpdate = _useMutation4[1].dataMutationAssetsUpdate;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 10\n    }\n  });\n}\nfunction initialFormData(data) {\n  var formData = [];\n  console.log(\"fghjkl\", data);\n  if (data.hasOwnProperty(\"asset\")) {\n    formData.push({\n      id: \"AssetAllocationSubForm\",\n      data: AssetAllocationSubForm.FnCreateFormData({\n        value: data[\"asset\"][\"assetAllocation\"] != null ? data[\"asset\"][\"assetAllocation\"][\"assetAllocation\"] : \"\"\n      }),\n      visible: true,\n      stepId: \"StepAssetAllocationSubForm\"\n    });\n    formData.push({\n      id: \"AssetInformationSubForm\",\n      data: AssetInformationSubForm.FnCreateFormData({\n        name: data[\"asset\"][\"name\"],\n        accountType: data[\"asset\"][\"accountType\"],\n        owner: data[\"asset\"][\"owner\"],\n        heldWhere: data[\"asset\"][\"heldWhere\"],\n        accountDigits: data[\"asset\"][\"last4DigitsOfAccount\"],\n        assetStatus: data[\"asset\"][\"status\"]\n      }),\n      visible: true,\n      stepId: \"StepAssetInformationSubForm\"\n    });\n    formData.push({\n      id: \"QuestionRMDAdditionalSubForm\",\n      data: QuestionRMDAdditionalSubForm.FnCreateFormData({\n        value: data[\"asset\"][\"additionalQuestion\"] != null ? data[\"asset\"][\"additionalQuestion\"][\"isSpouseSoleBeneficiary\"] ? \"Yes\" : \"No\" : \"\"\n      }),\n      visible: true,\n      stepId: \"StepAccountTypeQuestions\"\n    });\n    formData.push({\n      id: \"QuestionShowFieldsAirplane\",\n      data: QuestionShowFieldsAirplane.FnCreateFormData({\n        value: data[\"asset\"][\"additionalQuestion\"] != null ? data[\"asset\"][\"additionalQuestion\"][\"isShowFields\"] ? \"Yes\" : \"No\" : \"\"\n      }),\n      visible: true,\n      stepId: \"StepSellingAssetCostsInformation\"\n    });\n    formData.push({\n      id: \"InheritedIRASubForm\",\n      data: InheritedIRASubForm.FnCreateFormData({\n        birthDate: data[\"asset\"][\"inheritedInformation\"] != null ? data[\"asset\"][\"inheritedInformation\"][\"deceasedIraOwnersBirthdate\"] : \"\",\n        deathDate: data[\"asset\"][\"inheritedInformation\"] != null ? data[\"asset\"][\"inheritedInformation\"][\"deceasedIraOwnersDeathDate\"] : \"\",\n        relationship: data[\"asset\"][\"inheritedInformation\"] != null ? data[\"asset\"][\"inheritedInformation\"][\"ownersRelationshipToDeceased\"] : \"\"\n      }),\n      visible: true,\n      stepId: \"StepAccountTypeQuestions\"\n    });\n    formData.push({\n      id: \"QuestionContributionDistributionSubForm\",\n      data: QuestionContributionDistributionSubForm.FnCreateFormData({\n        value: data[\"asset\"][\"inheritedInformation\"] != null ? data[\"asset\"][\"inheritedInformation\"][\"regularContributionsOrDistributions\"] ? \"Yes\" : \"No\" : \"\"\n      }),\n      visible: true,\n      stepId: \"StepQuestionContributionDistributionSubForm\"\n    });\n    formData.push({\n      id: \"ContributionSubForm\",\n      data: ContributionSubForm.FnCreateFormData(data[\"asset\"][\"contributionOrDistributions\"]),\n      visible: true,\n      stepId: \"StepQuestionContributionDistributionSubForm\"\n    });\n    formData.push({\n      id: \"SellingAssetCostsSubForm\",\n      data: SellingAssetCostsSubForm.FnCreateFormData({\n        saleDate: data[\"asset\"][\"sellingAssetCost\"] != null ? data[\"asset\"][\"sellingAssetCost\"][\"dateOfSale\"] : \"\",\n        totalLiabilities: data[\"asset\"][\"sellingAssetCost\"] != null ? data[\"asset\"][\"sellingAssetCost\"][\"totalLiabilities\"] : \"\",\n        totalNetSoldValue: data[\"asset\"][\"sellingAssetCost\"] != null ? data[\"asset\"][\"sellingAssetCost\"][\"totalNetSoldValue\"] : \"\",\n        commissionSale: data[\"asset\"][\"sellingAssetCost\"] != null ? data[\"asset\"][\"sellingAssetCost\"][\"commisionOnSale\"] : \"\",\n        rateReturnValue: data[\"asset\"][\"sellingAssetCost\"] != null ? data[\"asset\"][\"sellingAssetCost\"][\"valueBasedOnRateOfReturn\"] : \"\",\n        otherTransactionCosts: data[\"asset\"][\"sellingAssetCost\"] != null ? data[\"asset\"][\"sellingAssetCost\"][\"otherTransactionCosts\"] : \"\",\n        actualValue: data[\"asset\"][\"sellingAssetCost\"] != null ? data[\"asset\"][\"sellingAssetCost\"][\"actualValueAtSaleDate\"] : \"\",\n        taxes: data[\"asset\"][\"sellingAssetCost\"] != null ? data[\"asset\"][\"sellingAssetCost\"][\"taxes\"] : \"\"\n      }),\n      visibile: true,\n      stepId: \"StepSellingAssetCostsInformation\"\n    });\n    formData.push({\n      id: \"CollectiblesSubForm\",\n      data: CollectiblesSubForm.FnCreateFormData({\n        year: data[\"asset\"][\"collectible\"] != null ? data[\"asset\"][\"collectible\"][\"year\"] : \"\",\n        description: data[\"asset\"][\"collectible\"] != null ? data[\"asset\"][\"collectible\"][\"describeCollectible\"] : \"\",\n        // monthlyBudget: data['asset']['collectible'] != null ? data['asset']['collectible']['dollarAppliedToMonthlyBudget'] : '',\n        collectibleType: data[\"asset\"][\"collectible\"] != null ? data[\"asset\"][\"collectible\"][\"typeOfCollectible\"] : \"\",\n        model: data[\"asset\"][\"collectible\"] != null ? data[\"asset\"][\"collectible\"][\"model\"] : \"\",\n        make: data[\"asset\"][\"collectible\"] != null ? data[\"asset\"][\"collectible\"][\"make\"] : \"\",\n        purchasePrice: data[\"asset\"][\"collectible\"] != null ? data[\"asset\"][\"collectible\"][\"purchasePrice\"] : \"\",\n        appraised: data[\"asset\"][\"collectible\"] != null ? data[\"asset\"][\"collectible\"][\"appraised\"] ? \"Yes\" : \"No\" : \"\",\n        insured: data[\"asset\"][\"collectible\"] != null ? data[\"asset\"][\"collectible\"][\"insured\"] ? \"Yes\" : \"No\" : \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"LiveStockSubForm\",\n      data: LiveStockSubForm.FnCreateFormData(data[\"asset\"][\"livestocks\"]),\n      visible: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"VCSubForm\",\n      data: VCSubForm.FnCreateFormData({\n        nickname: data[\"asset\"][\"privatePlacementAndVc\"] != null ? data[\"asset\"][\"privatePlacementAndVc\"][\"nickname\"] : \"\",\n        additionalCommittments: data[\"asset\"][\"privatePlacementAndVc\"] != null ? data[\"asset\"][\"privatePlacementAndVc\"][\"additionalFutureCommittments\"] ? \"Yes\" : \"No\" : \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"CommittmentSubForm\",\n      data: CommittmentSubForm.FnCreateFormData({\n        committmentDate: data[\"asset\"][\"privatePlacementAndVc\"] != null && data[\"asset\"][\"privatePlacementAndVc\"][\"whenFutureCommittmentDate\"] != null ? data[\"asset\"][\"privatePlacementAndVc\"][\"whenFutureCommittmentDate\"] : \"\",\n        committmentAmount: data[\"asset\"][\"privatePlacementAndVc\"] != null ? data[\"asset\"][\"privatePlacementAndVc\"][\"futureCommittmentDollarAmount\"] : \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"PrimaryResidenceSubForm\",\n      data: PrimaryResidenceSubForm.FnCreateFormData({\n        value: \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"PropertySubForm\",\n      data: PropertySubForm.FnCreateFormData({\n        value: data[\"asset\"][\"realState\"] != null ? data[\"asset\"][\"realState\"][\"typeOfProperty\"] : \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"InvestmentPropertySubForm\",\n      data: InvestmentPropertySubForm.FnCreateFormData({\n        purchasePrice: data[\"asset\"][\"realState\"] != null ? data[\"asset\"][\"realState\"][\"purchasePriceOfProperty\"] : \"\",\n        monthlyRent: data[\"asset\"][\"realState\"] != null ? data[\"asset\"][\"realState\"][\"monthlyLease\"] : \"\",\n        totalMonthlyExpenses: data[\"asset\"][\"realState\"] != null ? data[\"asset\"][\"realState\"][\"totalMonthlyExpenses\"] : \"\",\n        downPayment: data[\"asset\"][\"realState\"] != null ? data[\"asset\"][\"realState\"][\"downpayment\"] : \"\",\n        investmentPropertyAddress: data[\"asset\"][\"realState\"] != null ? data[\"asset\"][\"realState\"][\"investmentPropertyAddress\"] : \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"InvestmentPropertyExpensesSubForm\",\n      data: InvestmentPropertyExpensesSubForm.FnCreateFormData(data[\"asset\"][\"investmentPropertyExpenses\"] != null ? data[\"asset\"][\"investmentPropertyExpenses\"] : []),\n      visible: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"StockSubForm\",\n      data: StockSubForm.FnCreateFormData(data[\"asset\"][\"stockIndividualSubforms\"]),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"UserPortfolioSubForm\",\n      data: UserPortfolioSubForm.FnCreateFormData({\n        spPortfolio: data[\"asset\"][\"userDefinedPortfolio\"] != null ? data[\"asset\"][\"userDefinedPortfolio\"][\"portfolioPercentageOfSAndP500\"] : \"\",\n        realEstatePortfolio: data[\"asset\"][\"userDefinedPortfolio\"] != null ? data[\"asset\"][\"userDefinedPortfolio\"][\"portfolioPercentageOfRealEstate\"] : \"\",\n        bondsPortfolio: data[\"asset\"][\"userDefinedPortfolio\"] != null ? data[\"asset\"][\"userDefinedPortfolio\"][\"portfolioPercentageOfBonds\"] : \"\",\n        cashPortfolio: data[\"asset\"][\"userDefinedPortfolio\"] != null ? data[\"asset\"][\"userDefinedPortfolio\"][\"portfolioPercentageOfCash\"] : \"\",\n        goldPortfolio: data[\"asset\"][\"userDefinedPortfolio\"] != null ? data[\"asset\"][\"userDefinedPortfolio\"][\"portfolioPercentageOfGold\"] : \"\",\n        totalPercentage: data[\"asset\"][\"userDefinedPortfolio\"] != null ? data[\"asset\"][\"userDefinedPortfolio\"][\"totalPercentage\"] : \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"AssetPerformanceSubForm\",\n      data: AssetPerformanceSubForm.FnCreateFormData({\n        monetaryValue: data[\"asset\"][\"assetPerformance\"] != null ? data[\"asset\"][\"assetPerformance\"][\"monetaryValue\"] : \"\",\n        returnRate: data[\"asset\"][\"assetPerformance\"] != null ? data[\"asset\"][\"assetPerformance\"][\"rateOfReturn\"] : \"\",\n        dateValue: data[\"asset\"][\"assetPerformance\"] != null ? data[\"asset\"][\"assetPerformance\"][\"valueAsOfDate\"] : \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAssetPerformanceSubForm\"\n    });\n    formData.push({\n      id: \"TaxLiquiditySubForm\",\n      data: TaxLiquiditySubForm.FnCreateFormData({\n        basisCost: data[\"asset\"][\"taxAndLiquidity\"] != null ? data[\"asset\"][\"taxAndLiquidity\"][\"costBasis\"] : \"\",\n        costBasisDate: data[\"asset\"][\"taxAndLiquidity\"] != null ? data[\"asset\"][\"taxAndLiquidity\"][\"costBasisDate\"] : \"\",\n        estimatedGains: data[\"asset\"][\"taxAndLiquidity\"] != null ? data[\"asset\"][\"taxAndLiquidity\"][\"estimatedUnrealizedGains\"] : \"\",\n        taxability: data[\"asset\"][\"taxAndLiquidity\"] != null ? data[\"asset\"][\"taxAndLiquidity\"][\"taxibility\"] ? \"Taxable\" : \"Tax Deferred\" : \"\",\n        assetLiquid: data[\"asset\"][\"taxAndLiquidity\"] != null ? data[\"asset\"][\"taxAndLiquidity\"][\"thisAssetIsLiquid\"] ? \"Yes\" : \"No\" : \"\",\n        partialSaleAbility: data[\"asset\"][\"taxAndLiquidity\"] != null ? data[\"asset\"][\"taxAndLiquidity\"][\"abilityForPartialSale\"] ? \"Yes\" : \"No\" : \"\",\n        distributionTaxabilityValue: data[\"asset\"][\"taxAndLiquidity\"] != null ? data[\"asset\"][\"taxAndLiquidity\"][\"taxabilityOfDistribution\"] : \"\",\n        withdrawalPenalty: data[\"asset\"][\"taxAndLiquidity\"] != null ? data[\"asset\"][\"taxAndLiquidity\"][\"earlyWithdrawlPenalty\"] : \"\",\n        distributionTaxability: data[\"asset\"][\"taxAndLiquidity\"] != null ? data[\"asset\"][\"taxAndLiquidity\"][\"taxabilityOnDistribution\"] : \"\",\n        agePenalty: data[\"asset\"][\"taxAndLiquidity\"] != null ? data[\"asset\"][\"taxAndLiquidity\"][\"penaltyBasedOnAgeInClientsAndPlans\"] : \"\"\n      }),\n      visibile: true,\n      stepId: \"StepTaxLiquiditySubForm\"\n    });\n  } else {\n    formData.push({\n      id: \"AssetAllocationSubForm\",\n      data: AssetAllocationSubForm.FnCreateFormData({\n        value: \"\"\n      }),\n      visible: true,\n      stepId: \"StepAssetAllocationSubForm\"\n    });\n    formData.push({\n      id: \"AssetInformationSubForm\",\n      data: AssetInformationSubForm.FnCreateFormData({\n        name: \"\",\n        accountType: \"\",\n        owner: \"\",\n        heldWhere: \"\",\n        accountDigits: \"\",\n        assetStatus: \"\"\n      }),\n      visible: true,\n      stepId: \"StepAssetInformationSubForm\"\n    });\n    formData.push({\n      id: \"QuestionRMDAdditionalSubForm\",\n      data: QuestionRMDAdditionalSubForm.FnCreateFormData({\n        value: \"\"\n      }),\n      visible: true,\n      stepId: \"StepAccountTypeQuestions\"\n    });\n    formData.push({\n      id: \"QuestionShowFieldsAirplane\",\n      data: QuestionShowFieldsAirplane.FnCreateFormData({\n        value: \"\"\n      }),\n      visible: true,\n      stepId: \"StepAccountTypeQuestions\"\n    });\n    formData.push({\n      id: \"InheritedIRASubForm\",\n      data: InheritedIRASubForm.FnCreateFormData({\n        birthDate: \"\",\n        deathDate: \"\",\n        relationship: \"\"\n      }),\n      visible: true,\n      stepId: \"StepAccountTypeQuestions\"\n    });\n    formData.push({\n      id: \"QuestionContributionDistributionSubForm\",\n      data: QuestionContributionDistributionSubForm.FnCreateFormData({\n        value: \"\"\n      }),\n      visible: true,\n      stepId: \"StepQuestionContributionDistributionSubForm\"\n    });\n    formData.push({\n      id: \"ContributionSubForm\",\n      data: ContributionSubForm.FnCreateFormData([]),\n      visible: true,\n      stepId: \"StepQuestionContributionDistributionSubForm\"\n    });\n    formData.push({\n      id: \"SellingAssetCostsSubForm\",\n      data: SellingAssetCostsSubForm.FnCreateFormData({\n        saleDate: \"\",\n        totalLiabilities: \"\",\n        totalNetSoldValue: \"\",\n        commissionSale: \"\",\n        rateReturnValue: \"\",\n        otherTransactionCosts: \"\",\n        actualValue: \"\",\n        taxes: \"\"\n      }),\n      visibile: true,\n      stepId: \"StepSellingAssetCostsInformation\"\n    });\n    formData.push({\n      id: \"CollectiblesSubForm\",\n      data: CollectiblesSubForm.FnCreateFormData({\n        year: \"\",\n        description: \"\",\n        // monthlyBudget: '',\n        collectibleType: \"\",\n        model: \"\",\n        make: \"\",\n        purchasePrice: \"\",\n        appraised: \"\",\n        insured: \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"LiveStockSubForm\",\n      data: LiveStockSubForm.FnCreateFormData([]),\n      visible: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"VCSubForm\",\n      data: VCSubForm.FnCreateFormData({\n        nickname: \"\",\n        additionalCommittments: \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"CommittmentSubForm\",\n      data: CommittmentSubForm.FnCreateFormData({\n        committmentDate: \"\",\n        committmentAmount: \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"PrimaryResidenceSubForm\",\n      data: PrimaryResidenceSubForm.FnCreateFormData({\n        value: \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"PropertySubForm\",\n      data: PropertySubForm.FnCreateFormData({\n        value: \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"InvestmentPropertySubForm\",\n      data: InvestmentPropertySubForm.FnCreateFormData({\n        purchasePrice: \"\",\n        monthlyRent: \"\",\n        totalMonthlyExpenses: \"\",\n        downPayment: \"\",\n        investmentPropertyAddress: \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"InvestmentPropertyExpensesSubForm\",\n      data: InvestmentPropertyExpensesSubForm.FnCreateFormData([]),\n      visible: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"StockSubForm\",\n      data: StockSubForm.FnCreateFormData([]),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"UserPortfolioSubForm\",\n      data: UserPortfolioSubForm.FnCreateFormData({\n        spPortfolio: \"\",\n        realEstatePortfolio: \"\",\n        bondsPortfolio: \"\",\n        cashPortfolio: \"\",\n        goldPortfolio: \"\",\n        totalPercentage: \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"AssetPerformanceSubForm\",\n      data: AssetPerformanceSubForm.FnCreateFormData({\n        monetaryValue: \"\",\n        returnRate: \"\",\n        dateValue: \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAssetPerformanceSubForm\"\n    });\n    formData.push({\n      id: \"TaxLiquiditySubForm\",\n      data: TaxLiquiditySubForm.FnCreateFormData({\n        basisCost: \"\",\n        costBasisDate: \"\",\n        estimatedGains: \"\",\n        taxability: \"\",\n        assetLiquid: \"\",\n        partialSaleAbility: \"\",\n        distributionTaxabilityValue: \"\",\n        withdrawalPenalty: \"\",\n        distributionTaxability: \"\",\n        agePenalty: \"\"\n      }),\n      visibile: true,\n      stepId: \"StepTaxLiquiditySubForm\"\n    });\n  }\n  return formData;\n}\nfunction LoadDBDataHook(_x) {\n  return _LoadDBDataHook.apply(this, arguments);\n}\nfunction _LoadDBDataHook() {\n  _LoadDBDataHook = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(props) {\n    var UpdatedData;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log(\"api update in assets\", props);\n          _context2.prev = 1;\n          if (!(props.dbID != null && props.dbID != \"\")) {\n            _context2.next = 8;\n            break;\n          }\n          _context2.next = 5;\n          return MODULE_API.fetchDetails(\"\".concat(props.dbID));\n        case 5:\n          UpdatedData = _context2.sent;\n          console.log(\"UpdatedData\", UpdatedData);\n          if (UpdatedData && UpdatedData.data) {\n            console.log(\"call..\");\n            props.cbLoadDBData(initialFormData(UpdatedData.data));\n          }\n        case 8:\n          _context2.next = 13;\n          break;\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log(\"e\", _context2.t0);\n        case 13:\n          return _context2.abrupt(\"return\", /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 731,\n              columnNumber: 10\n            }\n          }));\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, this, [[1, 10]]);\n  }));\n  return _LoadDBDataHook.apply(this, arguments);\n}\nvar AssetsNew = /*#__PURE__*/function (_Component) {\n  _inherits(AssetsNew, _Component);\n  function AssetsNew(props) {\n    var _this;\n    _classCallCheck(this, AssetsNew);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AssetsNew).call(this, props));\n    _this.showAssetsData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(props) {\n        var UpdatedData;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"api update in assets\", _this.state.dbID);\n              _context.prev = 1;\n              if (!(_this.state.dbID != null && _this.state.dbID != \"\")) {\n                _context.next = 8;\n                break;\n              }\n              _context.next = 5;\n              return MODULE_API.fetchDetails(\"\".concat(_this.state.dbID));\n            case 5:\n              UpdatedData = _context.sent;\n              console.log(\"UpdatedData\", UpdatedData);\n              if (UpdatedData && UpdatedData.data) {\n                console.log(\"call..\", UpdatedData);\n                _this.loadDBData(initialFormData(UpdatedData.data));\n                // props.cbLoadDBData(initialFormData(UpdatedData.data));\n              }\n            case 8:\n              _context.next = 13;\n              break;\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(\"e\", _context.t0);\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 10]]);\n      }));\n      return function (_x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    _this.toggleRightSide = function (e) {\n      e.preventDefault();\n      _this.setState({\n        isRightSideOpen: !_this.state.isRightSideOpen\n      });\n    };\n    var dbID = null;\n    var dbLoaded = true;\n    var assetsID = _this.props.match.params.assetsID;\n    if (assetsID) {\n      dbID = assetsID;\n      dbLoaded = false;\n    }\n    var formData = initialFormData({});\n    _this.state = {\n      dataID: dbID,\n      curSubFormID: \"AssetAllocationSubForm\",\n      curSubForm: AssetAllocationSubForm,\n      formVisible: false,\n      subFormData: {},\n      formData1: [\n        // {\n        //     id: 'assetsInformation',\n        //     data: {\n        //         title: '',\n        //         fields: [\n        //             {\n        //                 id: '' ,\n        //                 title: '',\n        //                 value: ''\n        //              }\n        //         ]\n        //     }\n        // }\n      ],\n      formData: formData,\n      isRightSideOpen: true,\n      formSteps: [{\n        id: \"StepAssetAllocationSubForm\",\n        icon: \"icon_ex.png\",\n        title: \"Asset Allocation\"\n      }, {\n        id: \"StepAssetInformationSubForm\",\n        icon: \"icon_ex.png\",\n        title: \"Asset Information\"\n      }, {\n        id: \"StepAccountTypeQuestions\",\n        icon: \"icon_ex.png\",\n        title: \"Qualified Account Type Questions\"\n      }, {\n        id: \"StepQuestionContributionDistributionSubForm\",\n        icon: \"icon_ex.png\",\n        title: \"Contributions or Distributions\"\n      }, {\n        id: \"StepAdditionalAssetInformation\",\n        icon: \"icon_ex.png\",\n        title: \"Additional Asset Information\"\n      }, {\n        id: \"StepSellingAssetCostsInformation\",\n        icon: \"icon_ex.png\",\n        title: \"Selling Asset Costs\"\n      }, {\n        id: \"StepAssetPerformanceSubForm\",\n        icon: \"icon_ex.png\",\n        title: \"Asset Performance\"\n      }, {\n        id: \"StepTaxLiquiditySubForm\",\n        icon: \"icon_ex.png\",\n        title: \"Tax and Liquidity\"\n      }],\n      dbLoaded: dbLoaded,\n      dbID: dbID,\n      formStep2FormMap: {\n        // \"stepid\": ['form id', 'formid', 'formid']\n        StepAssetAllocationSubForm: [\"AssetAllocationSubForm\"],\n        StepAssetInformationSubForm: [\"AssetInformationSubForm\"],\n        StepAccountTypeQuestions: [\"QuestionRMDAdditionalSubForm\", \"InheritedIRASubForm\", \"QuestionShowFieldsAirplane\"],\n        StepQuestionContributionDistributionSubForm: [\"QuestionContributionDistributionSubForm\", \"ContributionSubForm\"],\n        StepSellingAssetCostsInformation: [\"SellingAssetCostsSubForm\", \"QuestionShowFieldsAirplane\"],\n        StepAdditionalAssetInformation: [\"CollectiblesSubForm\", \"LiveStockSubForm\", \"VCSubForm\", \"CommittmentSubForm\", \"PrimaryResidenceSubForm\", \"PropertySubForm\", \"InvestmentPropertySubForm\", \"InvestmentPropertyExpensesSubForm\", \"StockSubForm\", \"UserPortfolioSubForm\"],\n        StepAssetPerformanceSubForm: [\"AssetPerformanceSubForm\"],\n        StepTaxLiquiditySubForm: [\"TaxLiquiditySubForm\"]\n      },\n      isEndForm: false\n    };\n    _this.goSubForm = _this.goSubForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateSubForm = _this.updateSubForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSubFormData = _this.getSubFormData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSubFormField = _this.getSubFormField.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createQLVariable = _this.createQLVariable.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSubFormFieldValue = _this.getSubFormFieldValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleRightSide = _this.toggleRightSide.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadDBData = _this.loadDBData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getRightSideFormData = _this.getRightSideFormData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getTopNav = _this.getTopNav.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.goNext = _this.goNext.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.goPrev = _this.goPrev.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  _createClass(AssetsNew, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.goSubForm(this.state.formSteps[0][\"id\"]);\n      this.showAssetsData();\n      // this.goSubForm(\"TaxLiquiditySubForm\");\n    }\n  }, {\n    key: \"getSubFormField\",\n    value: function getSubFormField(formID, fieldID) {\n      var formData = this.state.formData;\n      for (var index = 0; index < formData.length; index++) {\n        if (formData[index][\"id\"] == formID) {\n          var data = formData[index][\"data\"];\n          var fields = data[\"fields\"];\n          for (var findex = 0; findex < fields.length; findex++) {\n            if (fields[findex][\"id\"] == fieldID) {\n              return fields[findex];\n            }\n          }\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"getSubFormFieldValue\",\n    value: function getSubFormFieldValue(formID, fieldID) {\n      var field = this.getSubFormField(formID, fieldID);\n      if (field == null) {\n        return \"\";\n      } else {\n        return field.value;\n      }\n    }\n  }, {\n    key: \"createQLVariable\",\n    value: function createQLVariable(subFormID, subFormData) {\n      var varQL = null;\n      switch (subFormID) {\n        case \"AssetInformationSubForm\":\n          varQL = {\n            asset: {\n              name: this.getSubFormFieldValue(subFormID, \"name\"),\n              accountType: this.getSubFormFieldValue(subFormID, \"accountType\"),\n              owner: this.getSubFormFieldValue(subFormID, \"owner\"),\n              heldWhere: this.getSubFormFieldValue(subFormID, \"heldWhere\"),\n              last4DigitsOfAccount: this.getSubFormFieldValue(subFormID, \"accountDigits\"),\n              status: this.getSubFormFieldValue(subFormID, \"assetStatus\")\n            }\n          };\n          break;\n        case \"QuestionContributionDistributionSubForm\":\n          varQL = {\n            inheritedInformation: {\n              regularContributionsOrDistributions: parseInt(this.getSubFormFieldValue(subFormID, \"regularContribution\")) == \"Yes\" ? true : false\n            }\n          };\n          break;\n        case \"QuestionRMDAdditionalSubForm\":\n          varQL = {\n            additionalQuestion: {\n              isSpouseSoleBeneficiary: this.getSubFormFieldValue(subFormID, \"isSpouseSole\") == \"Yes\" ? true : false\n            }\n          };\n          break;\n        case \"QuestionShowFieldsAirplane\":\n          varQL = {\n            additionalQuestion: {\n              isShowFields: this.getSubFormFieldValue(subFormID, \"isShowfield\") == \"Yes\" ? true : false\n            }\n          };\n          break;\n        case \"InheritedIRASubForm\":\n          varQL = {\n            inheritedInformation: {\n              deceasedIraOwnersBirthdate: this.getSubFormFieldValue(subFormID, \"birthDate\"),\n              deceasedIraOwnersDeathDate: this.getSubFormFieldValue(subFormID, \"deathDate\"),\n              ownersRelationshipToDeceased: this.getSubFormFieldValue(subFormID, \"relationship\")\n            }\n          };\n          break;\n        case \"ContributionSubForm\":\n          varQL = {\n            contributionOrDistributions: subFormData[\"rows\"]\n          };\n          break;\n        case \"AssetAllocationSubForm\":\n          varQL = {\n            assetAllocation: {\n              assetAllocation: this.getSubFormFieldValue(subFormID, \"assetsAllocation\")\n            }\n          };\n          break;\n        case \"SellingAssetCostsSubForm\":\n          varQL = {\n            sellingAssetCost: {\n              dateOfSale: this.getSubFormFieldValue(subFormID, \"saleDate\"),\n              totalLiabilities: this.getSubFormFieldValue(subFormID, \"totalLiabilities\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"totalLiabilities\")) : 0,\n              totalNetSoldValue: this.getSubFormFieldValue(subFormID, \"totalNetSoldValue\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"totalNetSoldValue\")) : 0,\n              commisionOnSale: this.getSubFormFieldValue(subFormID, \"commissionSale\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"commissionSale\")) : 0,\n              valueBasedOnRateOfReturn: this.getSubFormFieldValue(subFormID, \"rateReturnValue\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"rateReturnValue\")) : 0,\n              otherTransactionCosts: this.getSubFormFieldValue(subFormID, \"otherTransactionCosts\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"otherTransactionCosts\")) : 0,\n              actualValueAtSaleDate: this.getSubFormFieldValue(subFormID, \"actualValue\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"actualValue\")) : 0,\n              taxes: this.getSubFormFieldValue(subFormID, \"taxes\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"taxes\")) : 0\n            }\n          };\n          break;\n        case \"AssetPerformanceSubForm\":\n          varQL = {\n            assetPerformance: {\n              monetaryValue: parseFloat(this.getSubFormFieldValue(subFormID, \"monetaryValue\")),\n              rateOfReturn: this.getSubFormFieldValue(subFormID, \"returnRate\"),\n              valueAsOfDate: this.getSubFormFieldValue(subFormID, \"dateValue\")\n            }\n          };\n          break;\n        case \"CollectiblesSubForm\":\n          varQL = {\n            collectible: {\n              year: this.getSubFormFieldValue(subFormID, \"year\"),\n              describeCollectible: this.getSubFormFieldValue(subFormID, \"description\"),\n              // \"dollarAppliedToMonthlyBudget\": this.getSubFormFieldValue(subFormID, 'monthlyBudget') != '' ? parseInt(this.getSubFormFieldValue(subFormID, 'monthlyBudget')) : 0,\n              typeOfCollectible: this.getSubFormFieldValue(subFormID, \"collectibleType\"),\n              model: this.getSubFormFieldValue(subFormID, \"model\"),\n              make: this.getSubFormFieldValue(subFormID, \"make\"),\n              purchasePrice: this.getSubFormFieldValue(subFormID, \"purchasePrice\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"purchasePrice\")) : 0,\n              appraised: this.getSubFormFieldValue(subFormID, \"appraised\") == \"Yes\" ? true : false,\n              insured: this.getSubFormFieldValue(subFormID, \"insured\") == \"Yes\" ? true : false\n            }\n          };\n          break;\n        case \"LiveStockSubForm\":\n          varQL = {\n            livestocks: subFormData[\"rows\"]\n          };\n          break;\n        case \"VCSubForm\":\n          varQL = {\n            privatePlacementAndVc: {\n              nickname: this.getSubFormFieldValue(subFormID, \"nickname\"),\n              additionalFutureCommittments: this.getSubFormFieldValue(subFormID, \"additionalCommittments\") == \"Yes\" ? true : false\n            }\n          };\n          break;\n        case \"CommittmentSubForm\":\n          varQL = {\n            privatePlacementAndVc: {\n              whenFutureCommittmentDate: this.getSubFormFieldValue(subFormID, \"committmentDate\"),\n              futureCommittmentDollarAmount: this.getSubFormFieldValue(subFormID, \"committmentAmount\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"committmentAmount\")) : 0\n            }\n          };\n          break;\n        case \"PrimaryResidenceSubForm\":\n          break;\n        case \"PropertySubForm\":\n          varQL = {\n            realState: {\n              typeOfProperty: this.getSubFormFieldValue(subFormID, \"propertyType\")\n            }\n          };\n          break;\n        case \"InvestmentPropertySubForm\":\n          varQL = {\n            realState: {\n              purchasePriceOfProperty: this.getSubFormFieldValue(subFormID, \"purchasePrice\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"purchasePrice\")) : 0,\n              monthlyLease: this.getSubFormFieldValue(subFormID, \"monthlyRent\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"monthlyRent\")) : 0,\n              totalMonthlyExpenses: this.getSubFormFieldValue(subFormID, \"totalMonthlyExpenses\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"totalMonthlyExpenses\")) : 0,\n              downpayment: this.getSubFormFieldValue(subFormID, \"downPayment\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"downPayment\")) : 0,\n              investmentPropertyAddress: this.getSubFormFieldValue(subFormID, \"investmentPropertyAddress\")\n            }\n          };\n          break;\n        case \"InvestmentPropertyExpensesSubForm\":\n          varQL = {\n            investmentPropertyExpenses: subFormData[\"rows\"]\n          };\n          break;\n        case \"StockSubForm\":\n          varQL = {\n            stockIndividualSubforms: subFormData[\"rows\"]\n          };\n          break;\n        case \"UserPortfolioSubForm\":\n          varQL = {\n            userDefinedPortfolio: {\n              portfolioPercentageOfSAndP500: this.getSubFormFieldValue(subFormID, \"spPortfolio\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"spPortfolio\")) : 0,\n              portfolioPercentageOfRealEstate: this.getSubFormFieldValue(subFormID, \"realEstatePortfolio\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"realEstatePortfolio\")) : 0,\n              portfolioPercentageOfBonds: this.getSubFormFieldValue(subFormID, \"bondsPortfolio\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"bondsPortfolio\")) : 0,\n              portfolioPercentageOfCash: this.getSubFormFieldValue(subFormID, \"cashPortfolio\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"cashPortfolio\")) : 0,\n              portfolioPercentageOfGold: this.getSubFormFieldValue(subFormID, \"goldPortfolio\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"goldPortfolio\")) : 0,\n              totalPercentage: this.getSubFormFieldValue(subFormID, \"totalPercentage\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"totalPercentage\")) : 0\n            }\n          };\n          break;\n        case \"TaxLiquiditySubForm\":\n          varQL = {\n            taxAndLiquidity: {\n              costBasis: this.getSubFormFieldValue(subFormID, \"basisCost\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"basisCost\")) : 0,\n              costBasisDate: this.getSubFormFieldValue(subFormID, \"costBasisDate\"),\n              taxibility: this.getSubFormFieldValue(subFormID, \"taxability\") == \"Taxable\" ? true : false,\n              // \"rmdEligible\":\n              thisAssetIsLiquid: this.getSubFormFieldValue(subFormID, \"assetLiquid\") == \"Yes\" ? true : false,\n              abilityForPartialSale: this.getSubFormFieldValue(subFormID, \"partialSaleAbility\") == \"Yes\" ? true : false,\n              taxabilityOnDistribution: this.getSubFormFieldValue(subFormID, \"distributionTaxability\")\n            }\n          };\n          break;\n        case \"EndSubForm\":\n      }\n      return varQL;\n    }\n  }, {\n    key: \"updateSubForm\",\n    value: function updateSubForm(subFormID, subFormData) {\n      var visible = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var bEnd = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      console.log(\"subFormID\", subFormID);\n      var formData = this.state.formData;\n      var bFound = false;\n      for (var findex = 0; findex < formData.length; findex++) {\n        if (formData[findex][\"id\"] == subFormID) {\n          formData[findex][\"data\"] = subFormData;\n          bFound = true;\n        }\n      }\n      if (!bFound) {\n        formData.push({\n          id: subFormID,\n          data: subFormData,\n          visible: visible\n        });\n      }\n      console.log(\"updateSubForm>>>\", formData);\n      var varQL = this.createQLVariable(subFormID, subFormData);\n      console.log(\"varQL:\", varQL, \", dataID:\", this.state.dataID);\n      // varQL = null;\n      var instance = this;\n      if (varQL != null) {\n        if (this.state.dataID == null) {\n          fnMutationAssetsAdd({\n            variables: {\n              data: varQL\n            }\n          }).then(function (response) {\n            instance.setState({\n              dataID: response[\"data\"][\"createAsset\"][\"id\"]\n            });\n          });\n        } else {\n          fnMutationAssetsUpdate({\n            variables: {\n              id: this.state.dataID,\n              data: varQL\n            }\n          }).then(function (response) {\n            if (bEnd) {\n              alert(\"Updated Successfully\");\n              instance.props.history.push(\"/assets\");\n            }\n          });\n        }\n      }\n      this.setState({\n        formData: formData\n      });\n    }\n  }, {\n    key: \"getSubFormData\",\n    value: function getSubFormData(subFormID) {\n      var fromState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var pformData = arguments.length > 2 ? arguments[2] : undefined;\n      var formData;\n      if (fromState) {\n        formData = this.state.formData;\n      } else {\n        formData = pformData;\n      }\n      for (var findex = 0; findex < formData.length; findex++) {\n        if (formData[findex][\"id\"] == subFormID) {\n          return formData[findex][\"data\"];\n        }\n      }\n      return {};\n    }\n  }, {\n    key: \"goSubForm\",\n    value: function goSubForm(subFormID) {\n      var _this2 = this;\n      this.setState({\n        formVisible: false\n      });\n      if (subFormID === 'StepAssetAllocationSubForm') {\n        var fd = initialFormData({});\n        this.setState({\n          formData: fd,\n          isEndForm: false\n        });\n      }\n      var nextSubForm = AssetInformationSubForm;\n      switch (subFormID) {\n        case \"AssetInformationSubForm\":\n          nextSubForm = AssetInformationSubForm;\n          this.setState({\n            isEndForm: false\n          });\n          break;\n        case \"StepAssetInformationSubForm\":\n          nextSubForm = AssetInformationSubForm;\n          subFormID = \"AssetInformationSubForm\";\n          break;\n        case \"QuestionContributionDistributionSubForm\":\n          nextSubForm = QuestionContributionDistributionSubForm;\n          break;\n        case \"StepQuestionContributionDistributionSubForm\":\n          nextSubForm = QuestionContributionDistributionSubForm;\n          subFormID = \"QuestionContributionDistributionSubForm\";\n          break;\n        case \"QuestionRMDAdditionalSubForm\":\n          nextSubForm = QuestionRMDAdditionalSubForm;\n          break;\n        case \"QuestionShowFieldsAirplane\":\n          nextSubForm = QuestionShowFieldsAirplane;\n          break;\n        case \"InheritedIRASubForm\":\n          nextSubForm = InheritedIRASubForm;\n          break;\n        case \"ContributionSubForm\":\n          nextSubForm = ContributionSubForm;\n          break;\n        case \"AssetAllocationSubForm\":\n          nextSubForm = AssetAllocationSubForm;\n          break;\n        case \"StepAssetAllocationSubForm\":\n          nextSubForm = AssetAllocationSubForm;\n          subFormID = \"AssetAllocationSubForm\";\n          break;\n        case \"SellingAssetCostsSubForm\":\n          nextSubForm = SellingAssetCostsSubForm;\n          break;\n        case \"AssetPerformanceSubForm\":\n          nextSubForm = AssetPerformanceSubForm;\n          break;\n        case \"StepAssetPerformanceSubForm\":\n          nextSubForm = AssetPerformanceSubForm;\n          subFormID = \"AssetPerformanceSubForm\";\n          break;\n        case \"CollectiblesSubForm\":\n          nextSubForm = CollectiblesSubForm;\n          break;\n        case \"LiveStockSubForm\":\n          nextSubForm = LiveStockSubForm;\n          break;\n        case \"VCSubForm\":\n          nextSubForm = VCSubForm;\n          break;\n        case \"CommittmentSubForm\":\n          nextSubForm = CommittmentSubForm;\n          break;\n        case \"PrimaryResidenceSubForm\":\n          nextSubForm = PrimaryResidenceSubForm;\n          break;\n        case \"PropertySubForm\":\n          nextSubForm = PropertySubForm;\n          break;\n        case \"InvestmentPropertySubForm\":\n          nextSubForm = InvestmentPropertySubForm;\n          break;\n        case \"InvestmentPropertyExpensesSubForm\":\n          nextSubForm = InvestmentPropertyExpensesSubForm;\n          break;\n        case \"StockSubForm\":\n          nextSubForm = StockSubForm;\n          break;\n        case \"UserPortfolioSubForm\":\n          nextSubForm = UserPortfolioSubForm;\n          break;\n        case \"TaxLiquiditySubForm\":\n          nextSubForm = TaxLiquiditySubForm;\n          break;\n        case \"StepTaxLiquiditySubForm\":\n          nextSubForm = TaxLiquiditySubForm;\n          subFormID = \"TaxLiquiditySubForm\";\n          break;\n        case \"EndSubForm\":\n          nextSubForm = EndSubForm;\n          this.setState({\n            isEndForm: true\n          });\n          break;\n        case \"StepAccountTypeQuestions\":\n          switch (this.getSubFormFieldValue(\"AssetInformationSubForm\", \"accountType\")) {\n            case \"529\":\n            case \"Custodial\":\n            case \"Coverdell Education\":\n            case \"Individual\":\n            case \"Health Savings Account\":\n            case \"Joint - Tenants In Common\":\n            case \"Joint\":\n            case \"Roth\":\n            case \"Trust\":\n              nextSubForm = QuestionContributionDistributionSubForm;\n              subFormID = \"QuestionContributionDistributionSubForm\";\n              break;\n            default:\n              nextSubForm = QuestionRMDAdditionalSubForm;\n              subFormID = \"QuestionRMDAdditionalSubForm\";\n          }\n          break;\n        case \"StepAdditionalAssetInformation\":\n          switch (this.getSubFormFieldValue(\"AssetAllocationSubForm\", \"assetsAllocation\")) {\n            case \"Airplane\":\n            case \"Auto - non-collectible\":\n            case \"Boat\":\n            case \"General Household\":\n            case \"Motorcycles\":\n              nextSubForm = QuestionShowFieldsAirplane;\n              subFormID = \"QuestionShowFieldsAirplane\";\n              break;\n            case \"Indexes, ETF's and Mutual Funds\":\n            case \"Bonds - Int  Long Term\":\n            case \"Business Interest\":\n            case \"Cash/CD's T-Bills\":\n            case \"Club Membership\":\n              nextSubForm = SellingAssetCostsSubForm;\n              subFormID = \"SellingAssetCostsSubForm\";\n              break;\n            case \"Collectibles\":\n              nextSubForm = CollectiblesSubForm;\n              subFormID = \"CollectiblesSubForm\";\n              break;\n            case \"Livestock\":\n              nextSubForm = LiveStockSubForm;\n              subFormID = \"LiveStockSubForm\";\n              break;\n            case \"Private Placement & VC\":\n              nextSubForm = VCSubForm;\n              subFormID = \"VCSubForm\";\n              break;\n            case \"Real Estate\":\n              nextSubForm = PrimaryResidenceSubForm;\n              subFormID = \"PrimaryResidenceSubForm\";\n              break;\n            case \"Stocks - Individual\":\n              nextSubForm = StockSubForm;\n              subFormID = \"StockSubForm\";\n              break;\n            case \"User Defined Portfolio Allocation\":\n              nextSubForm = UserPortfolioSubForm;\n              subFormID = \"UserPortfolioSubForm\";\n              break;\n            default:\n              nextSubForm = AssetAllocationSubForm;\n              subFormID = \"AssetAllocationSubForm\";\n          }\n          break;\n        case \"StepSellingAssetCostsInformation\":\n          switch (this.getSubFormFieldValue(\"AssetAllocationSubForm\", \"assetsAllocation\")) {\n            case \"Airplane\":\n            case \"Auto - non-collectible\":\n            case \"Boat\":\n            case \"Motorcycles\":\n              nextSubForm = QuestionShowFieldsAirplane;\n              subFormID = \"QuestionShowFieldsAirplane\";\n              break;\n            // case \"Indexes, ETF's and Mutual Funds\":\n            // case \"Bonds - Int \\ Long Term\":\n            // case \"Business Interest\":\n            // case \"Cash/CD's T-Bills\":\n            // case \"Club Membership\":\n            //     nextSubForm = SellingAssetCostsSubForm;\n            //     subFormID = \"SellingAssetCostsSubForm\";\n            //     break;\n            // case \"Collectibles\":\n            //     nextSubForm = CollectiblesSubForm;\n            //     subFormID = \"CollectiblesSubForm\";\n            //     break;\n            // case \"Livestock\":\n            //     nextSubForm = LiveStockSubForm;\n            //     subFormID = \"LiveStockSubForm\";\n            //     break;\n            // case \"Private Placement & VC\":\n            //     nextSubForm = VCSubForm;\n            //     subFormID = \"VCSubForm\";\n            //     break;\n            // case \"Real Estate\":\n            //     nextSubForm = PrimaryResidenceSubForm;\n            //     subFormID = \"PrimaryResidenceSubForm\";\n            //     break;\n            // case \"Stocks - Individual\":\n            //     nextSubForm = StockSubForm;\n            //     subFormID = \"StockSubForm\";\n            //     break;\n            // case \"User Defined Portfolio Allocation\":\n            //     nextSubForm = UserPortfolioSubForm;\n            //     subFormID = \"UserPortfolioSubForm\";\n            //     break;\n            default:\n              nextSubForm = AssetAllocationSubForm;\n              subFormID = \"AssetAllocationSubForm\";\n          }\n          break;\n      }\n      var subFormData = this.getSubFormData(subFormID);\n      setTimeout(function () {\n        _this2.setState({\n          formVisible: true,\n          curSubFormID: subFormID,\n          curSubForm: nextSubForm,\n          subFormData: subFormData\n        });\n      }, 100);\n    }\n  }, {\n    key: \"loadDBData\",\n    value: function loadDBData(formData) {\n      console.log(\"loadDBData formData:\", formData);\n      var instance = this;\n      setTimeout(function () {\n        instance.setState({\n          formVisible: true,\n          dbLoaded: true,\n          formData: formData,\n          subFormData: instance.getSubFormData(instance.state.curSubFormID, false, formData)\n        });\n      }, 100);\n    }\n  }, {\n    key: \"getTopNav\",\n    value: function getTopNav(formStep) {\n      var disabled = false;\n      var active = false;\n      var assetsAllocation = this.getSubFormFieldValue(\"AssetAllocationSubForm\", \"assetsAllocation\");\n      var isSpouseSole = this.getSubFormFieldValue(\"QuestionRMDAdditionalSubForm\", \"isSpouseSole\");\n      var accountType = this.getSubFormFieldValue(\"AssetInformationSubForm\", \"accountType\");\n      var regularContribution = this.getSubFormFieldValue(\"QuestionContributionDistributionSubForm\", \"regularContribution\");\n      var isPrimaryResidence = this.getSubFormFieldValue(\"PrimaryResidenceSubForm\", \"isPrimaryResidence\");\n      // formStep2FormMap\n      // this.state.curSubFormID\n      //getting stepid from subform\n      var curSubFormStepIndex = -1;\n      for (var sindex = 0; sindex < this.state.formSteps.length; sindex++) {\n        if (this.state.curSubFormID == \"EndSubForm\") {\n          if (this.state.formSteps[sindex].id == formStep.id) {\n            curSubFormStepIndex = sindex;\n            break;\n          }\n        }\n        for (var findex = 0; findex < this.state.formStep2FormMap[this.state.formSteps[sindex].id].length; findex++) {\n          if (this.state.formStep2FormMap[this.state.formSteps[sindex].id][findex] == this.state.curSubFormID) {\n            curSubFormStepIndex = sindex;\n            break;\n          }\n        }\n      }\n      if (this.state.isEndForm && formStep.id !== 'StepAssetAllocationSubForm') {\n        return {\n          disabled: true,\n          active: false\n        };\n      }\n      if (assetsAllocation != null && assetsAllocation != \"\") {\n        switch (formStep.id) {\n          case \"StepAssetAllocationSubForm\":\n            if (curSubFormStepIndex === 0) {\n              if (this.state.isEndForm) {\n                disabled = false;\n                active = true;\n              } else {\n                disabled = true;\n                active = false;\n                assetsAllocation = '';\n              }\n            }\n            if (curSubFormStepIndex >= 0) {\n              active = true;\n            }\n            break;\n          case \"StepAssetInformationSubForm\":\n            if (curSubFormStepIndex >= 1) {\n              active = true;\n            }\n            break;\n          case \"StepSellingAssetCostsInformation\":\n            if (curSubFormStepIndex >= 5) {\n              active = true;\n            }\n            switch (assetsAllocation) {\n              // case \"General Household\":\n              case \"Club Membership\":\n              case \"Real Estate\":\n              case \"Business Interest\":\n              case \"Livestock\":\n              case \"Collectibles\":\n              case \"Private Placement & VC\":\n              // case \"Cash/CD's T-Bills\":\n              // case \"Bonds - Int  Long Term\":\n              // case \"Indexes, ETF's and Mutual Funds\":\n              case \"Stocks - Individual\":\n              // case \"Trust Deeds\":\n              case \"User Defined Portfolio Allocation\":\n                disabled = true;\n            }\n            break;\n          case \"StepAdditionalAssetInformation\":\n            if (curSubFormStepIndex >= 4) {\n              active = true;\n            }\n            switch (assetsAllocation) {\n              case \"Airplane\":\n              case \"Boat\":\n              case \"Motorcycles\":\n              case \"Auto - non-collectible\":\n              case \"Bonds - Int  Long Term\":\n              case \"Indexes, ETF's and Mutual Funds\":\n              case \"General Household\":\n              case \"Cash/CD's T-Bills\":\n              case \"Trust Deeds\":\n                disabled = true;\n            }\n            break;\n          case \"StepAccountTypeQuestions\":\n            if (curSubFormStepIndex >= 2) {\n              active = true;\n            }\n            switch (assetsAllocation) {\n              case \"Airplane\":\n              case \"Boat\":\n              case \"Motorcycles\":\n              case \"General Household\":\n              case \"Club Membership\":\n              case \"Real Estate\":\n              case \"Auto - non-collectible\":\n              case \"Business Interest\":\n              case \"Livestock\":\n              case \"Collectibles\":\n              case \"Private Placement & VC\":\n              case \"Cash/CD's T-Bills\":\n                disabled = true;\n            }\n            break;\n          case \"StepQuestionContributionDistributionSubForm\":\n            if (curSubFormStepIndex >= 3) {\n              active = true;\n            }\n            switch (assetsAllocation) {\n              case \"Airplane\":\n              case \"Boat\":\n              case \"Motorcycles\":\n              case \"General Household\":\n              case \"Club Membership\":\n              case \"Real Estate\":\n              case \"Auto - non-collectible\":\n              case \"Business Interest\":\n              case \"Livestock\":\n              case \"Collectibles\":\n              case \"Private Placement & VC\":\n                disabled = true;\n            }\n            break;\n          case \"StepAdditionalAssetInformation\":\n            if (curSubFormStepIndex >= 4) {\n              active = true;\n            }\n            switch (assetsAllocation) {\n              case \"Indexes, ETF's and Mutual Funds\":\n              case \"Bonds - Int  Long Term\":\n              // case \"Club Membership\":\n              case \"Business Interest\":\n              case \"Cash/CD's T-Bills\":\n                disabled = true;\n            }\n            break;\n          case \"StepAssetPerformanceSubForm\":\n            if (curSubFormStepIndex >= 6) {\n              active = true;\n            }\n            break;\n          case \"StepTaxLiquiditySubForm\":\n            if (curSubFormStepIndex >= 7) {\n              active = true;\n            }\n            break;\n        }\n      } else {\n        if (formStep.id != \"StepAssetAllocationSubForm\") {\n          disabled = true;\n        }\n      }\n      return {\n        disabled: disabled,\n        active: active\n      };\n    }\n  }, {\n    key: \"getRightSideFormData\",\n    value: function getRightSideFormData(formStep) {\n      var formData = [];\n      var assetsAllocation = this.getSubFormFieldValue(\"AssetAllocationSubForm\", \"assetsAllocation\");\n      var isSpouseSole = this.getSubFormFieldValue(\"QuestionRMDAdditionalSubForm\", \"isSpouseSole\");\n      var accountType = this.getSubFormFieldValue(\"AssetInformationSubForm\", \"accountType\");\n      var regularContribution = this.getSubFormFieldValue(\"QuestionContributionDistributionSubForm\", \"regularContribution\");\n      var isPrimaryResidence = this.getSubFormFieldValue(\"PrimaryResidenceSubForm\", \"isPrimaryResidence\");\n      if (assetsAllocation == null || assetsAllocation == \"\") {\n        return formData;\n      }\n      for (var index = 0; index < this.state.formData.length; index++) {\n        if (formStep.id == this.state.formData[index][\"stepId\"]) {\n          switch (formStep.id) {\n            case \"StepAssetAllocationSubForm\":\n              formData.push(this.state.formData[index]);\n              break;\n            case \"StepAssetInformationSubForm\":\n              formData.push(this.state.formData[index]);\n              break;\n            case \"StepAccountTypeQuestions\":\n              switch (assetsAllocation) {\n                case \"Airplane\":\n                case \"Boat\":\n                case \"Motorcycles\":\n                case \"General Household\":\n                case \"Club Membership\":\n                case \"Real Estate\":\n                case \"Auto - non-collectible\":\n                case \"Business Interest\":\n                case \"Livestock\":\n                case \"Collectibles\":\n                case \"Private Placement & VC\":\n                case \"Cash/CD's T-Bills\":\n                  break;\n                default:\n                  if (this.state.formData[index][\"id\"] == \"InheritedIRASubForm\") {\n                    if (accountType == \"IRA Inherited\") {\n                      formData.push(this.state.formData[index]);\n                    }\n                  } else {\n                    formData.push(this.state.formData[index]);\n                  }\n                  break;\n              }\n              break;\n            case \"StepQuestionContributionDistributionSubForm\":\n              switch (assetsAllocation) {\n                case \"Airplane\":\n                case \"Boat\":\n                case \"Motorcycles\":\n                case \"General Household\":\n                case \"Club Membership\":\n                case \"Real Estate\":\n                case \"Auto - non-collectible\":\n                case \"Business Interest\":\n                case \"Livestock\":\n                case \"Collectibles\":\n                case \"Private Placement & VC\":\n                  break;\n                default:\n                  if (this.state.formData[index][\"id\"] == \"ContributionSubForm\") {\n                    if (regularContribution == \"Yes\") {\n                      formData.push(this.state.formData[index]);\n                    }\n                  } else {\n                    formData.push(this.state.formData[index]);\n                  }\n                  break;\n              }\n              break;\n            case \"StepAdditionalAssetInformation\":\n              if (assetsAllocation == \"Stocks - Individual\" && this.state.formData[index][\"id\"] == \"StockSubForm\") {\n                console.log(this.state.formData[index][\"data\"][\"rows\"]);\n                formData.push(this.state.formData[index]);\n              } else if (assetsAllocation == \"User Defined Portfolio Allocation\" && this.state.formData[index][\"id\"] == \"UserPortfolioSubForm\") {\n                formData.push(this.state.formData[index]);\n              } else if (assetsAllocation == \"Airplane\" && this.state.formData[index][\"id\"] == \"SellingAssetCostsSubForm\") {\n                formData.push(this.state.formData[index]);\n              } else if (assetsAllocation == \"Boat\" && this.state.formData[index][\"id\"] == \"SellingAssetCostsSubForm\") {\n                formData.push(this.state.formData[index]);\n              } else if (assetsAllocation == \"Motorcycles\" && this.state.formData[index][\"id\"] == \"SellingAssetCostsSubForm\") {\n                formData.push(this.state.formData[index]);\n              } else if (assetsAllocation == \"General Household\" && this.state.formData[index][\"id\"] == \"SellingAssetCostsSubForm\") {\n                formData.push(this.state.formData[index]);\n              } else if (assetsAllocation == \"Club Membership\" && this.state.formData[index][\"id\"] == \"SellingAssetCostsSubForm\") {\n                formData.push(this.state.formData[index]);\n              } else if (assetsAllocation == \"Real Estate\" && isPrimaryResidence == \"No\" && (this.state.formData[index][\"id\"] == \"PropertySubForm\" || this.state.formData[index][\"id\"] == \"InvestmentPropertySubForm\" || this.state.formData[index][\"id\"] == \"InvestmentPropertyExpensesSubForm\")) {\n                formData.push(this.state.formData[index]);\n              } else if (assetsAllocation == \"Auto - non-collectible\" && this.state.formData[index][\"id\"] == \"SellingAssetCostsSubForm\") {\n                formData.push(this.state.formData[index]);\n              } else if (assetsAllocation == \"Livestock\" && this.state.formData[index][\"id\"] == \"LiveStockSubForm\") {\n                formData.push(this.state.formData[index]);\n              } else if (assetsAllocation == \"Collectibles\" && this.state.formData[index][\"id\"] == \"CollectiblesSubForm\") {\n                formData.push(this.state.formData[index]);\n              } else if (assetsAllocation == \"Private Placement & VC\" && (this.state.formData[index][\"id\"] == \"VCSubForm\" || this.state.formData[index][\"id\"] == \"CommittmentSubForm\")) {\n                formData.push(this.state.formData[index]);\n              }\n              break;\n            case \"StepAssetPerformanceSubForm\":\n              formData.push(this.state.formData[index]);\n              break;\n            case \"StepTaxLiquiditySubForm\":\n              formData.push(this.state.formData[index]);\n              break;\n            default:\n              formData.push(this.state.formData[index]);\n              break;\n          }\n        }\n      }\n      return formData;\n    }\n  }, {\n    key: \"goNext\",\n    value: function goNext(fromSubFormID) {\n      var nextSubFormID = \"\";\n      var assetsAllocation = this.getSubFormFieldValue(\"AssetAllocationSubForm\", \"assetsAllocation\");\n      var isSpouseSole = this.getSubFormFieldValue(\"QuestionRMDAdditionalSubForm\", \"isSpouseSole\");\n      var accountType = this.getSubFormFieldValue(\"AssetInformationSubForm\", \"accountType\");\n      var isShowfield = this.getSubFormFieldValue(\"QuestionShowFieldsAirplane\", \"isShowfield\");\n      var regularContribution = this.getSubFormFieldValue(\"QuestionContributionDistributionSubForm\", \"regularContribution\");\n      var isPrimaryResidence = this.getSubFormFieldValue(\"PrimaryResidenceSubForm\", \"isPrimaryResidence\");\n      switch (fromSubFormID) {\n        // StepAssetAllocationSubForm\n        case \"AssetAllocationSubForm\":\n          nextSubFormID = \"AssetInformationSubForm\";\n          break;\n\n        // StepAssetInformationSubForm\n        case \"AssetInformationSubForm\":\n          switch (accountType) {\n            case \"529\":\n            case \"Custodial\":\n            case \"Coverdell Education\":\n            case \"Individual\":\n            case \"Health Savings Account\":\n            case \"Joint\":\n            case \"Roth\":\n            case \"Trust\":\n              nextSubFormID = \"QuestionContributionDistributionSubForm\";\n            default:\n              nextSubFormID = \"QuestionRMDAdditionalSubForm\";\n          }\n          switch (assetsAllocation) {\n            case \"Airplane\":\n            case \"Boat\":\n            case \"Motorcycles\":\n            case \"General Household\":\n              nextSubFormID = \"StepAdditionalAssetInformation\";\n              break;\n            case \"Club Membership\":\n              nextSubFormID = \"StepAssetPerformanceSubForm\";\n              break;\n            case \"Real Estate\":\n            case \"Auto - non-collectible\":\n              nextSubFormID = \"StepAdditionalAssetInformation\";\n              break;\n            case \"Business Interest\":\n              nextSubFormID = \"StepAssetPerformanceSubForm\";\n              break;\n            case \"Livestock\":\n            case \"Collectibles\":\n            case \"Private Placement & VC\":\n              nextSubFormID = \"StepAdditionalAssetInformation\";\n              break;\n            case \"Cash/CD's T-Bills\":\n              nextSubFormID = \"StepAdditionalAssetInformation\";\n          }\n          break;\n        // StepAccountTypeQuestions\n        case \"QuestionRMDAdditionalSubForm\":\n          if (accountType == \"IRA Inherited\") {\n            nextSubFormID = \"InheritedIRASubForm\";\n          } else {\n            nextSubFormID = \"QuestionContributionDistributionSubForm\";\n          }\n          switch (assetsAllocation) {\n            case \"Airplane\":\n            case \"Boat\":\n            case \"Motorcycles\":\n            case \"General Household\":\n            case \"Club Membership\":\n            case \"Real Estate\":\n            case \"Auto - non-collectible\":\n            case \"Business Interest\":\n            case \"Livestock\":\n            case \"Collectibles\":\n            case \"Private Placement & VC\":\n              nextSubFormID = \"StepAdditionalAssetInformation\";\n          }\n          break;\n        //juniiii\n        case \"QuestionShowFieldsAirplane\":\n          if (isShowfield == \"Yes\") {\n            nextSubFormID = \"SellingAssetCostsSubForm\";\n          } else {\n            nextSubFormID = \"AssetPerformanceSubForm\";\n          }\n          break;\n        case \"InheritedIRASubForm\":\n          nextSubFormID = \"QuestionContributionDistributionSubForm\";\n          switch (assetsAllocation) {\n            case \"Airplane\":\n            case \"Boat\":\n            case \"Motorcycles\":\n            case \"General Household\":\n            case \"Club Membership\":\n            case \"Real Estate\":\n            case \"Auto - non-collectible\":\n            case \"Business Interest\":\n            case \"Livestock\":\n            case \"Collectibles\":\n            case \"Private Placement & VC\":\n              nextSubFormID = \"StepAdditionalAssetInformation\";\n          }\n          break;\n        // StepQuestionContributionDistributionSubForm\n        case \"QuestionContributionDistributionSubForm\":\n          var _regularContribution = this.getSubFormFieldValue(\"QuestionContributionDistributionSubForm\", \"regularContribution\");\n          if (_regularContribution == \"Yes\") {\n            nextSubFormID = \"ContributionSubForm\";\n          } else {\n            nextSubFormID = \"StepAdditionalAssetInformation\";\n          }\n          break;\n        case \"ContributionSubForm\":\n          nextSubFormID = \"StepAdditionalAssetInformation\";\n          switch (assetsAllocation) {\n            case \"Indexes, ETF's and Mutual Funds\":\n            case \"Bonds - Int  Long Term\":\n            case \"Cash/CD's T-Bills\":\n              nextSubFormID = \"StepAssetPerformanceSubForm\";\n              break;\n          }\n          break;\n\n        // StepAdditionalAssetInformation\n        case \"SellingAssetCostsSubForm\":\n          nextSubFormID = \"AssetPerformanceSubForm\";\n          break;\n        case \"CollectiblesSubForm\":\n          nextSubFormID = \"AssetPerformanceSubForm\";\n          break;\n        case \"LiveStockSubForm\":\n          nextSubFormID = \"AssetPerformanceSubForm\";\n          break;\n        case \"VCSubForm\":\n          var additionalCommittments = this.getSubFormFieldValue(\"VCSubForm\", \"additionalCommittments\");\n          if (additionalCommittments == \"Yes\") {\n            nextSubFormID = \"CommittmentSubForm\";\n          } else {\n            nextSubFormID = \"AssetPerformanceSubForm\";\n          }\n          break;\n        case \"CommittmentSubForm\":\n          nextSubFormID = \"AssetPerformanceSubForm\";\n          break;\n        case \"PrimaryResidenceSubForm\":\n          var _isPrimaryResidence = this.getSubFormFieldValue(\"PrimaryResidenceSubForm\", \"isPrimaryResidence\");\n          if (_isPrimaryResidence == \"Yes\") {\n            nextSubFormID = \"AssetPerformanceSubForm\";\n          } else {\n            nextSubFormID = \"PropertySubForm\";\n          }\n          break;\n        case \"PropertySubForm\":\n          nextSubFormID = \"InvestmentPropertySubForm\";\n          break;\n        case \"InvestmentPropertySubForm\":\n          nextSubFormID = \"InvestmentPropertyExpensesSubForm\";\n          break;\n        case \"InvestmentPropertyExpensesSubForm\":\n          nextSubFormID = \"AssetPerformanceSubForm\";\n          break;\n        case \"StockSubForm\":\n          nextSubFormID = \"AssetPerformanceSubForm\";\n          break;\n        case \"UserPortfolioSubForm\":\n          nextSubFormID = \"AssetPerformanceSubForm\";\n          break;\n        // StepAssetPerformanceSubForm\n        case \"AssetPerformanceSubForm\":\n          nextSubFormID = \"TaxLiquiditySubForm\";\n          break;\n\n        // StepTaxLiquiditySubForm\n        case \"TaxLiquiditySubForm\":\n          nextSubFormID = \"EndSubForm\";\n          break;\n      }\n      this.goSubForm(nextSubFormID);\n    }\n  }, {\n    key: \"goPrev\",\n    value: function goPrev(fromSubFormID) {\n      var prevSubFormID = \"\";\n      var assetsAllocation = this.getSubFormFieldValue(\"AssetAllocationSubForm\", \"assetsAllocation\");\n      switch (fromSubFormID) {\n        // StepAssetAllocationSubForm\n        case \"AssetAllocationSubForm\":\n          prevSubFormID = \"\";\n          break;\n\n        // StepAssetInformationSubForm\n        case \"AssetInformationSubForm\":\n          prevSubFormID = \"AssetAllocationSubForm\";\n          break;\n\n        // StepAccountTypeQuestions\n        case \"QuestionRMDAdditionalSubForm\":\n          prevSubFormID = \"\";\n          break;\n        case \"InheritedIRASubForm\":\n          prevSubFormID = \"QuestionRMDAdditionalSubForm\";\n          break;\n\n        // StepQuestionContributionDistributionSubForm\n        case \"QuestionContributionDistributionSubForm\":\n          prevSubFormID = \"\";\n          break;\n        case \"ContributionSubForm\":\n          prevSubFormID = \"QuestionContributionDistributionSubForm\";\n          break;\n\n        // StepAdditionalAssetInformation\n        case \"SellingAssetCostsSubForm\":\n          prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n          switch (assetsAllocation) {\n            case \"Airplane\":\n            case \"Boat\":\n            case \"Motorcycles\":\n            case \"General Household\":\n            case \"Club Membership\":\n            case \"Real Estate\":\n            case \"Auto - non-collectible\":\n            case \"Business Interest\":\n            case \"Livestock\":\n            case \"Collectibles\":\n            case \"Private Placement & VC\":\n              prevSubFormID = \"StepAssetInformationSubForm\";\n          }\n          break;\n        case \"CollectiblesSubForm\":\n          prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n          switch (assetsAllocation) {\n            case \"Airplane\":\n            case \"Boat\":\n            case \"Motorcycles\":\n            case \"General Household\":\n            case \"Club Membership\":\n            case \"Real Estate\":\n            case \"Auto - non-collectible\":\n            case \"Business Interest\":\n            case \"Livestock\":\n            case \"Collectibles\":\n            case \"Private Placement & VC\":\n              prevSubFormID = \"StepAssetInformationSubForm\";\n          }\n          break;\n        case \"LiveStockSubForm\":\n          prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n          switch (assetsAllocation) {\n            case \"Airplane\":\n            case \"Boat\":\n            case \"Motorcycles\":\n            case \"General Household\":\n            case \"Club Membership\":\n            case \"Real Estate\":\n            case \"Auto - non-collectible\":\n            case \"Business Interest\":\n            case \"Livestock\":\n            case \"Collectibles\":\n            case \"Private Placement & VC\":\n              prevSubFormID = \"StepAssetInformationSubForm\";\n          }\n          break;\n        case \"VCSubForm\":\n          prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n          switch (assetsAllocation) {\n            case \"Airplane\":\n            case \"Boat\":\n            case \"Motorcycles\":\n            case \"General Household\":\n            case \"Club Membership\":\n            case \"Real Estate\":\n            case \"Auto - non-collectible\":\n            case \"Business Interest\":\n            case \"Livestock\":\n            case \"Collectibles\":\n            case \"Private Placement & VC\":\n              prevSubFormID = \"StepAssetInformationSubForm\";\n          }\n          break;\n        case \"CommittmentSubForm\":\n          prevSubFormID = \"VCSubForm\";\n          break;\n        case \"PrimaryResidenceSubForm\":\n          prevSubFormID = \"\";\n          break;\n        case \"PropertySubForm\":\n          prevSubFormID = \"\";\n          break;\n        case \"InvestmentPropertySubForm\":\n          prevSubFormID = \"PropertySubForm\";\n          break;\n        case \"InvestmentPropertyExpensesSubForm\":\n          prevSubFormID = \"InvestmentPropertySubForm\";\n          break;\n        case \"StockSubForm\":\n          prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n          switch (assetsAllocation) {\n            case \"Airplane\":\n            case \"Boat\":\n            case \"Motorcycles\":\n            case \"General Household\":\n            case \"Club Membership\":\n            case \"Real Estate\":\n            case \"Auto - non-collectible\":\n            case \"Business Interest\":\n            case \"Livestock\":\n            case \"Collectibles\":\n            case \"Private Placement & VC\":\n              prevSubFormID = \"StepAssetInformationSubForm\";\n          }\n          break;\n        case \"UserPortfolioSubForm\":\n          prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n          switch (assetsAllocation) {\n            case \"Airplane\":\n            case \"Boat\":\n            case \"Motorcycles\":\n            case \"General Household\":\n            case \"Club Membership\":\n            case \"Real Estate\":\n            case \"Auto - non-collectible\":\n            case \"Business Interest\":\n            case \"Livestock\":\n            case \"Collectibles\":\n            case \"Private Placement & VC\":\n              prevSubFormID = \"StepAssetInformationSubForm\";\n          }\n          break;\n\n        // StepAssetPerformanceSubForm\n        case \"AssetPerformanceSubForm\":\n          prevSubFormID = \"StepAdditionalAssetInformation\";\n          switch (assetsAllocation) {\n            case \"Indexes, ETF's and Mutual Funds\":\n            case \"Bonds - Int  Long Term\":\n              prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n              break;\n            case \"Club Membership\":\n            case \"Business Interest\":\n              prevSubFormID = \"StepAssetInformationSubForm\";\n              break;\n            case \"Cash/CD's T-Bills\":\n              prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n          }\n          break;\n\n        // StepTaxLiquiditySubForm\n        case \"TaxLiquiditySubForm\":\n          prevSubFormID = \"AssetPerformanceSubForm\";\n          break;\n      }\n      this.goSubForm(prevSubFormID);\n    }\n  }, {\n    key: \"getBeneficiaryAssignmentData\",\n    value: function getBeneficiaryAssignmentData(subFormData, subForm) {\n      var _this3 = this;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2356,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-brief-top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2357,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"form-brief-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2358,\n          columnNumber: 11\n        }\n      }, subFormData[\"BeneficiaryAssignment\"].tittle), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"form-brief-edit-btn\",\n        onClick: function onClick() {\n          return _this3.goSubForm(subForm.id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2361,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        type: \"edit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2365,\n          columnNumber: 13\n        }\n      })), subFormData[\"BeneficiaryAssignment\"].rows && subFormData[\"BeneficiaryAssignment\"].rows.map(function (data) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-brief-item\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2371,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          className: \"form-brief-item-title\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2372,\n            columnNumber: 19\n          }\n        }, data.beneficiariesName != \"\" ? data.beneficiariesName + \":\" : null, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"form-brief-item-value\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2377,\n            columnNumber: 19\n          }\n        }, data.percent));\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n      var navlinks = [{\n        href: \"/\",\n        title: \"Home\"\n      }, {\n        href: \"/modules\",\n        title: \"Modules\"\n      }, {\n        href: \"/assets\",\n        title: \"Assets\"\n      }];\n      console.log(\"this.state.curSubForm\", this.state.curSubForm);\n      var SubForm = this.state.curSubForm;\n      var formpageClassName = \"form-page-container-wrap\";\n      if (this.state.isRightSideOpen) {\n        formpageClassName = \"form-page-container-wrap right-side--opend\";\n      } else {\n        formpageClassName = \"form-page-container-wrap right-side--collapsed\";\n      }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: formpageClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2413,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--main-side\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2414,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"steps\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2415,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logo-container align-items-top justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2416,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"img-asset\",\n        src: AssetPlanet,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2417,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"process\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2419,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"process-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2420,\n          columnNumber: 15\n        }\n      }, this.state.formSteps.map(function (formStep, index) {\n        var _this4$getTopNav = _this4.getTopNav(formStep),\n          disabled = _this4$getTopNav.disabled,\n          active = _this4$getTopNav.active;\n        var className = \"btn nav-items btn-circle\";\n        if (disabled) {\n          className = \"btn nav-items btn-circle disabled\";\n        } else if (active) {\n          className = \"btn nav-items btn-circle active\";\n        }\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"process-step\",\n          key: index,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2431,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: className,\n          \"data-toggle\": \"tab\",\n          onClick: function onClick() {\n            return !disabled ? _this4.goSubForm(formStep.id) : null;\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2432,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            fontSize: 30,\n            color: '#006400'\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2441,\n            columnNumber: 25\n          }\n        }, index + 1)), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"step-title\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2445,\n            columnNumber: 23\n          }\n        }, formStep.title));\n      })))), /*#__PURE__*/React.createElement(HiddenHook, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2452,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2460,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"page-nav-history\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2461,\n          columnNumber: 13\n        }\n      }), !this.state.dbLoaded && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2477,\n          columnNumber: 38\n        }\n      }, \"Loading...\"), this.state.dbLoaded && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2479,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--left-side\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2480,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"info-form-block\",\n        pose: this.state.formVisible ? \"visible\" : \"hidden\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2482,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(SubForm, {\n        subFormData: this.state.subFormData,\n        cbGoSubForm: this.goSubForm,\n        cbUpdateSubForm: this.updateSubForm,\n        formData: this.state.formData,\n        cbGetSubFormField: this.getSubFormField,\n        cbGoNext: this.goNext,\n        cbGoPrev: this.goPrev,\n        selectedTitle: this.getSubFormFieldValue(\"AssetAllocationSubForm\", \"assetsAllocation\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2486,\n          columnNumber: 21\n        }\n      })))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--right-side\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2507,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"right-side-collapse-icon\",\n        onClick: this.toggleRightSide,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2508,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fe-menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2512,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--right-side-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2514,\n          columnNumber: 11\n        }\n      }, this.state.formSteps.map(function (formStep, index) {\n        var formData = _this4.getRightSideFormData(formStep);\n        return formData.map(function (subForm, sindex) {\n          if (subForm.visible == false) {\n            return /*#__PURE__*/React.createElement(React.Fragment, {\n              key: sindex,\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2519,\n                columnNumber: 26\n              }\n            });\n          }\n          var count = 0;\n          var go = false;\n          var fieldss = null;\n          var subFormData = subForm.data;\n          if (subFormData[\"rows\"]) {\n            fieldss = subFormData[\"rows\"];\n          } else if (subFormData[\"fields\"]) {\n            fieldss = subFormData[\"fields\"];\n          }\n          count = fieldss.length;\n          for (var i = 0; i < parseInt(count); i++) {\n            if (fieldss[i][\"value\"] != \"\") {\n              go = true;\n            }\n          }\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-block\",\n            key: sindex,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2540,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-top\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2541,\n              columnNumber: 21\n            }\n          }, go ? /*#__PURE__*/React.createElement(\"h4\", {\n            className: \"form-brief-title\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2543,\n              columnNumber: 25\n            }\n          }, subFormData.title) : null, /*#__PURE__*/React.createElement(\"span\", {\n            className: \"form-brief-edit-btn\",\n            onClick: function onClick() {\n              return _this4.goSubForm(subForm.stepId);\n            },\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2548,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(Icon, {\n            type: \"edit\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2552,\n              columnNumber: 25\n            }\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-content\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2555,\n              columnNumber: 21\n            }\n          }, subFormData.fields && subFormData.fields.map(function (field, ffindex) {\n            if (field.value == \"\" || field.value == null) {\n              return /*#__PURE__*/React.createElement(React.Fragment, {\n                key: ffindex,\n                __self: _this4,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2560,\n                  columnNumber: 31\n                }\n              });\n            }\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-item\",\n              key: ffindex,\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2564,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"p\", {\n              className: \"form-brief-item-title\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2565,\n                columnNumber: 31\n              }\n            }, field.title != \"\" ? field.title + \":\" : null, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n              className: \"form-brief-item-value\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2568,\n                columnNumber: 31\n              }\n            }, field.hasOwnProperty(\"type\") && field[\"type\"] == \"currency\" && float2Currency(field.value), field.hasOwnProperty(\"type\") && field[\"type\"] == \"percent\" && field.value + \" %\", !field.hasOwnProperty(\"type\") && field.value));\n          }), subFormData.rows && subFormData.rows.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2581,\n              columnNumber: 25\n            }\n          }, subForm.id == \"ContributionSubForm\" && /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2583,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-row\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2584,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--33\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2585,\n              columnNumber: 33\n            }\n          }, \"Cont. Or Dist.\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--33\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2586,\n              columnNumber: 33\n            }\n          }, \"Amount\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--33\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2587,\n              columnNumber: 33\n            }\n          }, \"Start Date\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--33\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2590,\n              columnNumber: 33\n            }\n          }, \"End Date\")), subFormData.rows.map(function (contribute, cindex) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-row\",\n              key: cindex,\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2596,\n                columnNumber: 35\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--33\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2597,\n                columnNumber: 37\n              }\n            }, contribute[\"contributionOrDistribution\"]), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--33\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2600,\n                columnNumber: 37\n              }\n            }, float2Currency(contribute[\"amount\"])), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--33\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2603,\n                columnNumber: 37\n              }\n            }, contribute[\"startDate\"]), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--33\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2606,\n                columnNumber: 37\n              }\n            }, contribute[\"endDate\"]));\n          })), subForm.id == \"LiveStockSubForm\" && /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2615,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-row\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2616,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--50\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2617,\n              columnNumber: 33\n            }\n          }, \"Animal Type\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--50\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2620,\n              columnNumber: 33\n            }\n          }, \"Count\")), subFormData.rows.map(function (livestock, cindex) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-row\",\n              key: cindex,\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2624,\n                columnNumber: 35\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--50\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2625,\n                columnNumber: 37\n              }\n            }, livestock[\"animalType\"]), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--50\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2628,\n                columnNumber: 37\n              }\n            }, livestock[\"count\"]));\n          })), subForm.id == \"StockSubForm\" && /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2637,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-row\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2638,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--33\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2639,\n              columnNumber: 33\n            }\n          }, \"Stock Symbol\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--33\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2642,\n              columnNumber: 33\n            }\n          }, \"Quantity\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--33\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2645,\n              columnNumber: 33\n            }\n          }, \"Today's Value\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--33\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2648,\n              columnNumber: 33\n            }\n          }, \"Date\")), subFormData.rows.map(function (stock, cindex) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-row\",\n              key: cindex,\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2652,\n                columnNumber: 35\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--33\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2653,\n                columnNumber: 37\n              }\n            }, stock[\"stockSymbol\"]), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--33\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2656,\n                columnNumber: 37\n              }\n            }, stock[\"quantity\"]), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--33\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2659,\n                columnNumber: 37\n              }\n            }, float2Currency(stock[\"todayValue\"])), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--33\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2662,\n                columnNumber: 37\n              }\n            }, stock[\"dateOfIndividual\"]));\n          })), subForm.id == \"InvestmentPropertyExpensesSubForm\" && /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2672,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-row\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2673,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--33\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2674,\n              columnNumber: 35\n            }\n          }, \"Amount\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--33\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2675,\n              columnNumber: 35\n            }\n          }, \"Start Date\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--33\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2678,\n              columnNumber: 35\n            }\n          }, \"End Date\")), subFormData.rows.map(function (propertyExpense, cindex) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-row\",\n              key: cindex,\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2685,\n                columnNumber: 39\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--33\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2689,\n                columnNumber: 41\n              }\n            }, float2Currency(propertyExpense[\"amount\"])), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--33\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2694,\n                columnNumber: 41\n              }\n            }, propertyExpense[\"startDate\"]), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--33\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2697,\n                columnNumber: 41\n              }\n            }, propertyExpense[\"endDate\"]));\n          })))), subFormData[\"BeneficiaryAssignment\"] ? _this4.getBeneficiaryAssignmentData(subFormData, subForm) : null);\n        });\n      }))));\n    }\n  }]);\n  return AssetsNew;\n}(Component);\nexport default connect()(AssetsNew);","map":{"version":3,"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","React","Component","connect","Link","Icon","Alert","ImageIcon","AssetPlanet","MODULE_API","useMutation","useQuery","QL_ASSETS_ADD","QL_ASSETS_UPDATE","QL_ASSETS_GET","float2Currency","FormPagePose","SellingAssetCostsSubForm","CollectiblesSubForm","VCSubForm","StockSubForm","UserPortfolioSubForm","ContributionSubForm","AssetInformationSubForm","QuestionRMDAdditionalSubForm","QuestionShowFieldsAirplane","QuestionContributionDistributionSubForm","AssetAllocationSubForm","AssetPerformanceSubForm","LiveStockSubForm","PrimaryResidenceSubForm","TaxLiquiditySubForm","CommittmentSubForm","PropertySubForm","InvestmentPropertySubForm","InvestmentPropertyExpensesSubForm","InheritedIRASubForm","EndSubForm","fnMutationAssetsAdd","dataMutationAssetsAdd","fnMutationAssetsUpdate","dataMutationAssetsUpdate","prevPos","HiddenHook","_useMutation","_useMutation2","_slicedToArray","_useMutation3","_useMutation4","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","initialFormData","data","formData","console","log","id","FnCreateFormData","visible","stepId","accountType","owner","heldWhere","accountDigits","assetStatus","birthDate","deathDate","relationship","saleDate","totalLiabilities","totalNetSoldValue","commissionSale","rateReturnValue","otherTransactionCosts","actualValue","taxes","visibile","year","description","collectibleType","model","make","purchasePrice","appraised","insured","nickname","additionalCommittments","committmentDate","committmentAmount","monthlyRent","totalMonthlyExpenses","downPayment","investmentPropertyAddress","spPortfolio","realEstatePortfolio","bondsPortfolio","cashPortfolio","goldPortfolio","totalPercentage","monetaryValue","returnRate","dateValue","basisCost","costBasisDate","estimatedGains","taxability","assetLiquid","partialSaleAbility","distributionTaxabilityValue","withdrawalPenalty","distributionTaxability","agePenalty","LoadDBDataHook","_x","_LoadDBDataHook","apply","arguments","_asyncToGenerator","_callee2","props","UpdatedData","_callee2$","_context2","dbID","fetchDetails","concat","cbLoadDBData","t0","AssetsNew","_Component","_inherits","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","showAssetsData","_ref","_callee","_callee$","_context","state","loadDBData","_x2","toggleRightSide","preventDefault","setState","isRightSideOpen","dbLoaded","assetsID","match","params","dataID","curSubFormID","curSubForm","formVisible","subFormData","formData1","formSteps","icon","title","formStep2FormMap","StepAssetAllocationSubForm","StepAssetInformationSubForm","StepAccountTypeQuestions","StepQuestionContributionDistributionSubForm","StepSellingAssetCostsInformation","StepAdditionalAssetInformation","StepAssetPerformanceSubForm","StepTaxLiquiditySubForm","isEndForm","goSubForm","bind","_assertThisInitialized","updateSubForm","getSubFormData","getSubFormField","createQLVariable","getSubFormFieldValue","getRightSideFormData","getTopNav","goNext","goPrev","_createClass","key","componentDidMount","formID","fieldID","index","fields","findex","field","subFormID","varQL","asset","last4DigitsOfAccount","status","inheritedInformation","regularContributionsOrDistributions","parseInt","additionalQuestion","isSpouseSoleBeneficiary","isShowFields","deceasedIraOwnersBirthdate","deceasedIraOwnersDeathDate","ownersRelationshipToDeceased","contributionOrDistributions","assetAllocation","sellingAssetCost","dateOfSale","commisionOnSale","valueBasedOnRateOfReturn","actualValueAtSaleDate","assetPerformance","parseFloat","rateOfReturn","valueAsOfDate","collectible","describeCollectible","typeOfCollectible","livestocks","privatePlacementAndVc","additionalFutureCommittments","whenFutureCommittmentDate","futureCommittmentDollarAmount","realState","typeOfProperty","purchasePriceOfProperty","monthlyLease","downpayment","investmentPropertyExpenses","stockIndividualSubforms","userDefinedPortfolio","portfolioPercentageOfSAndP500","portfolioPercentageOfRealEstate","portfolioPercentageOfBonds","portfolioPercentageOfCash","portfolioPercentageOfGold","taxAndLiquidity","costBasis","taxibility","thisAssetIsLiquid","abilityForPartialSale","taxabilityOnDistribution","undefined","bEnd","bFound","instance","variables","response","alert","history","fromState","pformData","_this2","fd","nextSubForm","setTimeout","formStep","disabled","active","assetsAllocation","isSpouseSole","regularContribution","isPrimaryResidence","curSubFormStepIndex","sindex","fromSubFormID","nextSubFormID","isShowfield","prevSubFormID","getBeneficiaryAssignmentData","subForm","_this3","className","tittle","onClick","rows","map","beneficiariesName","percent","render","_this4","navlinks","href","SubForm","formpageClassName","src","_this4$getTopNav","style","fontSize","color","pose","cbGoSubForm","cbUpdateSubForm","cbGetSubFormField","cbGoNext","cbGoPrev","selectedTitle","count","go","fieldss","ffindex","contribute","cindex","livestock","stock","propertyExpense"],"sources":["/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/src/pages/modules/assets/AssetsNew.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Icon, Alert } from \"antd\";\nimport ImageIcon from \"assets/images/asset.png\";\nimport AssetPlanet from \"assets/images/asset-planet-logo.jpg\";\nimport { MODULE_API } from \"../../../apis\";\n\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport {\n  QL_ASSETS_ADD,\n  QL_ASSETS_UPDATE,\n  QL_ASSETS_GET,\n} from \"../../../constants/queries\";\nimport { float2Currency } from \"helpers/Utils\";\n\nimport { FormPagePose } from \"../../../components/Animations\";\n\nimport SellingAssetCostsSubForm from \"./subforms/SellingAssetCostsSubForm\";\nimport CollectiblesSubForm from \"./subforms/CollectiblesSubForm\";\nimport VCSubForm from \"./subforms/VCSubForm\";\nimport StockSubForm from \"./subforms/StockSubForm\";\nimport UserPortfolioSubForm from \"./subforms/UserPortfolioSubForm\";\nimport ContributionSubForm from \"./subforms/ContributionSubForm\";\nimport AssetInformationSubForm from \"./subforms/AssetInformationSubForm\";\nimport QuestionRMDAdditionalSubForm from \"./subforms/QuestionRMDAdditionalSubForm\";\nimport QuestionShowFieldsAirplane from \"./subforms/QuestionShowFieldsAirplane\";\nimport QuestionContributionDistributionSubForm from \"./subforms/QuestionContributionDistributionSubForm\";\nimport AssetAllocationSubForm from \"./subforms/AssetAllocationSubForm\";\nimport AssetPerformanceSubForm from \"./subforms/AssetPerformanceSubForm\";\nimport LiveStockSubForm from \"./subforms/LiveStockSubForm\";\nimport PrimaryResidenceSubForm from \"./subforms/PrimaryResidenceSubForm\";\nimport TaxLiquiditySubForm from \"./subforms/TaxLiquiditySubForm\";\nimport CommittmentSubForm from \"./subforms/CommittmentSubForm\";\nimport PropertySubForm from \"./subforms/PropertySubForm\";\nimport InvestmentPropertySubForm from \"./subforms/InvestmentPropertySubForm\";\nimport InvestmentPropertyExpensesSubForm from \"./subforms/InvestmentPropertyExpensesSubForm\";\nimport InheritedIRASubForm from \"./subforms/InheritedIRASubForm\";\nimport EndSubForm from \"./subforms/EndSubForm\";\n\nvar fnMutationAssetsAdd = null;\nvar dataMutationAssetsAdd = null;\n\nvar fnMutationAssetsUpdate = null;\nvar dataMutationAssetsUpdate = null;\nlet prevPos = 0;\n\nfunction HiddenHook() {\n  [fnMutationAssetsAdd, { dataMutationAssetsAdd }] = useMutation(QL_ASSETS_ADD);\n  [fnMutationAssetsUpdate, { dataMutationAssetsUpdate }] = useMutation(\n    QL_ASSETS_UPDATE\n  );\n\n  return <React.Fragment></React.Fragment>;\n}\n\nfunction initialFormData(data) {\n  let formData = [];\n\n  console.log(\"fghjkl\", data);\n\n  if (data.hasOwnProperty(\"asset\")) {\n    formData.push({\n      id: \"AssetAllocationSubForm\",\n      data: AssetAllocationSubForm.FnCreateFormData({\n        value:\n          data[\"asset\"][\"assetAllocation\"] != null\n            ? data[\"asset\"][\"assetAllocation\"][\"assetAllocation\"]\n            : \"\",\n      }),\n      visible: true,\n      stepId: \"StepAssetAllocationSubForm\",\n    });\n\n    formData.push({\n      id: \"AssetInformationSubForm\",\n      data: AssetInformationSubForm.FnCreateFormData({\n        name: data[\"asset\"][\"name\"],\n        accountType: data[\"asset\"][\"accountType\"],\n        owner: data[\"asset\"][\"owner\"],\n        heldWhere: data[\"asset\"][\"heldWhere\"],\n        accountDigits: data[\"asset\"][\"last4DigitsOfAccount\"],\n        assetStatus: data[\"asset\"][\"status\"],\n      }),\n      visible: true,\n      stepId: \"StepAssetInformationSubForm\",\n    });\n\n    formData.push({\n      id: \"QuestionRMDAdditionalSubForm\",\n      data: QuestionRMDAdditionalSubForm.FnCreateFormData({\n        value:\n          data[\"asset\"][\"additionalQuestion\"] != null\n            ? data[\"asset\"][\"additionalQuestion\"][\"isSpouseSoleBeneficiary\"]\n              ? \"Yes\"\n              : \"No\"\n            : \"\",\n      }),\n      visible: true,\n      stepId: \"StepAccountTypeQuestions\",\n    });\n\n    formData.push({\n      id: \"QuestionShowFieldsAirplane\",\n      data: QuestionShowFieldsAirplane.FnCreateFormData({\n        value:\n          data[\"asset\"][\"additionalQuestion\"] != null\n            ? data[\"asset\"][\"additionalQuestion\"][\"isShowFields\"]\n              ? \"Yes\"\n              : \"No\"\n            : \"\",\n      }),\n      visible: true,\n      stepId: \"StepSellingAssetCostsInformation\",\n    });\n\n    formData.push({\n      id: \"InheritedIRASubForm\",\n      data: InheritedIRASubForm.FnCreateFormData({\n        birthDate:\n          data[\"asset\"][\"inheritedInformation\"] != null\n            ? data[\"asset\"][\"inheritedInformation\"][\n            \"deceasedIraOwnersBirthdate\"\n            ]\n            : \"\",\n        deathDate:\n          data[\"asset\"][\"inheritedInformation\"] != null\n            ? data[\"asset\"][\"inheritedInformation\"][\n            \"deceasedIraOwnersDeathDate\"\n            ]\n            : \"\",\n        relationship:\n          data[\"asset\"][\"inheritedInformation\"] != null\n            ? data[\"asset\"][\"inheritedInformation\"][\n            \"ownersRelationshipToDeceased\"\n            ]\n            : \"\",\n      }),\n      visible: true,\n      stepId: \"StepAccountTypeQuestions\",\n    });\n\n    formData.push({\n      id: \"QuestionContributionDistributionSubForm\",\n      data: QuestionContributionDistributionSubForm.FnCreateFormData({\n        value:\n          data[\"asset\"][\"inheritedInformation\"] != null\n            ? data[\"asset\"][\"inheritedInformation\"][\n              \"regularContributionsOrDistributions\"\n            ]\n              ? \"Yes\"\n              : \"No\"\n            : \"\",\n      }),\n      visible: true,\n      stepId: \"StepQuestionContributionDistributionSubForm\",\n    });\n\n    formData.push({\n      id: \"ContributionSubForm\",\n      data: ContributionSubForm.FnCreateFormData(\n        data[\"asset\"][\"contributionOrDistributions\"]\n      ),\n      visible: true,\n      stepId: \"StepQuestionContributionDistributionSubForm\",\n    });\n\n    formData.push({\n      id: \"SellingAssetCostsSubForm\",\n      data: SellingAssetCostsSubForm.FnCreateFormData({\n        saleDate:\n          data[\"asset\"][\"sellingAssetCost\"] != null\n            ? data[\"asset\"][\"sellingAssetCost\"][\"dateOfSale\"]\n            : \"\",\n        totalLiabilities:\n          data[\"asset\"][\"sellingAssetCost\"] != null\n            ? data[\"asset\"][\"sellingAssetCost\"][\"totalLiabilities\"]\n            : \"\",\n        totalNetSoldValue:\n          data[\"asset\"][\"sellingAssetCost\"] != null\n            ? data[\"asset\"][\"sellingAssetCost\"][\"totalNetSoldValue\"]\n            : \"\",\n        commissionSale:\n          data[\"asset\"][\"sellingAssetCost\"] != null\n            ? data[\"asset\"][\"sellingAssetCost\"][\"commisionOnSale\"]\n            : \"\",\n        rateReturnValue:\n          data[\"asset\"][\"sellingAssetCost\"] != null\n            ? data[\"asset\"][\"sellingAssetCost\"][\"valueBasedOnRateOfReturn\"]\n            : \"\",\n        otherTransactionCosts:\n          data[\"asset\"][\"sellingAssetCost\"] != null\n            ? data[\"asset\"][\"sellingAssetCost\"][\"otherTransactionCosts\"]\n            : \"\",\n        actualValue:\n          data[\"asset\"][\"sellingAssetCost\"] != null\n            ? data[\"asset\"][\"sellingAssetCost\"][\"actualValueAtSaleDate\"]\n            : \"\",\n        taxes:\n          data[\"asset\"][\"sellingAssetCost\"] != null\n            ? data[\"asset\"][\"sellingAssetCost\"][\"taxes\"]\n            : \"\",\n      }),\n      visibile: true,\n      stepId: \"StepSellingAssetCostsInformation\",\n    });\n\n    formData.push({\n      id: \"CollectiblesSubForm\",\n      data: CollectiblesSubForm.FnCreateFormData({\n        year:\n          data[\"asset\"][\"collectible\"] != null\n            ? data[\"asset\"][\"collectible\"][\"year\"]\n            : \"\",\n        description:\n          data[\"asset\"][\"collectible\"] != null\n            ? data[\"asset\"][\"collectible\"][\"describeCollectible\"]\n            : \"\",\n        // monthlyBudget: data['asset']['collectible'] != null ? data['asset']['collectible']['dollarAppliedToMonthlyBudget'] : '',\n        collectibleType:\n          data[\"asset\"][\"collectible\"] != null\n            ? data[\"asset\"][\"collectible\"][\"typeOfCollectible\"]\n            : \"\",\n        model:\n          data[\"asset\"][\"collectible\"] != null\n            ? data[\"asset\"][\"collectible\"][\"model\"]\n            : \"\",\n        make:\n          data[\"asset\"][\"collectible\"] != null\n            ? data[\"asset\"][\"collectible\"][\"make\"]\n            : \"\",\n        purchasePrice:\n          data[\"asset\"][\"collectible\"] != null\n            ? data[\"asset\"][\"collectible\"][\"purchasePrice\"]\n            : \"\",\n        appraised:\n          data[\"asset\"][\"collectible\"] != null\n            ? data[\"asset\"][\"collectible\"][\"appraised\"]\n              ? \"Yes\"\n              : \"No\"\n            : \"\",\n        insured:\n          data[\"asset\"][\"collectible\"] != null\n            ? data[\"asset\"][\"collectible\"][\"insured\"]\n              ? \"Yes\"\n              : \"No\"\n            : \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"LiveStockSubForm\",\n      data: LiveStockSubForm.FnCreateFormData(data[\"asset\"][\"livestocks\"]),\n      visible: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"VCSubForm\",\n      data: VCSubForm.FnCreateFormData({\n        nickname:\n          data[\"asset\"][\"privatePlacementAndVc\"] != null\n            ? data[\"asset\"][\"privatePlacementAndVc\"][\"nickname\"]\n            : \"\",\n        additionalCommittments:\n          data[\"asset\"][\"privatePlacementAndVc\"] != null\n            ? data[\"asset\"][\"privatePlacementAndVc\"][\n              \"additionalFutureCommittments\"\n            ]\n              ? \"Yes\"\n              : \"No\"\n            : \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"CommittmentSubForm\",\n      data: CommittmentSubForm.FnCreateFormData({\n        committmentDate:\n          data[\"asset\"][\"privatePlacementAndVc\"] != null &&\n            data[\"asset\"][\"privatePlacementAndVc\"][\"whenFutureCommittmentDate\"] !=\n            null\n            ? data[\"asset\"][\"privatePlacementAndVc\"][\n            \"whenFutureCommittmentDate\"\n            ]\n            : \"\",\n        committmentAmount:\n          data[\"asset\"][\"privatePlacementAndVc\"] != null\n            ? data[\"asset\"][\"privatePlacementAndVc\"][\n            \"futureCommittmentDollarAmount\"\n            ]\n            : \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"PrimaryResidenceSubForm\",\n      data: PrimaryResidenceSubForm.FnCreateFormData({\n        value: \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"PropertySubForm\",\n      data: PropertySubForm.FnCreateFormData({\n        value:\n          data[\"asset\"][\"realState\"] != null\n            ? data[\"asset\"][\"realState\"][\"typeOfProperty\"]\n            : \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"InvestmentPropertySubForm\",\n      data: InvestmentPropertySubForm.FnCreateFormData({\n        purchasePrice:\n          data[\"asset\"][\"realState\"] != null\n            ? data[\"asset\"][\"realState\"][\"purchasePriceOfProperty\"]\n            : \"\",\n        monthlyRent:\n          data[\"asset\"][\"realState\"] != null\n            ? data[\"asset\"][\"realState\"][\"monthlyLease\"]\n            : \"\",\n        totalMonthlyExpenses:\n          data[\"asset\"][\"realState\"] != null\n            ? data[\"asset\"][\"realState\"][\"totalMonthlyExpenses\"]\n            : \"\",\n        downPayment:\n          data[\"asset\"][\"realState\"] != null\n            ? data[\"asset\"][\"realState\"][\"downpayment\"]\n            : \"\",\n        investmentPropertyAddress:\n          data[\"asset\"][\"realState\"] != null\n            ? data[\"asset\"][\"realState\"][\"investmentPropertyAddress\"]\n            : \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"InvestmentPropertyExpensesSubForm\",\n      data: InvestmentPropertyExpensesSubForm.FnCreateFormData(\n        data[\"asset\"][\"investmentPropertyExpenses\"] != null\n          ? data[\"asset\"][\"investmentPropertyExpenses\"]\n          : []\n      ),\n      visible: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"StockSubForm\",\n      data: StockSubForm.FnCreateFormData(\n        data[\"asset\"][\"stockIndividualSubforms\"]\n      ),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"UserPortfolioSubForm\",\n      data: UserPortfolioSubForm.FnCreateFormData({\n        spPortfolio:\n          data[\"asset\"][\"userDefinedPortfolio\"] != null\n            ? data[\"asset\"][\"userDefinedPortfolio\"][\n            \"portfolioPercentageOfSAndP500\"\n            ]\n            : \"\",\n        realEstatePortfolio:\n          data[\"asset\"][\"userDefinedPortfolio\"] != null\n            ? data[\"asset\"][\"userDefinedPortfolio\"][\n            \"portfolioPercentageOfRealEstate\"\n            ]\n            : \"\",\n        bondsPortfolio:\n          data[\"asset\"][\"userDefinedPortfolio\"] != null\n            ? data[\"asset\"][\"userDefinedPortfolio\"][\n            \"portfolioPercentageOfBonds\"\n            ]\n            : \"\",\n        cashPortfolio:\n          data[\"asset\"][\"userDefinedPortfolio\"] != null\n            ? data[\"asset\"][\"userDefinedPortfolio\"][\"portfolioPercentageOfCash\"]\n            : \"\",\n        goldPortfolio:\n          data[\"asset\"][\"userDefinedPortfolio\"] != null\n            ? data[\"asset\"][\"userDefinedPortfolio\"][\"portfolioPercentageOfGold\"]\n            : \"\",\n        totalPercentage:\n          data[\"asset\"][\"userDefinedPortfolio\"] != null\n            ? data[\"asset\"][\"userDefinedPortfolio\"][\"totalPercentage\"]\n            : \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"AssetPerformanceSubForm\",\n      data: AssetPerformanceSubForm.FnCreateFormData({\n        monetaryValue:\n          data[\"asset\"][\"assetPerformance\"] != null\n            ? data[\"asset\"][\"assetPerformance\"][\"monetaryValue\"]\n            : \"\",\n        returnRate:\n          data[\"asset\"][\"assetPerformance\"] != null\n            ? data[\"asset\"][\"assetPerformance\"][\"rateOfReturn\"]\n            : \"\",\n        dateValue:\n          data[\"asset\"][\"assetPerformance\"] != null\n            ? data[\"asset\"][\"assetPerformance\"][\"valueAsOfDate\"]\n            : \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAssetPerformanceSubForm\",\n    });\n\n    formData.push({\n      id: \"TaxLiquiditySubForm\",\n      data: TaxLiquiditySubForm.FnCreateFormData({\n        basisCost:\n          data[\"asset\"][\"taxAndLiquidity\"] != null\n            ? data[\"asset\"][\"taxAndLiquidity\"][\"costBasis\"]\n            : \"\",\n        costBasisDate:\n          data[\"asset\"][\"taxAndLiquidity\"] != null\n            ? data[\"asset\"][\"taxAndLiquidity\"][\"costBasisDate\"]\n            : \"\",\n        estimatedGains:\n          data[\"asset\"][\"taxAndLiquidity\"] != null\n            ? data[\"asset\"][\"taxAndLiquidity\"][\"estimatedUnrealizedGains\"]\n            : \"\",\n        taxability:\n          data[\"asset\"][\"taxAndLiquidity\"] != null\n            ? data[\"asset\"][\"taxAndLiquidity\"][\"taxibility\"]\n              ? \"Taxable\"\n              : \"Tax Deferred\"\n            : \"\",\n        assetLiquid:\n          data[\"asset\"][\"taxAndLiquidity\"] != null\n            ? data[\"asset\"][\"taxAndLiquidity\"][\"thisAssetIsLiquid\"]\n              ? \"Yes\"\n              : \"No\"\n            : \"\",\n        partialSaleAbility:\n          data[\"asset\"][\"taxAndLiquidity\"] != null\n            ? data[\"asset\"][\"taxAndLiquidity\"][\"abilityForPartialSale\"]\n              ? \"Yes\"\n              : \"No\"\n            : \"\",\n        distributionTaxabilityValue:\n          data[\"asset\"][\"taxAndLiquidity\"] != null\n            ? data[\"asset\"][\"taxAndLiquidity\"][\"taxabilityOfDistribution\"]\n            : \"\",\n        withdrawalPenalty:\n          data[\"asset\"][\"taxAndLiquidity\"] != null\n            ? data[\"asset\"][\"taxAndLiquidity\"][\"earlyWithdrawlPenalty\"]\n            : \"\",\n        distributionTaxability:\n          data[\"asset\"][\"taxAndLiquidity\"] != null\n            ? data[\"asset\"][\"taxAndLiquidity\"][\"taxabilityOnDistribution\"]\n            : \"\",\n        agePenalty:\n          data[\"asset\"][\"taxAndLiquidity\"] != null\n            ? data[\"asset\"][\"taxAndLiquidity\"][\n            \"penaltyBasedOnAgeInClientsAndPlans\"\n            ]\n            : \"\",\n      }),\n      visibile: true,\n      stepId: \"StepTaxLiquiditySubForm\",\n    });\n  } else {\n    formData.push({\n      id: \"AssetAllocationSubForm\",\n      data: AssetAllocationSubForm.FnCreateFormData({\n        value: \"\",\n      }),\n      visible: true,\n      stepId: \"StepAssetAllocationSubForm\",\n    });\n\n    formData.push({\n      id: \"AssetInformationSubForm\",\n      data: AssetInformationSubForm.FnCreateFormData({\n        name: \"\",\n        accountType: \"\",\n        owner: \"\",\n        heldWhere: \"\",\n        accountDigits: \"\",\n        assetStatus: \"\",\n      }),\n      visible: true,\n      stepId: \"StepAssetInformationSubForm\",\n    });\n\n    formData.push({\n      id: \"QuestionRMDAdditionalSubForm\",\n      data: QuestionRMDAdditionalSubForm.FnCreateFormData({\n        value: \"\",\n      }),\n      visible: true,\n      stepId: \"StepAccountTypeQuestions\",\n    });\n    formData.push({\n      id: \"QuestionShowFieldsAirplane\",\n      data: QuestionShowFieldsAirplane.FnCreateFormData({\n        value: \"\",\n      }),\n      visible: true,\n      stepId: \"StepAccountTypeQuestions\",\n    });\n\n    formData.push({\n      id: \"InheritedIRASubForm\",\n      data: InheritedIRASubForm.FnCreateFormData({\n        birthDate: \"\",\n        deathDate: \"\",\n        relationship: \"\",\n      }),\n      visible: true,\n      stepId: \"StepAccountTypeQuestions\",\n    });\n\n    formData.push({\n      id: \"QuestionContributionDistributionSubForm\",\n      data: QuestionContributionDistributionSubForm.FnCreateFormData({\n        value: \"\",\n      }),\n      visible: true,\n      stepId: \"StepQuestionContributionDistributionSubForm\",\n    });\n\n    formData.push({\n      id: \"ContributionSubForm\",\n      data: ContributionSubForm.FnCreateFormData([]),\n      visible: true,\n      stepId: \"StepQuestionContributionDistributionSubForm\",\n    });\n\n    formData.push({\n      id: \"SellingAssetCostsSubForm\",\n      data: SellingAssetCostsSubForm.FnCreateFormData({\n        saleDate: \"\",\n        totalLiabilities: \"\",\n        totalNetSoldValue: \"\",\n        commissionSale: \"\",\n        rateReturnValue: \"\",\n        otherTransactionCosts: \"\",\n        actualValue: \"\",\n        taxes: \"\",\n      }),\n      visibile: true,\n      stepId: \"StepSellingAssetCostsInformation\",\n    });\n\n    formData.push({\n      id: \"CollectiblesSubForm\",\n      data: CollectiblesSubForm.FnCreateFormData({\n        year: \"\",\n        description: \"\",\n        // monthlyBudget: '',\n        collectibleType: \"\",\n        model: \"\",\n        make: \"\",\n        purchasePrice: \"\",\n        appraised: \"\",\n        insured: \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"LiveStockSubForm\",\n      data: LiveStockSubForm.FnCreateFormData([]),\n      visible: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"VCSubForm\",\n      data: VCSubForm.FnCreateFormData({\n        nickname: \"\",\n        additionalCommittments: \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"CommittmentSubForm\",\n      data: CommittmentSubForm.FnCreateFormData({\n        committmentDate: \"\",\n        committmentAmount: \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"PrimaryResidenceSubForm\",\n      data: PrimaryResidenceSubForm.FnCreateFormData({\n        value: \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"PropertySubForm\",\n      data: PropertySubForm.FnCreateFormData({\n        value: \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"InvestmentPropertySubForm\",\n      data: InvestmentPropertySubForm.FnCreateFormData({\n        purchasePrice: \"\",\n        monthlyRent: \"\",\n        totalMonthlyExpenses: \"\",\n        downPayment: \"\",\n        investmentPropertyAddress: \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"InvestmentPropertyExpensesSubForm\",\n      data: InvestmentPropertyExpensesSubForm.FnCreateFormData([]),\n      visible: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"StockSubForm\",\n      data: StockSubForm.FnCreateFormData([]),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"UserPortfolioSubForm\",\n      data: UserPortfolioSubForm.FnCreateFormData({\n        spPortfolio: \"\",\n        realEstatePortfolio: \"\",\n        bondsPortfolio: \"\",\n        cashPortfolio: \"\",\n        goldPortfolio: \"\",\n        totalPercentage: \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"AssetPerformanceSubForm\",\n      data: AssetPerformanceSubForm.FnCreateFormData({\n        monetaryValue: \"\",\n        returnRate: \"\",\n        dateValue: \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAssetPerformanceSubForm\",\n    });\n\n    formData.push({\n      id: \"TaxLiquiditySubForm\",\n      data: TaxLiquiditySubForm.FnCreateFormData({\n        basisCost: \"\",\n        costBasisDate: \"\",\n        estimatedGains: \"\",\n        taxability: \"\",\n        assetLiquid: \"\",\n        partialSaleAbility: \"\",\n        distributionTaxabilityValue: \"\",\n        withdrawalPenalty: \"\",\n        distributionTaxability: \"\",\n        agePenalty: \"\",\n      }),\n      visibile: true,\n      stepId: \"StepTaxLiquiditySubForm\",\n    });\n  }\n\n  return formData;\n}\n\nasync function LoadDBDataHook(props) {\n\n  console.log(\"api update in assets\", props);\n  try {\n    if (props.dbID != null && props.dbID != \"\") {\n      let UpdatedData = await MODULE_API.fetchDetails(`${props.dbID}`);\n      console.log(\"UpdatedData\", UpdatedData)\n      if (UpdatedData && UpdatedData.data) {\n        console.log(\"call..\");\n        props.cbLoadDBData(initialFormData(UpdatedData.data));\n      }\n    }\n  } catch (e) {\n    console.log(\"e\", e);\n  }\n\n\n  // if (props.dbID != null && props.dbID != \"\") {\n  //   const { data, loading, error } = useQuery(QL_ASSETS_GET, {\n  //     variables: { id: props.dbID },\n  //   });\n  //   if (data) {\n  //     console.log(\"call..\");\n  //     props.cbLoadDBData(initialFormData(data));\n  //   }\n  // }\n\n  return <React.Fragment></React.Fragment>;\n}\n\nclass AssetsNew extends Component {\n  constructor(props) {\n    super(props);\n\n    let dbID = null;\n    let dbLoaded = true;\n\n    const { assetsID } = this.props.match.params;\n\n    if (assetsID) {\n      dbID = assetsID;\n      dbLoaded = false;\n    }\n\n    let formData = initialFormData({});\n\n    this.state = {\n      dataID: dbID,\n      curSubFormID: \"AssetAllocationSubForm\",\n      curSubForm: AssetAllocationSubForm,\n      formVisible: false,\n      subFormData: {},\n      formData1: [\n        // {\n        //     id: 'assetsInformation',\n        //     data: {\n        //         title: '',\n        //         fields: [\n        //             {\n        //                 id: '' ,\n        //                 title: '',\n        //                 value: ''\n        //              }\n        //         ]\n        //     }\n        // }\n      ],\n      formData: formData,\n      isRightSideOpen: true,\n      formSteps: [\n        {\n          id: \"StepAssetAllocationSubForm\",\n          icon: \"icon_ex.png\",\n          title: \"Asset Allocation\",\n        },\n        {\n          id: \"StepAssetInformationSubForm\",\n          icon: \"icon_ex.png\",\n          title: \"Asset Information\",\n        },\n        {\n          id: \"StepAccountTypeQuestions\",\n          icon: \"icon_ex.png\",\n          title: \"Qualified Account Type Questions\",\n        },\n        {\n          id: \"StepQuestionContributionDistributionSubForm\",\n          icon: \"icon_ex.png\",\n          title: \"Contributions or Distributions\",\n        },\n        {\n          id: \"StepAdditionalAssetInformation\",\n          icon: \"icon_ex.png\",\n          title: \"Additional Asset Information\",\n        },\n        {\n          id: \"StepSellingAssetCostsInformation\",\n          icon: \"icon_ex.png\",\n          title: \"Selling Asset Costs\",\n        },\n        {\n          id: \"StepAssetPerformanceSubForm\",\n          icon: \"icon_ex.png\",\n          title: \"Asset Performance\",\n        },\n        {\n          id: \"StepTaxLiquiditySubForm\",\n          icon: \"icon_ex.png\",\n          title: \"Tax and Liquidity\",\n        },\n      ],\n      dbLoaded: dbLoaded,\n      dbID: dbID,\n      formStep2FormMap: {\n        // \"stepid\": ['form id', 'formid', 'formid']\n        StepAssetAllocationSubForm: [\"AssetAllocationSubForm\"],\n        StepAssetInformationSubForm: [\"AssetInformationSubForm\"],\n        StepAccountTypeQuestions: [\n          \"QuestionRMDAdditionalSubForm\",\n          \"InheritedIRASubForm\",\n          \"QuestionShowFieldsAirplane\",\n        ],\n        StepQuestionContributionDistributionSubForm: [\n          \"QuestionContributionDistributionSubForm\",\n          \"ContributionSubForm\",\n        ],\n        StepSellingAssetCostsInformation: [\n          \"SellingAssetCostsSubForm\",\n          \"QuestionShowFieldsAirplane\",\n        ],\n        StepAdditionalAssetInformation: [\n          \"CollectiblesSubForm\",\n          \"LiveStockSubForm\",\n          \"VCSubForm\",\n          \"CommittmentSubForm\",\n          \"PrimaryResidenceSubForm\",\n          \"PropertySubForm\",\n          \"InvestmentPropertySubForm\",\n          \"InvestmentPropertyExpensesSubForm\",\n          \"StockSubForm\",\n          \"UserPortfolioSubForm\",\n        ],\n        StepAssetPerformanceSubForm: [\"AssetPerformanceSubForm\"],\n        StepTaxLiquiditySubForm: [\"TaxLiquiditySubForm\"],\n      },\n      isEndForm: false\n    };\n\n    this.goSubForm = this.goSubForm.bind(this);\n    this.updateSubForm = this.updateSubForm.bind(this);\n    this.getSubFormData = this.getSubFormData.bind(this);\n    this.getSubFormField = this.getSubFormField.bind(this);\n\n    this.createQLVariable = this.createQLVariable.bind(this);\n    this.getSubFormFieldValue = this.getSubFormFieldValue.bind(this);\n\n    this.toggleRightSide = this.toggleRightSide.bind(this);\n\n    this.loadDBData = this.loadDBData.bind(this);\n\n    this.getRightSideFormData = this.getRightSideFormData.bind(this);\n    this.getTopNav = this.getTopNav.bind(this);\n\n    this.goNext = this.goNext.bind(this);\n    this.goPrev = this.goPrev.bind(this);\n  }\n\n  componentDidMount() {\n    this.goSubForm(this.state.formSteps[0][\"id\"]);\n    this.showAssetsData();\n    // this.goSubForm(\"TaxLiquiditySubForm\");\n  }\n\n  showAssetsData = async (props) => {\n    console.log(\"api update in assets\", this.state.dbID);\n    try {\n      if (this.state.dbID != null && this.state.dbID != \"\") {\n        let UpdatedData = await MODULE_API.fetchDetails(`${this.state.dbID}`);\n        console.log(\"UpdatedData\", UpdatedData)\n        if (UpdatedData && UpdatedData.data) {\n          console.log(\"call..\", UpdatedData);\n          this.loadDBData(initialFormData(UpdatedData.data))\n          // props.cbLoadDBData(initialFormData(UpdatedData.data));\n        }\n      }\n    } catch (e) {\n      console.log(\"e\", e);\n    }\n\n  };\n\n  getSubFormField(formID, fieldID) {\n    let formData = this.state.formData;\n\n    for (var index = 0; index < formData.length; index++) {\n      if (formData[index][\"id\"] == formID) {\n        let data = formData[index][\"data\"];\n        let fields = data[\"fields\"];\n        for (var findex = 0; findex < fields.length; findex++) {\n          if (fields[findex][\"id\"] == fieldID) {\n            return fields[findex];\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n\n  getSubFormFieldValue(formID, fieldID) {\n    let field = this.getSubFormField(formID, fieldID);\n\n    if (field == null) {\n      return \"\";\n    } else {\n      return field.value;\n    }\n  }\n\n  createQLVariable(subFormID, subFormData) {\n    let varQL = null;\n\n    switch (subFormID) {\n      case \"AssetInformationSubForm\":\n        varQL = {\n          asset: {\n            name: this.getSubFormFieldValue(subFormID, \"name\"),\n            accountType: this.getSubFormFieldValue(subFormID, \"accountType\"),\n            owner: this.getSubFormFieldValue(subFormID, \"owner\"),\n            heldWhere: this.getSubFormFieldValue(subFormID, \"heldWhere\"),\n            last4DigitsOfAccount: this.getSubFormFieldValue(\n              subFormID,\n              \"accountDigits\"\n            ),\n            status: this.getSubFormFieldValue(subFormID, \"assetStatus\"),\n          },\n        };\n        break;\n      case \"QuestionContributionDistributionSubForm\":\n        varQL = {\n          inheritedInformation: {\n            regularContributionsOrDistributions:\n              parseInt(\n                this.getSubFormFieldValue(subFormID, \"regularContribution\")\n              ) == \"Yes\"\n                ? true\n                : false,\n          },\n        };\n        break;\n      case \"QuestionRMDAdditionalSubForm\":\n        varQL = {\n          additionalQuestion: {\n            isSpouseSoleBeneficiary:\n              this.getSubFormFieldValue(subFormID, \"isSpouseSole\") == \"Yes\"\n                ? true\n                : false,\n          },\n        };\n        break;\n      case \"QuestionShowFieldsAirplane\":\n        varQL = {\n          additionalQuestion: {\n            isShowFields:\n              this.getSubFormFieldValue(subFormID, \"isShowfield\") == \"Yes\"\n                ? true\n                : false,\n          },\n        };\n        break;\n\n      case \"InheritedIRASubForm\":\n        varQL = {\n          inheritedInformation: {\n            deceasedIraOwnersBirthdate: this.getSubFormFieldValue(\n              subFormID,\n              \"birthDate\"\n            ),\n            deceasedIraOwnersDeathDate: this.getSubFormFieldValue(\n              subFormID,\n              \"deathDate\"\n            ),\n            ownersRelationshipToDeceased: this.getSubFormFieldValue(\n              subFormID,\n              \"relationship\"\n            ),\n          },\n        };\n        break;\n      case \"ContributionSubForm\":\n        varQL = {\n          contributionOrDistributions: subFormData[\"rows\"],\n        };\n        break;\n      case \"AssetAllocationSubForm\":\n        varQL = {\n          assetAllocation: {\n            assetAllocation: this.getSubFormFieldValue(\n              subFormID,\n              \"assetsAllocation\"\n            ),\n          },\n        };\n        break;\n      case \"SellingAssetCostsSubForm\":\n        varQL = {\n          sellingAssetCost: {\n            dateOfSale: this.getSubFormFieldValue(subFormID, \"saleDate\"),\n            totalLiabilities:\n              this.getSubFormFieldValue(subFormID, \"totalLiabilities\") != \"\"\n                ? parseInt(\n                  this.getSubFormFieldValue(subFormID, \"totalLiabilities\")\n                )\n                : 0,\n            totalNetSoldValue:\n              this.getSubFormFieldValue(subFormID, \"totalNetSoldValue\") != \"\"\n                ? parseInt(\n                  this.getSubFormFieldValue(subFormID, \"totalNetSoldValue\")\n                )\n                : 0,\n            commisionOnSale:\n              this.getSubFormFieldValue(subFormID, \"commissionSale\") != \"\"\n                ? parseInt(\n                  this.getSubFormFieldValue(subFormID, \"commissionSale\")\n                )\n                : 0,\n            valueBasedOnRateOfReturn:\n              this.getSubFormFieldValue(subFormID, \"rateReturnValue\") != \"\"\n                ? parseInt(\n                  this.getSubFormFieldValue(subFormID, \"rateReturnValue\")\n                )\n                : 0,\n            otherTransactionCosts:\n              this.getSubFormFieldValue(subFormID, \"otherTransactionCosts\") !=\n                \"\"\n                ? parseInt(\n                  this.getSubFormFieldValue(\n                    subFormID,\n                    \"otherTransactionCosts\"\n                  )\n                )\n                : 0,\n            actualValueAtSaleDate:\n              this.getSubFormFieldValue(subFormID, \"actualValue\") != \"\"\n                ? parseInt(this.getSubFormFieldValue(subFormID, \"actualValue\"))\n                : 0,\n            taxes:\n              this.getSubFormFieldValue(subFormID, \"taxes\") != \"\"\n                ? parseInt(this.getSubFormFieldValue(subFormID, \"taxes\"))\n                : 0,\n          },\n        };\n        break;\n      case \"AssetPerformanceSubForm\":\n        varQL = {\n          assetPerformance: {\n            monetaryValue: parseFloat(\n              this.getSubFormFieldValue(subFormID, \"monetaryValue\")\n            ),\n            rateOfReturn: this.getSubFormFieldValue(subFormID, \"returnRate\"),\n            valueAsOfDate: this.getSubFormFieldValue(subFormID, \"dateValue\"),\n          },\n        };\n        break;\n      case \"CollectiblesSubForm\":\n        varQL = {\n          collectible: {\n            year: this.getSubFormFieldValue(subFormID, \"year\"),\n            describeCollectible: this.getSubFormFieldValue(\n              subFormID,\n              \"description\"\n            ),\n            // \"dollarAppliedToMonthlyBudget\": this.getSubFormFieldValue(subFormID, 'monthlyBudget') != '' ? parseInt(this.getSubFormFieldValue(subFormID, 'monthlyBudget')) : 0,\n            typeOfCollectible: this.getSubFormFieldValue(\n              subFormID,\n              \"collectibleType\"\n            ),\n            model: this.getSubFormFieldValue(subFormID, \"model\"),\n            make: this.getSubFormFieldValue(subFormID, \"make\"),\n            purchasePrice:\n              this.getSubFormFieldValue(subFormID, \"purchasePrice\") != \"\"\n                ? parseInt(\n                  this.getSubFormFieldValue(subFormID, \"purchasePrice\")\n                )\n                : 0,\n            appraised:\n              this.getSubFormFieldValue(subFormID, \"appraised\") == \"Yes\"\n                ? true\n                : false,\n            insured:\n              this.getSubFormFieldValue(subFormID, \"insured\") == \"Yes\"\n                ? true\n                : false,\n          },\n        };\n        break;\n      case \"LiveStockSubForm\":\n        varQL = {\n          livestocks: subFormData[\"rows\"],\n        };\n        break;\n      case \"VCSubForm\":\n        varQL = {\n          privatePlacementAndVc: {\n            nickname: this.getSubFormFieldValue(subFormID, \"nickname\"),\n            additionalFutureCommittments:\n              this.getSubFormFieldValue(subFormID, \"additionalCommittments\") ==\n                \"Yes\"\n                ? true\n                : false,\n          },\n        };\n        break;\n      case \"CommittmentSubForm\":\n        varQL = {\n          privatePlacementAndVc: {\n            whenFutureCommittmentDate: this.getSubFormFieldValue(\n              subFormID,\n              \"committmentDate\"\n            ),\n            futureCommittmentDollarAmount:\n              this.getSubFormFieldValue(subFormID, \"committmentAmount\") != \"\"\n                ? parseInt(\n                  this.getSubFormFieldValue(subFormID, \"committmentAmount\")\n                )\n                : 0,\n          },\n        };\n        break;\n      case \"PrimaryResidenceSubForm\":\n        break;\n      case \"PropertySubForm\":\n        varQL = {\n          realState: {\n            typeOfProperty: this.getSubFormFieldValue(\n              subFormID,\n              \"propertyType\"\n            ),\n          },\n        };\n        break;\n      case \"InvestmentPropertySubForm\":\n        varQL = {\n          realState: {\n            purchasePriceOfProperty:\n              this.getSubFormFieldValue(subFormID, \"purchasePrice\") != \"\"\n                ? parseInt(\n                  this.getSubFormFieldValue(subFormID, \"purchasePrice\")\n                )\n                : 0,\n            monthlyLease:\n              this.getSubFormFieldValue(subFormID, \"monthlyRent\") != \"\"\n                ? parseInt(this.getSubFormFieldValue(subFormID, \"monthlyRent\"))\n                : 0,\n            totalMonthlyExpenses:\n              this.getSubFormFieldValue(subFormID, \"totalMonthlyExpenses\") != \"\"\n                ? parseInt(\n                  this.getSubFormFieldValue(subFormID, \"totalMonthlyExpenses\")\n                )\n                : 0,\n            downpayment:\n              this.getSubFormFieldValue(subFormID, \"downPayment\") != \"\"\n                ? parseInt(this.getSubFormFieldValue(subFormID, \"downPayment\"))\n                : 0,\n            investmentPropertyAddress: this.getSubFormFieldValue(\n              subFormID,\n              \"investmentPropertyAddress\"\n            ),\n          },\n        };\n        break;\n      case \"InvestmentPropertyExpensesSubForm\":\n        varQL = {\n          investmentPropertyExpenses: subFormData[\"rows\"],\n        };\n        break;\n      case \"StockSubForm\":\n        varQL = {\n          stockIndividualSubforms: subFormData[\"rows\"],\n        };\n        break;\n      case \"UserPortfolioSubForm\":\n        varQL = {\n          userDefinedPortfolio: {\n            portfolioPercentageOfSAndP500:\n              this.getSubFormFieldValue(subFormID, \"spPortfolio\") != \"\"\n                ? parseInt(this.getSubFormFieldValue(subFormID, \"spPortfolio\"))\n                : 0,\n            portfolioPercentageOfRealEstate:\n              this.getSubFormFieldValue(subFormID, \"realEstatePortfolio\") != \"\"\n                ? parseInt(\n                  this.getSubFormFieldValue(subFormID, \"realEstatePortfolio\")\n                )\n                : 0,\n            portfolioPercentageOfBonds:\n              this.getSubFormFieldValue(subFormID, \"bondsPortfolio\") != \"\"\n                ? parseInt(\n                  this.getSubFormFieldValue(subFormID, \"bondsPortfolio\")\n                )\n                : 0,\n            portfolioPercentageOfCash:\n              this.getSubFormFieldValue(subFormID, \"cashPortfolio\") != \"\"\n                ? parseInt(\n                  this.getSubFormFieldValue(subFormID, \"cashPortfolio\")\n                )\n                : 0,\n            portfolioPercentageOfGold:\n              this.getSubFormFieldValue(subFormID, \"goldPortfolio\") != \"\"\n                ? parseInt(\n                  this.getSubFormFieldValue(subFormID, \"goldPortfolio\")\n                )\n                : 0,\n            totalPercentage:\n              this.getSubFormFieldValue(subFormID, \"totalPercentage\") != \"\"\n                ? parseInt(\n                  this.getSubFormFieldValue(subFormID, \"totalPercentage\")\n                )\n                : 0,\n          },\n        };\n        break;\n      case \"TaxLiquiditySubForm\":\n        varQL = {\n          taxAndLiquidity: {\n            costBasis:\n              this.getSubFormFieldValue(subFormID, \"basisCost\") != \"\"\n                ? parseInt(this.getSubFormFieldValue(subFormID, \"basisCost\"))\n                : 0,\n            costBasisDate: this.getSubFormFieldValue(\n              subFormID,\n              \"costBasisDate\"\n            ),\n            taxibility:\n              this.getSubFormFieldValue(subFormID, \"taxability\") == \"Taxable\"\n                ? true\n                : false,\n            // \"rmdEligible\":\n            thisAssetIsLiquid:\n              this.getSubFormFieldValue(subFormID, \"assetLiquid\") == \"Yes\"\n                ? true\n                : false,\n            abilityForPartialSale:\n              this.getSubFormFieldValue(subFormID, \"partialSaleAbility\") ==\n                \"Yes\"\n                ? true\n                : false,\n            taxabilityOnDistribution: this.getSubFormFieldValue(\n              subFormID,\n              \"distributionTaxability\"\n            ),\n          },\n        };\n        break;\n      case \"EndSubForm\":\n    }\n\n    return varQL;\n  }\n\n  updateSubForm(subFormID, subFormData, visible = true, bEnd = false) {\n    console.log(\"subFormID\", subFormID);\n    let formData = this.state.formData;\n    var bFound = false;\n    for (var findex = 0; findex < formData.length; findex++) {\n      if (formData[findex][\"id\"] == subFormID) {\n        formData[findex][\"data\"] = subFormData;\n        bFound = true;\n      }\n    }\n\n    if (!bFound) {\n      formData.push({\n        id: subFormID,\n        data: subFormData,\n        visible: visible,\n      });\n    }\n\n    console.log(\"updateSubForm>>>\", formData);\n\n    let varQL = this.createQLVariable(subFormID, subFormData);\n\n    console.log(\"varQL:\", varQL, \", dataID:\", this.state.dataID);\n    // varQL = null;\n    var instance = this;\n    if (varQL != null) {\n      if (this.state.dataID == null) {\n        fnMutationAssetsAdd({ variables: { data: varQL } }).then((response) => {\n          instance.setState({\n            dataID: response[\"data\"][\"createAsset\"][\"id\"],\n          });\n        });\n      } else {\n        fnMutationAssetsUpdate({\n          variables: { id: this.state.dataID, data: varQL },\n        }).then((response) => {\n          if (bEnd) {\n            alert(\"Updated Successfully\");\n            instance.props.history.push(\"/assets\");\n          }\n        });\n      }\n    }\n\n    this.setState({\n      formData: formData,\n    });\n  }\n\n  getSubFormData(subFormID, fromState = true, pformData) {\n    let formData;\n    if (fromState) {\n      formData = this.state.formData;\n    } else {\n      formData = pformData;\n    }\n\n    for (var findex = 0; findex < formData.length; findex++) {\n      if (formData[findex][\"id\"] == subFormID) {\n        return formData[findex][\"data\"];\n      }\n    }\n\n    return {};\n  }\n\n  goSubForm(subFormID) {\n    this.setState({\n      formVisible: false,\n    });\n\n    if (subFormID === 'StepAssetAllocationSubForm') {\n      let fd = initialFormData({});\n      this.setState({ formData: fd, isEndForm: false })\n    }\n\n    let nextSubForm = AssetInformationSubForm;\n\n    switch (subFormID) {\n      case \"AssetInformationSubForm\":\n        nextSubForm = AssetInformationSubForm;\n        this.setState({ isEndForm: false })\n        break;\n      case \"StepAssetInformationSubForm\":\n        nextSubForm = AssetInformationSubForm;\n        subFormID = \"AssetInformationSubForm\";\n        break;\n      case \"QuestionContributionDistributionSubForm\":\n        nextSubForm = QuestionContributionDistributionSubForm;\n        break;\n      case \"StepQuestionContributionDistributionSubForm\":\n        nextSubForm = QuestionContributionDistributionSubForm;\n        subFormID = \"QuestionContributionDistributionSubForm\";\n        break;\n      case \"QuestionRMDAdditionalSubForm\":\n        nextSubForm = QuestionRMDAdditionalSubForm;\n        break;\n      case \"QuestionShowFieldsAirplane\":\n        nextSubForm = QuestionShowFieldsAirplane;\n        break;\n      case \"InheritedIRASubForm\":\n        nextSubForm = InheritedIRASubForm;\n        break;\n      case \"ContributionSubForm\":\n        nextSubForm = ContributionSubForm;\n        break;\n      case \"AssetAllocationSubForm\":\n        nextSubForm = AssetAllocationSubForm;\n        break;\n      case \"StepAssetAllocationSubForm\":\n        nextSubForm = AssetAllocationSubForm;\n        subFormID = \"AssetAllocationSubForm\";\n        break;\n      case \"SellingAssetCostsSubForm\":\n        nextSubForm = SellingAssetCostsSubForm;\n        break;\n      case \"AssetPerformanceSubForm\":\n        nextSubForm = AssetPerformanceSubForm;\n        break;\n      case \"StepAssetPerformanceSubForm\":\n        nextSubForm = AssetPerformanceSubForm;\n        subFormID = \"AssetPerformanceSubForm\";\n        break;\n      case \"CollectiblesSubForm\":\n        nextSubForm = CollectiblesSubForm;\n        break;\n      case \"LiveStockSubForm\":\n        nextSubForm = LiveStockSubForm;\n        break;\n      case \"VCSubForm\":\n        nextSubForm = VCSubForm;\n        break;\n      case \"CommittmentSubForm\":\n        nextSubForm = CommittmentSubForm;\n        break;\n      case \"PrimaryResidenceSubForm\":\n        nextSubForm = PrimaryResidenceSubForm;\n        break;\n      case \"PropertySubForm\":\n        nextSubForm = PropertySubForm;\n        break;\n      case \"InvestmentPropertySubForm\":\n        nextSubForm = InvestmentPropertySubForm;\n        break;\n      case \"InvestmentPropertyExpensesSubForm\":\n        nextSubForm = InvestmentPropertyExpensesSubForm;\n        break;\n      case \"StockSubForm\":\n        nextSubForm = StockSubForm;\n        break;\n      case \"UserPortfolioSubForm\":\n        nextSubForm = UserPortfolioSubForm;\n        break;\n      case \"TaxLiquiditySubForm\":\n        nextSubForm = TaxLiquiditySubForm;\n        break;\n      case \"StepTaxLiquiditySubForm\":\n        nextSubForm = TaxLiquiditySubForm;\n        subFormID = \"TaxLiquiditySubForm\";\n        break;\n      case \"EndSubForm\":\n        nextSubForm = EndSubForm;\n        this.setState({ isEndForm: true })\n        break;\n      case \"StepAccountTypeQuestions\":\n        switch (\n        this.getSubFormFieldValue(\"AssetInformationSubForm\", \"accountType\")\n        ) {\n          case \"529\":\n          case \"Custodial\":\n          case \"Coverdell Education\":\n          case \"Individual\":\n          case \"Health Savings Account\":\n          case \"Joint - Tenants In Common\":\n          case \"Joint\":\n          case \"Roth\":\n          case \"Trust\":\n            nextSubForm = QuestionContributionDistributionSubForm;\n            subFormID = \"QuestionContributionDistributionSubForm\";\n            break;\n          default:\n            nextSubForm = QuestionRMDAdditionalSubForm;\n            subFormID = \"QuestionRMDAdditionalSubForm\";\n        }\n        break;\n\n      case \"StepAdditionalAssetInformation\":\n        switch (\n        this.getSubFormFieldValue(\n          \"AssetAllocationSubForm\",\n          \"assetsAllocation\"\n        )\n        ) {\n          case \"Airplane\":\n          case \"Auto - non-collectible\":\n          case \"Boat\":\n          case \"General Household\":\n          case \"Motorcycles\":\n            nextSubForm = QuestionShowFieldsAirplane;\n            subFormID = \"QuestionShowFieldsAirplane\";\n            break;\n          case \"Indexes, ETF's and Mutual Funds\":\n          case \"Bonds - Int  Long Term\":\n          case \"Business Interest\":\n          case \"Cash/CD's T-Bills\":\n          case \"Club Membership\":\n            nextSubForm = SellingAssetCostsSubForm;\n            subFormID = \"SellingAssetCostsSubForm\";\n            break;\n          case \"Collectibles\":\n            nextSubForm = CollectiblesSubForm;\n            subFormID = \"CollectiblesSubForm\";\n            break;\n          case \"Livestock\":\n            nextSubForm = LiveStockSubForm;\n            subFormID = \"LiveStockSubForm\";\n            break;\n          case \"Private Placement & VC\":\n            nextSubForm = VCSubForm;\n            subFormID = \"VCSubForm\";\n            break;\n          case \"Real Estate\":\n            nextSubForm = PrimaryResidenceSubForm;\n            subFormID = \"PrimaryResidenceSubForm\";\n            break;\n          case \"Stocks - Individual\":\n            nextSubForm = StockSubForm;\n            subFormID = \"StockSubForm\";\n            break;\n          case \"User Defined Portfolio Allocation\":\n            nextSubForm = UserPortfolioSubForm;\n            subFormID = \"UserPortfolioSubForm\";\n            break;\n          default:\n            nextSubForm = AssetAllocationSubForm;\n            subFormID = \"AssetAllocationSubForm\";\n        }\n        break;\n\n      case \"StepSellingAssetCostsInformation\":\n        switch (\n        this.getSubFormFieldValue(\n          \"AssetAllocationSubForm\",\n          \"assetsAllocation\"\n        )\n        ) {\n          case \"Airplane\":\n          case \"Auto - non-collectible\":\n          case \"Boat\":\n          case \"Motorcycles\":\n            nextSubForm = QuestionShowFieldsAirplane;\n            subFormID = \"QuestionShowFieldsAirplane\";\n            break;\n          // case \"Indexes, ETF's and Mutual Funds\":\n          // case \"Bonds - Int \\ Long Term\":\n          // case \"Business Interest\":\n          // case \"Cash/CD's T-Bills\":\n          // case \"Club Membership\":\n          //     nextSubForm = SellingAssetCostsSubForm;\n          //     subFormID = \"SellingAssetCostsSubForm\";\n          //     break;\n          // case \"Collectibles\":\n          //     nextSubForm = CollectiblesSubForm;\n          //     subFormID = \"CollectiblesSubForm\";\n          //     break;\n          // case \"Livestock\":\n          //     nextSubForm = LiveStockSubForm;\n          //     subFormID = \"LiveStockSubForm\";\n          //     break;\n          // case \"Private Placement & VC\":\n          //     nextSubForm = VCSubForm;\n          //     subFormID = \"VCSubForm\";\n          //     break;\n          // case \"Real Estate\":\n          //     nextSubForm = PrimaryResidenceSubForm;\n          //     subFormID = \"PrimaryResidenceSubForm\";\n          //     break;\n          // case \"Stocks - Individual\":\n          //     nextSubForm = StockSubForm;\n          //     subFormID = \"StockSubForm\";\n          //     break;\n          // case \"User Defined Portfolio Allocation\":\n          //     nextSubForm = UserPortfolioSubForm;\n          //     subFormID = \"UserPortfolioSubForm\";\n          //     break;\n          default:\n            nextSubForm = AssetAllocationSubForm;\n            subFormID = \"AssetAllocationSubForm\";\n        }\n        break;\n    }\n\n    let subFormData = this.getSubFormData(subFormID);\n\n    setTimeout(() => {\n      this.setState({\n        formVisible: true,\n        curSubFormID: subFormID,\n        curSubForm: nextSubForm,\n        subFormData: subFormData,\n      });\n    }, 100);\n  }\n\n  toggleRightSide = (e) => {\n    e.preventDefault();\n    this.setState({ isRightSideOpen: !this.state.isRightSideOpen });\n  };\n\n  loadDBData(formData) {\n    console.log(\"loadDBData formData:\", formData);\n\n    var instance = this;\n    setTimeout(function () {\n      instance.setState({\n        formVisible: true,\n        dbLoaded: true,\n        formData: formData,\n        subFormData: instance.getSubFormData(\n          instance.state.curSubFormID,\n          false,\n          formData\n        ),\n      });\n    }, 100);\n  }\n\n  getTopNav(formStep) {\n    let disabled = false;\n    let active = false;\n\n    let assetsAllocation = this.getSubFormFieldValue(\n      \"AssetAllocationSubForm\",\n      \"assetsAllocation\"\n    );\n    let isSpouseSole = this.getSubFormFieldValue(\n      \"QuestionRMDAdditionalSubForm\",\n      \"isSpouseSole\"\n    );\n    let accountType = this.getSubFormFieldValue(\n      \"AssetInformationSubForm\",\n      \"accountType\"\n    );\n    let regularContribution = this.getSubFormFieldValue(\n      \"QuestionContributionDistributionSubForm\",\n      \"regularContribution\"\n    );\n    let isPrimaryResidence = this.getSubFormFieldValue(\n      \"PrimaryResidenceSubForm\",\n      \"isPrimaryResidence\"\n    );\n    // formStep2FormMap\n    // this.state.curSubFormID\n    //getting stepid from subform\n    let curSubFormStepIndex = -1;\n    for (var sindex = 0; sindex < this.state.formSteps.length; sindex++) {\n      if (this.state.curSubFormID == \"EndSubForm\") {\n        if (this.state.formSteps[sindex].id == formStep.id) {\n          curSubFormStepIndex = sindex;\n          break;\n        }\n      }\n      for (\n        var findex = 0;\n        findex <\n        this.state.formStep2FormMap[this.state.formSteps[sindex].id].length;\n        findex++\n      ) {\n        if (\n          this.state.formStep2FormMap[this.state.formSteps[sindex].id][\n          findex\n          ] == this.state.curSubFormID\n        ) {\n          curSubFormStepIndex = sindex;\n          break;\n        }\n      }\n    }\n\n    if (this.state.isEndForm && formStep.id !== 'StepAssetAllocationSubForm') {\n      return {\n        disabled: true,\n        active: false,\n      };\n    }\n\n    if (assetsAllocation != null && assetsAllocation != \"\") {\n      switch (formStep.id) {\n        case \"StepAssetAllocationSubForm\":\n          if (curSubFormStepIndex === 0) {\n            if (this.state.isEndForm) {\n              disabled = false;\n              active = true;\n            } else {\n              disabled = true;\n              active = false;\n              assetsAllocation = '';\n            }\n          }\n          if (curSubFormStepIndex >= 0) {\n            active = true;\n          }\n          break;\n\n        case \"StepAssetInformationSubForm\":\n          if (curSubFormStepIndex >= 1) {\n            active = true;\n          }\n          break;\n        case \"StepSellingAssetCostsInformation\":\n          if (curSubFormStepIndex >= 5) {\n            active = true;\n          }\n          switch (assetsAllocation) {\n            // case \"General Household\":\n            case \"Club Membership\":\n            case \"Real Estate\":\n            case \"Business Interest\":\n            case \"Livestock\":\n            case \"Collectibles\":\n            case \"Private Placement & VC\":\n            // case \"Cash/CD's T-Bills\":\n            // case \"Bonds - Int  Long Term\":\n            // case \"Indexes, ETF's and Mutual Funds\":\n            case \"Stocks - Individual\":\n            // case \"Trust Deeds\":\n            case \"User Defined Portfolio Allocation\":\n              disabled = true;\n          }\n\n          break;\n\n        case \"StepAdditionalAssetInformation\":\n          if (curSubFormStepIndex >= 4) {\n            active = true;\n          }\n          switch (assetsAllocation) {\n            case \"Airplane\":\n            case \"Boat\":\n            case \"Motorcycles\":\n            case \"Auto - non-collectible\":\n            case \"Bonds - Int  Long Term\":\n            case \"Indexes, ETF's and Mutual Funds\":\n            case \"General Household\":\n            case \"Cash/CD's T-Bills\":\n            case \"Trust Deeds\":\n              disabled = true;\n          }\n          break;\n\n        case \"StepAccountTypeQuestions\":\n          if (curSubFormStepIndex >= 2) {\n            active = true;\n          }\n          switch (assetsAllocation) {\n            case \"Airplane\":\n            case \"Boat\":\n            case \"Motorcycles\":\n            case \"General Household\":\n            case \"Club Membership\":\n            case \"Real Estate\":\n            case \"Auto - non-collectible\":\n            case \"Business Interest\":\n            case \"Livestock\":\n            case \"Collectibles\":\n            case \"Private Placement & VC\":\n            case \"Cash/CD's T-Bills\":\n              disabled = true;\n          }\n          break;\n        case \"StepQuestionContributionDistributionSubForm\":\n          if (curSubFormStepIndex >= 3) {\n            active = true;\n          }\n          switch (assetsAllocation) {\n            case \"Airplane\":\n            case \"Boat\":\n            case \"Motorcycles\":\n            case \"General Household\":\n            case \"Club Membership\":\n            case \"Real Estate\":\n            case \"Auto - non-collectible\":\n            case \"Business Interest\":\n            case \"Livestock\":\n            case \"Collectibles\":\n            case \"Private Placement & VC\":\n              disabled = true;\n          }\n          break;\n        case \"StepAdditionalAssetInformation\":\n          if (curSubFormStepIndex >= 4) {\n            active = true;\n          }\n          switch (assetsAllocation) {\n            case \"Indexes, ETF's and Mutual Funds\":\n            case \"Bonds - Int  Long Term\":\n            // case \"Club Membership\":\n            case \"Business Interest\":\n            case \"Cash/CD's T-Bills\":\n              disabled = true;\n          }\n          break;\n        case \"StepAssetPerformanceSubForm\":\n          if (curSubFormStepIndex >= 6) {\n            active = true;\n          }\n          break;\n        case \"StepTaxLiquiditySubForm\":\n          if (curSubFormStepIndex >= 7) {\n            active = true;\n          }\n          break;\n      }\n    } else {\n      if (formStep.id != \"StepAssetAllocationSubForm\") {\n        disabled = true;\n      }\n    }\n\n    return {\n      disabled: disabled,\n      active: active,\n    };\n  }\n  getRightSideFormData(formStep) {\n    let formData = [];\n    let assetsAllocation = this.getSubFormFieldValue(\n      \"AssetAllocationSubForm\",\n      \"assetsAllocation\"\n    );\n    let isSpouseSole = this.getSubFormFieldValue(\n      \"QuestionRMDAdditionalSubForm\",\n      \"isSpouseSole\"\n    );\n    let accountType = this.getSubFormFieldValue(\n      \"AssetInformationSubForm\",\n      \"accountType\"\n    );\n    let regularContribution = this.getSubFormFieldValue(\n      \"QuestionContributionDistributionSubForm\",\n      \"regularContribution\"\n    );\n    let isPrimaryResidence = this.getSubFormFieldValue(\n      \"PrimaryResidenceSubForm\",\n      \"isPrimaryResidence\"\n    );\n\n    if (assetsAllocation == null || assetsAllocation == \"\") {\n      return formData;\n    }\n\n    for (var index = 0; index < this.state.formData.length; index++) {\n      if (formStep.id == this.state.formData[index][\"stepId\"]) {\n        switch (formStep.id) {\n          case \"StepAssetAllocationSubForm\":\n            formData.push(this.state.formData[index]);\n            break;\n          case \"StepAssetInformationSubForm\":\n            formData.push(this.state.formData[index]);\n            break;\n          case \"StepAccountTypeQuestions\":\n            switch (assetsAllocation) {\n              case \"Airplane\":\n              case \"Boat\":\n              case \"Motorcycles\":\n              case \"General Household\":\n              case \"Club Membership\":\n              case \"Real Estate\":\n              case \"Auto - non-collectible\":\n              case \"Business Interest\":\n              case \"Livestock\":\n              case \"Collectibles\":\n              case \"Private Placement & VC\":\n              case \"Cash/CD's T-Bills\":\n                break;\n              default:\n                if (this.state.formData[index][\"id\"] == \"InheritedIRASubForm\") {\n                  if (accountType == \"IRA Inherited\") {\n                    formData.push(this.state.formData[index]);\n                  }\n                } else {\n                  formData.push(this.state.formData[index]);\n                }\n\n                break;\n            }\n            break;\n          case \"StepQuestionContributionDistributionSubForm\":\n            switch (assetsAllocation) {\n              case \"Airplane\":\n              case \"Boat\":\n              case \"Motorcycles\":\n              case \"General Household\":\n              case \"Club Membership\":\n              case \"Real Estate\":\n              case \"Auto - non-collectible\":\n              case \"Business Interest\":\n              case \"Livestock\":\n              case \"Collectibles\":\n              case \"Private Placement & VC\":\n                break;\n              default:\n                if (this.state.formData[index][\"id\"] == \"ContributionSubForm\") {\n                  if (regularContribution == \"Yes\") {\n                    formData.push(this.state.formData[index]);\n                  }\n                } else {\n                  formData.push(this.state.formData[index]);\n                }\n                break;\n            }\n            break;\n          case \"StepAdditionalAssetInformation\":\n            if (\n              assetsAllocation == \"Stocks - Individual\" &&\n              this.state.formData[index][\"id\"] == \"StockSubForm\"\n            ) {\n              console.log(this.state.formData[index][\"data\"][\"rows\"]);\n              formData.push(this.state.formData[index]);\n            } else if (\n              assetsAllocation == \"User Defined Portfolio Allocation\" &&\n              this.state.formData[index][\"id\"] == \"UserPortfolioSubForm\"\n            ) {\n              formData.push(this.state.formData[index]);\n            } else if (\n              assetsAllocation == \"Airplane\" &&\n              this.state.formData[index][\"id\"] == \"SellingAssetCostsSubForm\"\n            ) {\n              formData.push(this.state.formData[index]);\n            } else if (\n              assetsAllocation == \"Boat\" &&\n              this.state.formData[index][\"id\"] == \"SellingAssetCostsSubForm\"\n            ) {\n              formData.push(this.state.formData[index]);\n            } else if (\n              assetsAllocation == \"Motorcycles\" &&\n              this.state.formData[index][\"id\"] == \"SellingAssetCostsSubForm\"\n            ) {\n              formData.push(this.state.formData[index]);\n            } else if (\n              assetsAllocation == \"General Household\" &&\n              this.state.formData[index][\"id\"] == \"SellingAssetCostsSubForm\"\n            ) {\n              formData.push(this.state.formData[index]);\n            } else if (\n              assetsAllocation == \"Club Membership\" &&\n              this.state.formData[index][\"id\"] == \"SellingAssetCostsSubForm\"\n            ) {\n              formData.push(this.state.formData[index]);\n            } else if (\n              assetsAllocation == \"Real Estate\" &&\n              isPrimaryResidence == \"No\" &&\n              (this.state.formData[index][\"id\"] == \"PropertySubForm\" ||\n                this.state.formData[index][\"id\"] ==\n                \"InvestmentPropertySubForm\" ||\n                this.state.formData[index][\"id\"] ==\n                \"InvestmentPropertyExpensesSubForm\")\n            ) {\n              formData.push(this.state.formData[index]);\n            } else if (\n              assetsAllocation == \"Auto - non-collectible\" &&\n              this.state.formData[index][\"id\"] == \"SellingAssetCostsSubForm\"\n            ) {\n              formData.push(this.state.formData[index]);\n            } else if (\n              assetsAllocation == \"Livestock\" &&\n              this.state.formData[index][\"id\"] == \"LiveStockSubForm\"\n            ) {\n              formData.push(this.state.formData[index]);\n            } else if (\n              assetsAllocation == \"Collectibles\" &&\n              this.state.formData[index][\"id\"] == \"CollectiblesSubForm\"\n            ) {\n              formData.push(this.state.formData[index]);\n            } else if (\n              assetsAllocation == \"Private Placement & VC\" &&\n              (this.state.formData[index][\"id\"] == \"VCSubForm\" ||\n                this.state.formData[index][\"id\"] == \"CommittmentSubForm\")\n            ) {\n              formData.push(this.state.formData[index]);\n            }\n            break;\n          case \"StepAssetPerformanceSubForm\":\n            formData.push(this.state.formData[index]);\n            break;\n          case \"StepTaxLiquiditySubForm\":\n            formData.push(this.state.formData[index]);\n            break;\n          default:\n            formData.push(this.state.formData[index]);\n            break;\n        }\n      }\n    }\n\n    return formData;\n  }\n\n  goNext(fromSubFormID) {\n    let nextSubFormID = \"\";\n\n    let assetsAllocation = this.getSubFormFieldValue(\n      \"AssetAllocationSubForm\",\n      \"assetsAllocation\"\n    );\n    let isSpouseSole = this.getSubFormFieldValue(\n      \"QuestionRMDAdditionalSubForm\",\n      \"isSpouseSole\"\n    );\n    let accountType = this.getSubFormFieldValue(\n      \"AssetInformationSubForm\",\n      \"accountType\"\n    );\n    let isShowfield = this.getSubFormFieldValue(\n      \"QuestionShowFieldsAirplane\",\n      \"isShowfield\"\n    );\n    let regularContribution = this.getSubFormFieldValue(\n      \"QuestionContributionDistributionSubForm\",\n      \"regularContribution\"\n    );\n    let isPrimaryResidence = this.getSubFormFieldValue(\n      \"PrimaryResidenceSubForm\",\n      \"isPrimaryResidence\"\n    );\n\n    switch (fromSubFormID) {\n      // StepAssetAllocationSubForm\n      case \"AssetAllocationSubForm\":\n        nextSubFormID = \"AssetInformationSubForm\";\n        break;\n\n      // StepAssetInformationSubForm\n      case \"AssetInformationSubForm\":\n        switch (accountType) {\n          case \"529\":\n          case \"Custodial\":\n          case \"Coverdell Education\":\n          case \"Individual\":\n          case \"Health Savings Account\":\n          case \"Joint\":\n          case \"Roth\":\n          case \"Trust\":\n            nextSubFormID = \"QuestionContributionDistributionSubForm\";\n          default:\n            nextSubFormID = \"QuestionRMDAdditionalSubForm\";\n        }\n\n        switch (assetsAllocation) {\n          case \"Airplane\":\n          case \"Boat\":\n          case \"Motorcycles\":\n          case \"General Household\":\n            nextSubFormID = \"StepAdditionalAssetInformation\";\n            break;\n          case \"Club Membership\":\n            nextSubFormID = \"StepAssetPerformanceSubForm\";\n            break;\n          case \"Real Estate\":\n          case \"Auto - non-collectible\":\n            nextSubFormID = \"StepAdditionalAssetInformation\";\n            break;\n          case \"Business Interest\":\n            nextSubFormID = \"StepAssetPerformanceSubForm\";\n            break;\n          case \"Livestock\":\n          case \"Collectibles\":\n          case \"Private Placement & VC\":\n            nextSubFormID = \"StepAdditionalAssetInformation\";\n            break;\n          case \"Cash/CD's T-Bills\":\n            nextSubFormID = \"StepAdditionalAssetInformation\";\n        }\n        break;\n      // StepAccountTypeQuestions\n      case \"QuestionRMDAdditionalSubForm\":\n        if (accountType == \"IRA Inherited\") {\n          nextSubFormID = \"InheritedIRASubForm\";\n        } else {\n          nextSubFormID = \"QuestionContributionDistributionSubForm\";\n        }\n        switch (assetsAllocation) {\n          case \"Airplane\":\n          case \"Boat\":\n          case \"Motorcycles\":\n          case \"General Household\":\n          case \"Club Membership\":\n          case \"Real Estate\":\n          case \"Auto - non-collectible\":\n          case \"Business Interest\":\n          case \"Livestock\":\n          case \"Collectibles\":\n          case \"Private Placement & VC\":\n            nextSubFormID = \"StepAdditionalAssetInformation\";\n        }\n        break;\n      //juniiii\n      case \"QuestionShowFieldsAirplane\":\n        if (isShowfield == \"Yes\") {\n          nextSubFormID = \"SellingAssetCostsSubForm\";\n        } else {\n          nextSubFormID = \"AssetPerformanceSubForm\";\n        }\n        break;\n      case \"InheritedIRASubForm\":\n        nextSubFormID = \"QuestionContributionDistributionSubForm\";\n        switch (assetsAllocation) {\n          case \"Airplane\":\n          case \"Boat\":\n          case \"Motorcycles\":\n          case \"General Household\":\n          case \"Club Membership\":\n          case \"Real Estate\":\n          case \"Auto - non-collectible\":\n          case \"Business Interest\":\n          case \"Livestock\":\n          case \"Collectibles\":\n          case \"Private Placement & VC\":\n            nextSubFormID = \"StepAdditionalAssetInformation\";\n        }\n        break;\n      // StepQuestionContributionDistributionSubForm\n      case \"QuestionContributionDistributionSubForm\":\n        let regularContribution = this.getSubFormFieldValue(\n          \"QuestionContributionDistributionSubForm\",\n          \"regularContribution\"\n        );\n\n        if (regularContribution == \"Yes\") {\n          nextSubFormID = \"ContributionSubForm\";\n        } else {\n          nextSubFormID = \"StepAdditionalAssetInformation\";\n        }\n        break;\n\n      case \"ContributionSubForm\":\n        nextSubFormID = \"StepAdditionalAssetInformation\";\n        switch (assetsAllocation) {\n          case \"Indexes, ETF's and Mutual Funds\":\n          case \"Bonds - Int  Long Term\":\n          case \"Cash/CD's T-Bills\":\n            nextSubFormID = \"StepAssetPerformanceSubForm\";\n            break;\n        }\n        break;\n\n      // StepAdditionalAssetInformation\n      case \"SellingAssetCostsSubForm\":\n        nextSubFormID = \"AssetPerformanceSubForm\";\n        break;\n      case \"CollectiblesSubForm\":\n        nextSubFormID = \"AssetPerformanceSubForm\";\n        break;\n      case \"LiveStockSubForm\":\n        nextSubFormID = \"AssetPerformanceSubForm\";\n        break;\n      case \"VCSubForm\":\n        let additionalCommittments = this.getSubFormFieldValue(\n          \"VCSubForm\",\n          \"additionalCommittments\"\n        );\n        if (additionalCommittments == \"Yes\") {\n          nextSubFormID = \"CommittmentSubForm\";\n        } else {\n          nextSubFormID = \"AssetPerformanceSubForm\";\n        }\n        break;\n      case \"CommittmentSubForm\":\n        nextSubFormID = \"AssetPerformanceSubForm\";\n        break;\n      case \"PrimaryResidenceSubForm\":\n        let isPrimaryResidence = this.getSubFormFieldValue(\n          \"PrimaryResidenceSubForm\",\n          \"isPrimaryResidence\"\n        );\n        if (isPrimaryResidence == \"Yes\") {\n          nextSubFormID = \"AssetPerformanceSubForm\";\n        } else {\n          nextSubFormID = \"PropertySubForm\";\n        }\n        break;\n      case \"PropertySubForm\":\n        nextSubFormID = \"InvestmentPropertySubForm\";\n        break;\n      case \"InvestmentPropertySubForm\":\n        nextSubFormID = \"InvestmentPropertyExpensesSubForm\";\n        break;\n      case \"InvestmentPropertyExpensesSubForm\":\n        nextSubFormID = \"AssetPerformanceSubForm\";\n        break;\n      case \"StockSubForm\":\n        nextSubFormID = \"AssetPerformanceSubForm\";\n        break;\n      case \"UserPortfolioSubForm\":\n        nextSubFormID = \"AssetPerformanceSubForm\";\n        break;\n      // StepAssetPerformanceSubForm\n      case \"AssetPerformanceSubForm\":\n        nextSubFormID = \"TaxLiquiditySubForm\";\n        break;\n\n      // StepTaxLiquiditySubForm\n      case \"TaxLiquiditySubForm\":\n        nextSubFormID = \"EndSubForm\";\n        break;\n    }\n\n    this.goSubForm(nextSubFormID);\n  }\n\n  goPrev(fromSubFormID) {\n    let prevSubFormID = \"\";\n    let assetsAllocation = this.getSubFormFieldValue(\n      \"AssetAllocationSubForm\",\n      \"assetsAllocation\"\n    );\n\n    switch (fromSubFormID) {\n      // StepAssetAllocationSubForm\n      case \"AssetAllocationSubForm\":\n        prevSubFormID = \"\";\n        break;\n\n      // StepAssetInformationSubForm\n      case \"AssetInformationSubForm\":\n        prevSubFormID = \"AssetAllocationSubForm\";\n        break;\n\n      // StepAccountTypeQuestions\n      case \"QuestionRMDAdditionalSubForm\":\n        prevSubFormID = \"\";\n        break;\n      case \"InheritedIRASubForm\":\n        prevSubFormID = \"QuestionRMDAdditionalSubForm\";\n        break;\n\n      // StepQuestionContributionDistributionSubForm\n      case \"QuestionContributionDistributionSubForm\":\n        prevSubFormID = \"\";\n        break;\n\n      case \"ContributionSubForm\":\n        prevSubFormID = \"QuestionContributionDistributionSubForm\";\n        break;\n\n      // StepAdditionalAssetInformation\n      case \"SellingAssetCostsSubForm\":\n        prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n        switch (assetsAllocation) {\n          case \"Airplane\":\n          case \"Boat\":\n          case \"Motorcycles\":\n          case \"General Household\":\n          case \"Club Membership\":\n          case \"Real Estate\":\n          case \"Auto - non-collectible\":\n          case \"Business Interest\":\n          case \"Livestock\":\n          case \"Collectibles\":\n          case \"Private Placement & VC\":\n            prevSubFormID = \"StepAssetInformationSubForm\";\n        }\n        break;\n      case \"CollectiblesSubForm\":\n        prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n        switch (assetsAllocation) {\n          case \"Airplane\":\n          case \"Boat\":\n          case \"Motorcycles\":\n          case \"General Household\":\n          case \"Club Membership\":\n          case \"Real Estate\":\n          case \"Auto - non-collectible\":\n          case \"Business Interest\":\n          case \"Livestock\":\n          case \"Collectibles\":\n          case \"Private Placement & VC\":\n            prevSubFormID = \"StepAssetInformationSubForm\";\n        }\n        break;\n      case \"LiveStockSubForm\":\n        prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n        switch (assetsAllocation) {\n          case \"Airplane\":\n          case \"Boat\":\n          case \"Motorcycles\":\n          case \"General Household\":\n          case \"Club Membership\":\n          case \"Real Estate\":\n          case \"Auto - non-collectible\":\n          case \"Business Interest\":\n          case \"Livestock\":\n          case \"Collectibles\":\n          case \"Private Placement & VC\":\n            prevSubFormID = \"StepAssetInformationSubForm\";\n        }\n        break;\n      case \"VCSubForm\":\n        prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n        switch (assetsAllocation) {\n          case \"Airplane\":\n          case \"Boat\":\n          case \"Motorcycles\":\n          case \"General Household\":\n          case \"Club Membership\":\n          case \"Real Estate\":\n          case \"Auto - non-collectible\":\n          case \"Business Interest\":\n          case \"Livestock\":\n          case \"Collectibles\":\n          case \"Private Placement & VC\":\n            prevSubFormID = \"StepAssetInformationSubForm\";\n        }\n        break;\n      case \"CommittmentSubForm\":\n        prevSubFormID = \"VCSubForm\";\n        break;\n      case \"PrimaryResidenceSubForm\":\n        prevSubFormID = \"\";\n        break;\n      case \"PropertySubForm\":\n        prevSubFormID = \"\";\n        break;\n      case \"InvestmentPropertySubForm\":\n        prevSubFormID = \"PropertySubForm\";\n        break;\n      case \"InvestmentPropertyExpensesSubForm\":\n        prevSubFormID = \"InvestmentPropertySubForm\";\n        break;\n      case \"StockSubForm\":\n        prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n        switch (assetsAllocation) {\n          case \"Airplane\":\n          case \"Boat\":\n          case \"Motorcycles\":\n          case \"General Household\":\n          case \"Club Membership\":\n          case \"Real Estate\":\n          case \"Auto - non-collectible\":\n          case \"Business Interest\":\n          case \"Livestock\":\n          case \"Collectibles\":\n          case \"Private Placement & VC\":\n            prevSubFormID = \"StepAssetInformationSubForm\";\n        }\n        break;\n      case \"UserPortfolioSubForm\":\n        prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n        switch (assetsAllocation) {\n          case \"Airplane\":\n          case \"Boat\":\n          case \"Motorcycles\":\n          case \"General Household\":\n          case \"Club Membership\":\n          case \"Real Estate\":\n          case \"Auto - non-collectible\":\n          case \"Business Interest\":\n          case \"Livestock\":\n          case \"Collectibles\":\n          case \"Private Placement & VC\":\n            prevSubFormID = \"StepAssetInformationSubForm\";\n        }\n        break;\n\n      // StepAssetPerformanceSubForm\n      case \"AssetPerformanceSubForm\":\n        prevSubFormID = \"StepAdditionalAssetInformation\";\n        switch (assetsAllocation) {\n          case \"Indexes, ETF's and Mutual Funds\":\n          case \"Bonds - Int  Long Term\":\n            prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n            break;\n          case \"Club Membership\":\n          case \"Business Interest\":\n            prevSubFormID = \"StepAssetInformationSubForm\";\n            break;\n          case \"Cash/CD's T-Bills\":\n            prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n        }\n        break;\n\n      // StepTaxLiquiditySubForm\n      case \"TaxLiquiditySubForm\":\n        prevSubFormID = \"AssetPerformanceSubForm\";\n        break;\n    }\n\n    this.goSubForm(prevSubFormID);\n  }\n\n  getBeneficiaryAssignmentData(subFormData, subForm) {\n    return (\n      <React.Fragment>\n        <div className=\"form-brief-top\">\n          <h4 className=\"form-brief-title\">\n            {subFormData[\"BeneficiaryAssignment\"].tittle}\n          </h4>\n          <span\n            className=\"form-brief-edit-btn\"\n            onClick={() => this.goSubForm(subForm.id)}\n          >\n            <Icon type=\"edit\"></Icon>\n          </span>\n\n          {subFormData[\"BeneficiaryAssignment\"].rows &&\n            subFormData[\"BeneficiaryAssignment\"].rows.map((data) => {\n              return (\n                <div className=\"form-brief-item\">\n                  <p className=\"form-brief-item-title\">\n                    {data.beneficiariesName != \"\"\n                      ? data.beneficiariesName + \":\"\n                      : null}{\" \"}\n                  </p>\n                  <p className=\"form-brief-item-value\">{data.percent}</p>\n                </div>\n              );\n            })}\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const navlinks = [\n      {\n        href: \"/\",\n        title: \"Home\",\n      },\n      {\n        href: \"/modules\",\n        title: \"Modules\",\n      },\n      {\n        href: \"/assets\",\n        title: \"Assets\",\n      },\n    ];\n    console.log(\"this.state.curSubForm\", this.state.curSubForm)\n\n    let SubForm = this.state.curSubForm;\n\n    let formpageClassName = \"form-page-container-wrap\";\n    if (this.state.isRightSideOpen) {\n      formpageClassName = \"form-page-container-wrap right-side--opend\";\n    } else {\n      formpageClassName = \"form-page-container-wrap right-side--collapsed\";\n    }\n\n    return (\n      <div className={formpageClassName}>\n        <div className=\"form-page--main-side\">\n          <div className=\"steps\">\n            <div className=\"logo-container align-items-top justify-content-center\">\n              <img className=\"img-asset\" src={AssetPlanet} />\n            </div>\n            <div className=\"process\">\n              <div className=\"process-row\">\n                {this.state.formSteps.map((formStep, index) => {\n                  const { disabled, active } = this.getTopNav(formStep);\n\n                  let className = \"btn nav-items btn-circle\";\n                  if (disabled) {\n                    className = \"btn nav-items btn-circle disabled\";\n                  } else if (active) {\n                    className = \"btn nav-items btn-circle active\";\n                  }\n                  return (\n                    <div className=\"process-step\" key={index}>\n                      <button\n                        type=\"button\"\n                        className={className}\n                        data-toggle=\"tab\"\n                        onClick={() =>\n                          !disabled ? this.goSubForm(formStep.id) : null\n                        }\n                      >\n                        {/* <img className=\"img-icon\" src={ImageIcon} /> */}\n                        <div style={{ fontSize: 30, color: '#006400' }}>\n                          {index + 1}\n                        </div>\n                      </button>\n                      <p className=\"step-title\">{formStep.title}</p>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n          <HiddenHook />\n          {/*!this.state.dbLoaded && (\n            <LoadDBDataHook\n              dbLoaded={this.state.dbLoaded}\n              dbID={this.state.dbID}\n              cbLoadDBData={this.loadDBData}\n            />\n          )*/}\n          <div className=\"container\">\n            <div className=\"page-nav-history\">\n              {/* {navlinks.map((navlink, index) => {\n                return (\n                  <span key={index}>\n                    <Link\n                      key={index}\n                      to={navlink.href}\n                      className=\"page-nav-link text-uppercase\"\n                    >\n                      {navlink.title}\n                    </Link>\n                    {index != navlinks.length - 1 ? \"/\" : null}\n                  </span>\n                );\n              })} */}\n            </div>\n            {!this.state.dbLoaded && <div>Loading...</div>}\n            {this.state.dbLoaded && (\n              <div className=\"form-page-container\">\n                <div className=\"form-page--left-side\">\n                  {/* <FormPagePose */}\n                  <div\n                    className=\"info-form-block\"\n                    pose={this.state.formVisible ? \"visible\" : \"hidden\"}\n                  >\n                    <SubForm\n                      subFormData={this.state.subFormData}\n                      cbGoSubForm={this.goSubForm}\n                      cbUpdateSubForm={this.updateSubForm}\n                      formData={this.state.formData}\n                      cbGetSubFormField={this.getSubFormField}\n                      cbGoNext={this.goNext}\n                      cbGoPrev={this.goPrev}\n                      selectedTitle={this.getSubFormFieldValue(\n                        \"AssetAllocationSubForm\",\n                        \"assetsAllocation\"\n                      )}\n                    />\n                  </div>\n                  {/* </FormPagePose> */}\n\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"form-page--right-side\">\n          <span\n            className=\"right-side-collapse-icon\"\n            onClick={this.toggleRightSide}\n          >\n            <i className=\"fe-menu\"></i>\n          </span>\n          <div className=\"form-page--right-side-wrap\">\n            {this.state.formSteps.map((formStep, index) => {\n              let formData = this.getRightSideFormData(formStep);\n              return formData.map((subForm, sindex) => {\n                if (subForm.visible == false) {\n                  return <React.Fragment key={sindex}></React.Fragment>;\n                }\n                let count = 0;\n                let go = false;\n                let fieldss = null;\n                let subFormData = subForm.data;\n\n                if (subFormData[\"rows\"]) {\n                  fieldss = subFormData[\"rows\"];\n                } else if (subFormData[\"fields\"]) {\n                  fieldss = subFormData[\"fields\"];\n                }\n                count = fieldss.length;\n\n                for (let i = 0; i < parseInt(count); i++) {\n                  if (fieldss[i][\"value\"] != \"\") {\n                    go = true;\n                  }\n                }\n\n                return (\n                  <div className=\"form-brief-block\" key={sindex}>\n                    <div className=\"form-brief-top\">\n                      {go ? (\n                        <h4 className=\"form-brief-title\">\n                          {subFormData.title}\n                        </h4>\n                      ) : null}\n                      {/* <h4 className=\"form-brief-title\">{subFormData.title}</h4> */}\n                      <span\n                        className=\"form-brief-edit-btn\"\n                        onClick={() => this.goSubForm(subForm.stepId)}\n                      >\n                        <Icon type=\"edit\"></Icon>\n                      </span>\n                    </div>\n                    <div className=\"form-brief-content\">\n                      {subFormData.fields &&\n                        subFormData.fields.map((field, ffindex) => {\n                          if (field.value == \"\" || field.value == null) {\n                            return (\n                              <React.Fragment key={ffindex}></React.Fragment>\n                            );\n                          }\n                          return (\n                            <div className=\"form-brief-item\" key={ffindex}>\n                              <p className=\"form-brief-item-title\">\n                                {field.title != \"\" ? field.title + \":\" : null}{\" \"}\n                              </p>\n                              <p className=\"form-brief-item-value\">\n                                {field.hasOwnProperty(\"type\") &&\n                                  field[\"type\"] == \"currency\" &&\n                                  float2Currency(field.value)}\n                                {field.hasOwnProperty(\"type\") &&\n                                  field[\"type\"] == \"percent\" &&\n                                  field.value + \" %\"}\n                                {!field.hasOwnProperty(\"type\") && field.value}\n                              </p>\n                            </div>\n                          );\n                        })}\n                      {subFormData.rows && subFormData.rows.length > 0 && (\n                        <React.Fragment>\n                          {subForm.id == \"ContributionSubForm\" && (\n                            <React.Fragment>\n                              <div className=\"form-brief-row\">\n                                <div className=\"form-brief-col--33\">Cont. Or Dist.</div>\n                                <div className=\"form-brief-col--33\">Amount</div>\n                                <div className=\"form-brief-col--33\">\n                                  Start Date\n                                </div>\n                                <div className=\"form-brief-col--33\">\n                                  End Date\n                                </div>\n                              </div>\n                              {subFormData.rows.map((contribute, cindex) => {\n                                return (\n                                  <div className=\"form-brief-row\" key={cindex}>\n                                    <div className=\"form-brief-col--33\">\n                                      {contribute[\"contributionOrDistribution\"]}\n                                    </div>\n                                    <div className=\"form-brief-col--33\">\n                                      {float2Currency(contribute[\"amount\"])}\n                                    </div>\n                                    <div className=\"form-brief-col--33\">\n                                      {contribute[\"startDate\"]}\n                                    </div>\n                                    <div className=\"form-brief-col--33\">\n                                      {contribute[\"endDate\"]}\n                                    </div>\n                                  </div>\n                                );\n                              })}\n                            </React.Fragment>\n                          )}\n                          {subForm.id == \"LiveStockSubForm\" && (\n                            <React.Fragment>\n                              <div className=\"form-brief-row\">\n                                <div className=\"form-brief-col--50\">\n                                  Animal Type\n                                </div>\n                                <div className=\"form-brief-col--50\">Count</div>\n                              </div>\n                              {subFormData.rows.map((livestock, cindex) => {\n                                return (\n                                  <div className=\"form-brief-row\" key={cindex}>\n                                    <div className=\"form-brief-col--50\">\n                                      {livestock[\"animalType\"]}\n                                    </div>\n                                    <div className=\"form-brief-col--50\">\n                                      {livestock[\"count\"]}\n                                    </div>\n                                  </div>\n                                );\n                              })}\n                            </React.Fragment>\n                          )}\n                          {subForm.id == \"StockSubForm\" && (\n                            <React.Fragment>\n                              <div className=\"form-brief-row\">\n                                <div className=\"form-brief-col--33\">\n                                  Stock Symbol\n                                </div>\n                                <div className=\"form-brief-col--33\">\n                                  Quantity\n                                </div>\n                                <div className=\"form-brief-col--33\">\n                                  Today's Value\n                                </div>\n                                <div className=\"form-brief-col--33\">Date</div>\n                              </div>\n                              {subFormData.rows.map((stock, cindex) => {\n                                return (\n                                  <div className=\"form-brief-row\" key={cindex}>\n                                    <div className=\"form-brief-col--33\">\n                                      {stock[\"stockSymbol\"]}\n                                    </div>\n                                    <div className=\"form-brief-col--33\">\n                                      {stock[\"quantity\"]}\n                                    </div>\n                                    <div className=\"form-brief-col--33\">\n                                      {float2Currency(stock[\"todayValue\"])}\n                                    </div>\n                                    <div className=\"form-brief-col--33\">\n                                      {stock[\"dateOfIndividual\"]}\n                                    </div>\n                                  </div>\n                                );\n                              })}\n                            </React.Fragment>\n                          )}\n                          {subForm.id ==\n                            \"InvestmentPropertyExpensesSubForm\" && (\n                              <React.Fragment>\n                                <div className=\"form-brief-row\">\n                                  <div className=\"form-brief-col--33\">Amount</div>\n                                  <div className=\"form-brief-col--33\">\n                                    Start Date\n                                  </div>\n                                  <div className=\"form-brief-col--33\">\n                                    End Date\n                                  </div>\n                                </div>\n                                {subFormData.rows.map(\n                                  (propertyExpense, cindex) => {\n                                    return (\n                                      <div\n                                        className=\"form-brief-row\"\n                                        key={cindex}\n                                      >\n                                        <div className=\"form-brief-col--33\">\n                                          {float2Currency(\n                                            propertyExpense[\"amount\"]\n                                          )}\n                                        </div>\n                                        <div className=\"form-brief-col--33\">\n                                          {propertyExpense[\"startDate\"]}\n                                        </div>\n                                        <div className=\"form-brief-col--33\">\n                                          {propertyExpense[\"endDate\"]}\n                                        </div>\n                                      </div>\n                                    );\n                                  }\n                                )}\n                              </React.Fragment>\n                            )}\n                        </React.Fragment>\n                      )}\n                    </div>\n                    {subFormData[\"BeneficiaryAssignment\"]\n                      ? this.getBeneficiaryAssignmentData(subFormData, subForm)\n                      : null}\n                  </div>\n                );\n              });\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect()(AssetsNew);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}