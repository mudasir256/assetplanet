{"ast":null,"code":"import _classCallCheck from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/src/components/SubFormTable.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n// import { Table, Button, Card, Row, Col } from 'reactstrap';\n\nimport { Table, DatePicker, Button, Select, Row, Col, Input, Radio, Checkbox, Modal, Icon, Divider } from \"antd\";\nimport uuidv1 from \"uuid/v1\";\nimport Percent from \"./form/Percent\";\nimport PhoneNumber from \"./form/PhoneNumber\";\nimport WebAddress from \"./form/WebAddress\";\nimport Email from \"./form/Email\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport Currency from \"./form/Currency\";\nimport moment from \"moment\";\nimport \"./SubFormTable.css\";\nimport { WebcamStreamCapture } from \"../helpers/Recorder\";\nvar Option = Select.Option; // const customWidth = 150;\nvar dateFormat = \"MM/DD/YYYY\";\nvar SubFormTable = /*#__PURE__*/function (_Component) {\n  _inherits(SubFormTable, _Component);\n  function SubFormTable(props) {\n    var _this;\n    _classCallCheck(this, SubFormTable);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SubFormTable).call(this, props));\n    _this.deleteModal = function () {\n      return /*#__PURE__*/React.createElement(Modal, {\n        closable: false,\n        width: \"40vw\",\n        centered: true,\n        visible: _this.state.delete_modal,\n        title: \"Are you sure you want to remove ?\",\n        footer: false,\n        style: {\n          textAlign: \"center\"\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        key: (Math.random() + 1).toString(36).substring(2),\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        key: (Math.random() + 1).toString(36).substring(2),\n        span: 6,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Col, {\n        key: (Math.random() + 1).toString(36).substring(2),\n        span: 6,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        style: {\n          background: \"#1cb2f5\"\n        },\n        type: \"primary\",\n        size: 3,\n        onClick: function onClick() {\n          if (_this.state.currentUuid && _this.state.currentRecord) _this.deleteRow(_this.state.currentUuid, _this.state.currentRecord);\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontSize: \"18px\"\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }\n      }, \"Yes\"))), /*#__PURE__*/React.createElement(Col, {\n        key: (Math.random() + 1).toString(36).substring(2),\n        span: 6,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        style: {\n          background: \"#ea5252\"\n        },\n        type: \"primary\",\n        size: 3,\n        onClick: function onClick() {\n          _this.setState({\n            delete_modal: false\n          });\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontSize: \"18px\"\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }\n      }, \"No\"))), /*#__PURE__*/React.createElement(Col, {\n        span: 6,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }\n      })));\n    };\n    _this.closeModal = function () {\n      _this.setState({\n        show_model: null\n      });\n    };\n    var cols = [];\n    var rows = [];\n    var rowsCount = null;\n    // let currentRowCount = 0;\n\n    if (props.colsFormat) {\n      cols = _this.generateCols(props.colsFormat);\n    }\n    if (props.noOfRows) {\n      rowsCount = props.noOfRows;\n    }\n    if (props.rows) {\n      rows = props.rows;\n    }\n    _this.state = {\n      rows: rows,\n      cols: cols,\n      show_model: null,\n      delete_modal: false,\n      currentUuid: null,\n      currentRecord: null\n      // tableWidth:props.tableWidth\n    };\n\n    _this.deleteRow = _this.deleteRow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addNewRow = _this.addNewRow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateRow = _this.updateRow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFormInputChange = _this.handleFormInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDatePickerChange = _this.handleDatePickerChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSelectChange = _this.handleSelectChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    // if (props.colsFormat) {\n    //   cols = this.generateCols(props.colsFormat);\n    // }\n\n    // if (props.rows) {\n    //   rows = props.rows;\n    // }\n\n    // this.state = {\n    //   rows: rows,\n    //   cols: cols,\n    // };\n\n    // this.deleteRow = this.deleteRow.bind(this);\n    // this.addNewRow = this.addNewRow.bind(this);\n    // this.updateRow = this.updateRow.bind(this);\n\n    // this.handleFormInputChange = this.handleFormInputChange.bind(this);\n    // this.handleInputChange = this.handleInputChange.bind(this);\n    // this.handleDatePickerChange = this.handleDatePickerChange.bind(this);\n    // this.handleSelectChange = this.handleSelectChange.bind(this);\n    _this.regeNumber = _this.regeNumber.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  _createClass(SubFormTable, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        rows: nextProps.rows\n      });\n    }\n  }, {\n    key: \"generateCols\",\n    value: function generateCols() {\n      var _this2 = this;\n      var colsFormat = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var cols = [];\n\n      // cols.push({\n      //   title: \"\",\n      //   dataIndex: \"uuid\",\n      //   key: \"uuid\",\n      //   render: (uuid, record) => (\n      //     <Button\n      //       type=\"link\"\n      //       icon=\"close\"\n      //       onClick={() => this.deleteRow(uuid, record)}\n      //     ></Button>\n      //   ),\n      // });\n\n      colsFormat.forEach(function (colFormat) {\n        var title = colFormat.title,\n          dataIndex = colFormat.dataIndex,\n          key = colFormat.key,\n          fields = colFormat.fields;\n        var customWidth = _this2.props.customWidth;\n        var newCol = {\n          title: title,\n          dataIndex: dataIndex,\n          key: key,\n          render: function render(text, record) {\n            var col_span = parseInt(24 / colFormat[\"fields\"].length);\n            return /*#__PURE__*/React.createElement(Row, {\n              gutter: 8,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 13\n              }\n            }, fields.map(function (field, index) {\n              var type = field.type,\n                name = field.name;\n              switch (type) {\n                case \"Input\":\n                  return /*#__PURE__*/React.createElement(Col, {\n                    span: col_span,\n                    key: (Math.random() + 1).toString(36).substring(2),\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 23\n                    }\n                  }, /*#__PURE__*/React.createElement(Input\n                  // style={customWidth ? { width: customWidth } : null}\n                  // style={{width:\"10rem\"}}\n                  , {\n                    placeholder: field.placeholder,\n                    disabled: field.disabled,\n                    name: name,\n                    value: record[name],\n                    onChange: function onChange(event) {\n                      return _this2.handleInputChange(event, text, record);\n                    },\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 25\n                    }\n                  }));\n                case \"Percent\":\n                  return /*#__PURE__*/React.createElement(Col, {\n                    span: col_span,\n                    key: (Math.random() + 1).toString(36).substring(2),\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 23\n                    }\n                  }, /*#__PURE__*/React.createElement(Percent, {\n                    style: customWidth ? {\n                      width: customWidth\n                    } : null,\n                    placeholder: field.placeholder,\n                    disabled: field.disabled,\n                    name: name,\n                    value: record[name],\n                    onChange: function onChange(event) {\n                      return _this2.handleInputChange(event, text, record);\n                    },\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 25\n                    }\n                  }));\n                case \"PhoneNumber\":\n                  return /*#__PURE__*/React.createElement(Col, {\n                    span: col_span,\n                    key: (Math.random() + 1).toString(36).substring(2),\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 23\n                    }\n                  }, /*#__PURE__*/React.createElement(PhoneNumber, {\n                    style: customWidth ? {\n                      width: customWidth\n                    } : null,\n                    placeholder: field.placeholder,\n                    disabled: field.disabled,\n                    name: field.name,\n                    value: record[field.name],\n                    onChange: function onChange(event) {\n                      return _this2.regeNumber(event, text, record);\n                    },\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 25\n                    }\n                  }));\n                case \"WebAddress\":\n                  return /*#__PURE__*/React.createElement(Col, {\n                    span: col_span,\n                    key: (Math.random() + 1).toString(36).substring(2),\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 23\n                    }\n                  }, /*#__PURE__*/React.createElement(WebAddress, {\n                    style: customWidth ? {\n                      width: customWidth\n                    } : null,\n                    placeholder: field.placeholder,\n                    disabled: field.disabled,\n                    name: field.name,\n                    value: record[field.name],\n                    onChange: function onChange(event) {\n                      return _this2.handleInputChange(event, text, record);\n                    },\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 237,\n                      columnNumber: 25\n                    }\n                  }));\n                case \"Email\":\n                  return /*#__PURE__*/React.createElement(Col, {\n                    span: col_span,\n                    key: (Math.random() + 1).toString(36).substring(2),\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 23\n                    }\n                  }, /*#__PURE__*/React.createElement(Email, {\n                    style: customWidth ? {\n                      width: customWidth\n                    } : null,\n                    placeholder: field.placeholder,\n                    disabled: field.disabled,\n                    name: field.name,\n                    value: record[field.name],\n                    onChange: function onChange(event) {\n                      return _this2.handleInputChange(event, text, record);\n                    },\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 25\n                    }\n                  }));\n                case \"Currency\":\n                  return /*#__PURE__*/React.createElement(Col, {\n                    span: col_span,\n                    key: (Math.random() + 1).toString(36).substring(2),\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 23\n                    }\n                  }, /*#__PURE__*/React.createElement(Currency, {\n                    style: _this2.props.customWidth ? {\n                      width: customWidth\n                    } : null,\n                    placeholder: field.placeholder,\n                    disabled: field.disabled,\n                    name: field.name,\n                    value: typeof record[field.name] == \"undefined\" ? \"\" : record[field.name],\n                    onChange: function onChange(event) {\n                      return _this2.handleInputChange(event, text, record);\n                    },\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 269,\n                      columnNumber: 25\n                    }\n                  }));\n                case \"TextArea\":\n                  return /*#__PURE__*/React.createElement(Col, {\n                    span: col_span,\n                    key: (Math.random() + 1).toString(36).substring(2),\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 23\n                    }\n                  }, /*#__PURE__*/React.createElement(TextArea, {\n                    style: customWidth ? {\n                      width: customWidth\n                    } : null,\n                    placeholder: field.placeholder,\n                    disabled: field.disabled,\n                    name: field.name,\n                    value: record[field.name],\n                    onChange: function onChange(event) {\n                      return _this2.handleInputChange(event, text, record);\n                    },\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 293,\n                      columnNumber: 25\n                    }\n                  }));\n                case \"Checkbox\":\n                  return /*#__PURE__*/React.createElement(Col, {\n                    span: col_span,\n                    key: (Math.random() + 1).toString(36).substring(2),\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 308,\n                      columnNumber: 23\n                    }\n                  }, /*#__PURE__*/React.createElement(Checkbox, {\n                    placeholder: field.placeholder,\n                    disabled: field.disabled,\n                    name: field.name,\n                    value: record[field.name],\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 309,\n                      columnNumber: 25\n                    }\n                  }));\n                case \"Select\":\n                  return /*#__PURE__*/React.createElement(Col, {\n                    span: col_span,\n                    key: (Math.random() + 1).toString(36).substring(2),\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 320,\n                      columnNumber: 23\n                    }\n                  }, /*#__PURE__*/React.createElement(Select, {\n                    mode: \"multiple\",\n                    showSearch: true\n                    // style={customWidth ? { width: customWidth } : null}\n                    ,\n                    style: {\n                      width: \"10rem\"\n                    },\n                    className: \"select-custom\",\n                    placeholder: field.placeholder,\n                    onChange: function onChange(value) {\n                      return _this2.handleSelectChange(field.name, value, text, record);\n                    },\n                    disabled: field.disabled,\n                    value: record[field.name],\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 25\n                    }\n                  }, field.values.map(function (value, vindex) {\n                    return /*#__PURE__*/React.createElement(Option, {\n                      key: vindex,\n                      value: value,\n                      __self: _this2,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 340,\n                        columnNumber: 29\n                      }\n                    }, value);\n                  })));\n                case \"Radio\":\n                  return /*#__PURE__*/React.createElement(Col, {\n                    span: col_span,\n                    key: (Math.random() + 1).toString(36).substring(2),\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 350,\n                      columnNumber: 23\n                    }\n                  }, /*#__PURE__*/React.createElement(Radio.Group, {\n                    onChange: function onChange(value) {\n                      return _this2.handleSelectChange(field.name, value);\n                    },\n                    disabled: field.disabled,\n                    value: record[field.name],\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 351,\n                      columnNumber: 25\n                    }\n                  }, field.values.map(function (value, vindex) {\n                    return /*#__PURE__*/React.createElement(Radio, {\n                      key: vindex,\n                      value: value,\n                      __self: _this2,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 359,\n                        columnNumber: 29\n                      }\n                    }, value);\n                  })));\n                case \"DatePicker\":\n                  return /*#__PURE__*/React.createElement(Col, {\n                    span: col_span,\n                    key: (Math.random() + 1).toString(36).substring(2),\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 369,\n                      columnNumber: 23\n                    }\n                  }, /*#__PURE__*/React.createElement(DatePicker, {\n                    style: customWidth ? {\n                      width: customWidth\n                    } : {\n                      width: \"100%\"\n                    },\n                    format: dateFormat,\n                    onChange: function onChange(date, dateString) {\n                      return _this2.handleDatePickerChange(field.name, date, dateString, text, record);\n                    },\n                    disabled: field.disabled,\n                    value: typeof record[field.name] == \"undefined\" || record[field.name] == \"\" || record[field.name] == null ? null : moment(record[field.name], dateFormat),\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 370,\n                      columnNumber: 25\n                    }\n                  }));\n                case \"Document\":\n                  return /*#__PURE__*/React.createElement(Col, {\n                    span: col_span,\n                    key: (Math.random() + 1).toString(36).substring(2),\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 400,\n                      columnNumber: 23\n                    }\n                  }, /*#__PURE__*/React.createElement(\"div\", {\n                    className: \"doc-upload\",\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 401,\n                      columnNumber: 25\n                    }\n                  }, /*#__PURE__*/React.createElement(\"input\", {\n                    id: \"file-input\",\n                    type: \"file\"\n                    // style={{ width: \"100%\" }}\n                    // onChange={(date, dateString) => this.handleDatePickerChange(field.name, date, dateString, text, record)}\n                    // value={typeof record[field.name] == 'undefined' || record[field.name] == '' || record[field.name] == null ? null : moment(record[field.name], dateFormat)}\n                    ,\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 402,\n                      columnNumber: 27\n                    }\n                  }), /*#__PURE__*/React.createElement(\"label\", {\n                    for: \"file-input\",\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 409,\n                      columnNumber: 27\n                    }\n                  }, /*#__PURE__*/React.createElement(Icon, {\n                    className: \"mt-2 ml-2\",\n                    style: {\n                      fontSize: \"23px\"\n                    },\n                    type: \"upload\",\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 410,\n                      columnNumber: 29\n                    }\n                  }))));\n                case \"Video\":\n                  return /*#__PURE__*/React.createElement(React.Fragment, {\n                    key: (Math.random() + 1).toString(36).substring(2),\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 422,\n                      columnNumber: 23\n                    }\n                  }, _this2.state.show_model === field.name ? /*#__PURE__*/React.createElement(Modal, {\n                    closable: false,\n                    width: \"53vw\",\n                    centered: true,\n                    visible: true,\n                    title: \"Record Video\",\n                    footer: false,\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 424,\n                      columnNumber: 27\n                    }\n                  }, /*#__PURE__*/React.createElement(WebcamStreamCapture, {\n                    onCancel: _this2.closeModal,\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 432,\n                      columnNumber: 29\n                    }\n                  })) : \"\", /*#__PURE__*/React.createElement(Col, {\n                    span: col_span,\n                    key: index,\n                    style: {\n                      flexDirection: \"column\"\n                    },\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 439,\n                      columnNumber: 25\n                    }\n                  }, /*#__PURE__*/React.createElement(Button, {\n                    style: {\n                      // width: \"100%\",\n                      marginBottom: \"5px\"\n                    },\n                    name: field.name,\n                    onClick: function onClick(e) {\n                      _this2.setState({\n                        show_model: e.target.name\n                      });\n                    },\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 446,\n                      columnNumber: 27\n                    }\n                  }, /*#__PURE__*/React.createElement(Icon, {\n                    style: {\n                      fontSize: \"23px\"\n                    },\n                    type: \"camera\",\n                    __self: _this2,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 456,\n                      columnNumber: 29\n                    }\n                  }), field.title)));\n              }\n            }));\n          }\n        };\n        cols.push(newCol);\n      });\n\n      // for (var cindex = 0; cindex < colsFormat.length; cindex++) {\n      //   let colFormat = colsFormat[cindex];\n\n      //   var newCol = {\n      //     title: colFormat[\"title\"],\n      //     dataIndex: colFormat[\"dataIndex\"],\n      //     key: colFormat[\"key\"],\n      //     render: (text, record) => {\n      //       var col_span = parseInt(24 / colFormat[\"fields\"].length);\n      //       return (\n      //         <Row gutter={8}>\n      //           {colFormat[\"fields\"].map((field, index) => {\n      //             if (field.type == \"Input\") {\n      //               return (\n      //                 <Col span={col_span} key={index}>\n      //                   <Input\n      //                     style={\n      //                       this.props.customWidth ? { width: customWidth } : null\n      //                     }\n      //                     placeholder={field.placeholder}\n      //                     disabled={field.disabled}\n      //                     name={field.name}\n      //                     value={record[field.name]}\n      //                     onChange={(event) =>\n      //                       this.handleInputChange(event, text, record)\n      //                     }\n      //                   />\n      //                 </Col>\n      //               );\n      //             } else if (field.type == \"Percent\") {\n      //               return (\n      //                 <Col span={col_span} key={index}>\n      //                   <Percent\n      //                     placeholder={field.placeholder}\n      //                     disabled={field.disabled}\n      //                     name={field.name}\n      //                     value={record[field.name]}\n      //                     onChange={(event) =>\n      //                       this.handleInputChange(event, text, record)\n      //                     }\n      //                   />\n      //                 </Col>\n      //               );\n      //             } else if (field.type == \"PhoneNumber\") {\n      //               return (\n      //                 <Col span={col_span} key={index}>\n      //                   <PhoneNumber\n      //                     placeholder={field.placeholder}\n      //                     disabled={field.disabled}\n      //                     name={field.name}\n      //                     value={record[field.name]}\n      //                     onChange={(event) =>\n      //                       this.regeNumber(event, text, record)\n      //                     }\n      //                   />\n      //                 </Col>\n      //               );\n      //             } else if (field.type == \"WebAddress\") {\n      //               return (\n      //                 <Col span={col_span} key={index}>\n      //                   <WebAddress\n      //                     placeholder={field.placeholder}\n      //                     disabled={field.disabled}\n      //                     name={field.name}\n      //                     value={record[field.name]}\n      //                     onChange={(event) =>\n      //                       this.handleInputChange(event, text, record)\n      //                     }\n      //                   />\n      //                 </Col>\n      //               );\n      //             } else if (field.type == \"Email\") {\n      //               return (\n      //                 <Col span={col_span} key={index}>\n      //                   <Email\n      //                     placeholder={field.placeholder}\n      //                     disabled={field.disabled}\n      //                     name={field.name}\n      //                     value={record[field.name]}\n      //                     onChange={(event) =>\n      //                       this.handleInputChange(event, text, record)\n      //                     }\n      //                   />\n      //                 </Col>\n      //               );\n      //             } else if (field.type == \"Currency\") {\n      //               return (\n      //                 <Col span={col_span} key={index}>\n      //                   <Currency\n      //                     style={\n      //                       this.props.customWidth ? { width: customWidth } : null\n      //                     }\n      //                     placeholder={field.placeholder}\n      //                     disabled={field.disabled}\n      //                     name={field.name}\n      //                     value={\n      //                       typeof record[field.name] == \"undefined\"\n      //                         ? \"\"\n      //                         : record[field.name]\n      //                     }\n      //                     onChange={(event) =>\n      //                       this.handleInputChange(event, text, record)\n      //                     }\n      //                   />\n      //                 </Col>\n      //               );\n      //             } else if (field.type == \"TextArea\") {\n      //               return (\n      //                 <Col span={col_span} key={index}>\n      //                   <TextArea\n      //                     placeholder={field.placeholder}\n      //                     disabled={field.disabled}\n      //                     name={field.name}\n      //                     value={record[field.name]}\n      //                     onChange={(event) =>\n      //                       this.handleInputChange(event, text, record)\n      //                     }\n      //                   />\n      //                 </Col>\n      //               );\n      //             } else if (field.type == \"Checkbox\") {\n      //               return (\n      //                 <Col span={col_span} key={index}>\n      //                   <Checkbox\n      //                     placeholder={field.placeholder}\n      //                     disabled={field.disabled}\n      //                     name={field.name}\n      //                     value={record[field.name]}\n      //                   />\n      //                 </Col>\n      //               );\n      //             } else if (field.type == \"Select\") {\n      //               return (\n      //                 <Col span={col_span} key={index}>\n      //                   <Select\n      //                     showSearch\n      //                     style={\n      //                       this.props.customWidth ? { width: customWidth } : null\n      //                     }\n      //                     placeholder={field.placeholder}\n      //                     onChange={(value) =>\n      //                       this.handleSelectChange(\n      //                         field.name,\n      //                         value,\n      //                         text,\n      //                         record\n      //                       )\n      //                     }\n      //                     disabled={field.disabled}\n      //                     value={record[field.name]}\n      //                   >\n      //                     {field.values.map((value, vindex) => (\n      //                       <Option key={vindex} value={value}>\n      //                         {value}\n      //                       </Option>\n      //                     ))}\n      //                   </Select>\n      //                 </Col>\n      //               );\n      //             } else if (field.type == \"Radio\") {\n      //               return (\n      //                 <Col span={col_span} key={index}>\n      //                   <Radio.Group\n      //                     onChange={(value) =>\n      //                       this.handleSelectChange(field.name, value)\n      //                     }\n      //                     disabled={field.disabled}\n      //                     value={record[field.name]}\n      //                   >\n      //                     {field.values.map((value, vindex) => (\n      //                       <Radio key={vindex} value={value}>\n      //                         {value}\n      //                       </Radio>\n      //                     ))}\n      //                   </Radio.Group>\n      //                 </Col>\n      //               );\n      //             } else if (field.type == \"DatePicker\") {\n      //               return (\n      //                 <Col span={col_span} key={index}>\n      //                   <DatePicker\n      //                     style={\n      //                       this.props.customWidth\n      //                         ? { width: customWidth }\n      //                         : { width: \"100%\" }\n      //                     }\n      //                     format={dateFormat}\n      //                     onChange={(date, dateString) =>\n      //                       this.handleDatePickerChange(\n      //                         field.name,\n      //                         date,\n      //                         dateString,\n      //                         text,\n      //                         record\n      //                       )\n      //                     }\n      //                     disabled={field.disabled}\n      //                     value={\n      //                       typeof record[field.name] == \"undefined\" ||\n      //                       record[field.name] == \"\" ||\n      //                       record[field.name] == null\n      //                         ? null\n      //                         : moment(record[field.name], dateFormat)\n      //                     }\n      //                   />\n      //                 </Col>\n      //               );\n      //             }\n      //           })}\n      //         </Row>\n      //       );\n      //     },\n      //   };\n      //   cols.push(newCol);\n      // }\n\n      cols.push({\n        title: \"\",\n        dataIndex: \"uuid\",\n        key: \"uuid\",\n        render: function render(uuid, record) {\n          return /*#__PURE__*/React.createElement(Button, {\n            type: \"link\",\n            style: {\n              fontSize: \"21px\"\n            },\n            icon: \"edit\",\n            onClick: function onClick() {\n              return _this2.updateRow(uuid, record);\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 696,\n              columnNumber: 9\n            }\n          });\n        }\n      });\n      cols.push({\n        title: \"\",\n        dataIndex: \"uuid\",\n        key: \"uuid\",\n        render: function render(uuid, record) {\n          return /*#__PURE__*/React.createElement(Button, {\n            type: \"link\",\n            style: {\n              fontSize: \"21px\"\n            },\n            icon: \"delete\"\n            // onClick={() => this.deleteRow(uuid, record)}\n            ,\n            onClick: function onClick() {\n              _this2.setState({\n                delete_modal: true,\n                currentUuid: uuid,\n                currentRecord: record\n              });\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 710,\n              columnNumber: 9\n            }\n          });\n        }\n      });\n      return cols;\n    }\n  }, {\n    key: \"updateRow\",\n    value: function updateRow(uuid, key, value) {\n      // alert(\"in update\")\n      var rows = this.state.rows;\n      for (var rindex = 0; rindex < rows.length; rindex++) {\n        if (rows[rindex].uuid == uuid) {\n          rows[rindex][key] = value;\n          break;\n        }\n      }\n      this.setState({\n        rows: rows\n      });\n      this.props.cbFormChange(rows);\n    }\n  }, {\n    key: \"handleFormInputChange\",\n    value: function handleFormInputChange(uuid, name, value) {\n      this.updateRow(uuid, name, value);\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event, text, record) {\n      event.preventDefault();\n      var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n      this.handleFormInputChange(record.uuid, name, value);\n    }\n  }, {\n    key: \"regeNumber\",\n    value: function regeNumber(event, text, record) {\n      event.preventDefault();\n      var _event$target2 = event.target,\n        name = _event$target2.name,\n        value = _event$target2.value;\n      var re = /^[0-9\\b]+$/;\n      if (event.target.value === \"\" || re.test(event.target.value)) {\n        this.handleFormInputChange(record.uuid, name, value);\n      }\n    }\n  }, {\n    key: \"handleDatePickerChange\",\n    value: function handleDatePickerChange(name, date, dateString, text, record) {\n      this.handleFormInputChange(record.uuid, name, dateString);\n    }\n  }, {\n    key: \"handleSelectChange\",\n    value: function handleSelectChange(name, value, text, record) {\n      this.handleFormInputChange(record.uuid, name, value);\n    }\n  }, {\n    key: \"deleteRow\",\n    value: function deleteRow(uuid, record) {\n      var rows = this.state.rows;\n      for (var rindex = 0; rindex < rows.length; rindex++) {\n        if (rows[rindex].uuid == uuid) {\n          rows.splice(rindex, 1);\n          break;\n        }\n      }\n      this.setState({\n        rows: rows,\n        currentUuid: null,\n        currentRecord: null,\n        delete_modal: false\n      });\n      this.props.cbFormChange(rows);\n    }\n  }, {\n    key: \"addNewRow\",\n    value: function addNewRow() {\n      var rows = this.state.rows;\n      rows.push({\n        uuid: uuidv1(),\n        key: uuidv1()\n      });\n      this.setState({\n        rows: rows\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //generate cols based on cols format\n      // if(this.props.colsFormat){\n      //     let cols = this.generateCols(this.props.colsFormat);\n      // }\n      console.log(\"rows count\", this.state.rows);\n      var _this$props = this.props,\n        addNewButton = _this$props.addNewButton,\n        image = _this$props.image;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 817,\n          columnNumber: 7\n        }\n      }, this.deleteModal(), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"subform-parent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"text-center font-weight-bold mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 820,\n          columnNumber: 11\n        }\n      }, image ? /*#__PURE__*/React.createElement(\"img\", {\n        src: image,\n        height: 85,\n        width: 85,\n        style: {\n          marginRight: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 15\n        }\n      }) : null, this.props.title), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"subform-desc text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 831,\n          columnNumber: 11\n        }\n      }, this.props.description), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: this.state.rows.length > 0 ? this.props.tableWidth : \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        pagination: false,\n        dataSource: this.state.rows,\n        columns: this.state.cols,\n        scroll: {\n          x: this.props.scroll\n        },\n        locale: {\n          emptyText: \"There is no data\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 13\n        }\n      }))), addNewButton && /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 845,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"link\",\n        onClick: this.addNewRow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 846,\n          columnNumber: 13\n        }\n      }, \"Add New\")), this.props.addNewButtonben && /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginBottom: \"30px\",\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"link\",\n        onClick: this.addNewRow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 13\n        }\n      }, \"Add Another Beneficiary\")));\n    }\n  }]);\n  return SubFormTable;\n}(Component);\nexport default connect()(SubFormTable);","map":{"version":3,"names":["React","Component","connect","Table","DatePicker","Button","Select","Row","Col","Input","Radio","Checkbox","Modal","Icon","Divider","uuidv1","Percent","PhoneNumber","WebAddress","Email","TextArea","Currency","moment","WebcamStreamCapture","Option","dateFormat","SubFormTable","_Component","_inherits","props","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","deleteModal","createElement","closable","width","centered","visible","state","delete_modal","title","footer","style","textAlign","__self","_assertThisInitialized","__source","fileName","_jsxFileName","lineNumber","columnNumber","key","Math","random","toString","substring","span","background","type","size","onClick","currentUuid","currentRecord","deleteRow","fontSize","setState","closeModal","show_model","cols","rows","rowsCount","colsFormat","generateCols","noOfRows","bind","addNewRow","updateRow","handleFormInputChange","handleInputChange","handleDatePickerChange","handleSelectChange","regeNumber","_createClass","value","componentWillReceiveProps","nextProps","_this2","arguments","length","undefined","forEach","colFormat","dataIndex","fields","customWidth","newCol","render","text","record","col_span","parseInt","gutter","map","field","index","name","placeholder","disabled","onChange","event","mode","showSearch","className","values","vindex","Group","format","date","dateString","id","for","Fragment","onCancel","flexDirection","marginBottom","e","target","push","uuid","icon","rindex","cbFormChange","preventDefault","_event$target","_event$target2","re","test","splice","console","log","_this$props","addNewButton","image","src","height","marginRight","description","tableWidth","pagination","dataSource","columns","scroll","x","locale","emptyText","addNewButtonben"],"sources":["/Users/mudasirbukhari/Desktop/techbucks/ApMudasirzip/src/components/SubFormTable.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n// import { Table, Button, Card, Row, Col } from 'reactstrap';\n\nimport {\n  Table,\n  DatePicker,\n  Button,\n  Select,\n  Row,\n  Col,\n  Input,\n  Radio,\n  Checkbox,\n  Modal,\n  Icon,\n  Divider,\n} from \"antd\";\nimport uuidv1 from \"uuid/v1\";\nimport Percent from \"./form/Percent\";\nimport PhoneNumber from \"./form/PhoneNumber\";\nimport WebAddress from \"./form/WebAddress\";\nimport Email from \"./form/Email\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport Currency from \"./form/Currency\";\nimport moment from \"moment\";\nimport \"./SubFormTable.css\";\nimport { WebcamStreamCapture } from \"../helpers/Recorder\";\n\nconst { Option } = Select;\n// const customWidth = 150;\nconst dateFormat = \"MM/DD/YYYY\";\n\nclass SubFormTable extends Component {\n  constructor(props) {\n    super(props);\n\n    var cols = [];\n    var rows = [];\n    let rowsCount = null;\n    // let currentRowCount = 0;\n\n    if (props.colsFormat) {\n      cols = this.generateCols(props.colsFormat);\n    }\n\n    if (props.noOfRows) {\n      rowsCount = props.noOfRows;\n    }\n\n    if (props.rows) {\n      rows = props.rows;\n    }\n\n    this.state = {\n      rows: rows,\n      cols: cols,\n      show_model: null,\n      delete_modal: false,\n      currentUuid: null,\n      currentRecord: null,\n      // tableWidth:props.tableWidth\n    };\n\n    this.deleteRow = this.deleteRow.bind(this);\n    this.addNewRow = this.addNewRow.bind(this);\n    this.updateRow = this.updateRow.bind(this);\n\n    this.handleFormInputChange = this.handleFormInputChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleDatePickerChange = this.handleDatePickerChange.bind(this);\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n\n    // if (props.colsFormat) {\n    //   cols = this.generateCols(props.colsFormat);\n    // }\n\n    // if (props.rows) {\n    //   rows = props.rows;\n    // }\n\n    // this.state = {\n    //   rows: rows,\n    //   cols: cols,\n    // };\n\n    // this.deleteRow = this.deleteRow.bind(this);\n    // this.addNewRow = this.addNewRow.bind(this);\n    // this.updateRow = this.updateRow.bind(this);\n\n    // this.handleFormInputChange = this.handleFormInputChange.bind(this);\n    // this.handleInputChange = this.handleInputChange.bind(this);\n    // this.handleDatePickerChange = this.handleDatePickerChange.bind(this);\n    // this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.regeNumber = this.regeNumber.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      rows: nextProps.rows,\n    });\n  }\n\n  deleteModal = () => {\n    return (\n      <Modal\n        closable={false}\n        width=\"40vw\"\n        centered\n        visible={this.state.delete_modal}\n        title={\"Are you sure you want to remove ?\"}\n        footer={false}\n        style={{ textAlign: \"center\" }}\n      >\n        <Row key={(Math.random() + 1).toString(36).substring(2)}>\n          <Col key={(Math.random() + 1).toString(36).substring(2)} span={6}></Col>\n          <Col key={(Math.random() + 1).toString(36).substring(2)} span={6}>\n            <Button\n              style={{ background: \"#1cb2f5\" }}\n              type=\"primary\"\n              size={3}\n              onClick={() => {\n                if (this.state.currentUuid && this.state.currentRecord)\n                  this.deleteRow(\n                    this.state.currentUuid,\n                    this.state.currentRecord\n                  );\n              }}\n            >\n              <span style={{ fontSize: \"18px\" }}>Yes</span>\n            </Button>\n          </Col>\n          <Col key={(Math.random() + 1).toString(36).substring(2)} span={6}>\n            <Button\n              style={{ background: \"#ea5252\" }}\n              type=\"primary\"\n              size={3}\n              onClick={() => {\n                this.setState({ delete_modal: false });\n              }}\n            >\n              <span style={{ fontSize: \"18px\" }}>No</span>\n            </Button>\n          </Col>\n          <Col span={6}></Col>\n        </Row>\n      </Modal>\n    );\n  };\n\n  generateCols(colsFormat = []) {\n    var cols = [];\n\n    // cols.push({\n    //   title: \"\",\n    //   dataIndex: \"uuid\",\n    //   key: \"uuid\",\n    //   render: (uuid, record) => (\n    //     <Button\n    //       type=\"link\"\n    //       icon=\"close\"\n    //       onClick={() => this.deleteRow(uuid, record)}\n    //     ></Button>\n    //   ),\n    // });\n\n    colsFormat.forEach((colFormat) => {\n      const { title, dataIndex, key, fields } = colFormat;\n      const { customWidth } = this.props;\n\n      let newCol = {\n        title,\n        dataIndex,\n        key,\n        render: (text, record) => {\n          let col_span = parseInt(24 / colFormat[\"fields\"].length);\n\n          return (\n            <Row gutter={8}>\n              {fields.map((field, index) => {\n                const { type, name } = field;\n\n                switch (type) {\n                  case \"Input\":\n                    return (\n                      <Col span={col_span} key={(Math.random() + 1).toString(36).substring(2)}>\n                        <Input\n                          // style={customWidth ? { width: customWidth } : null}\n                          // style={{width:\"10rem\"}}\n\n                          placeholder={field.placeholder}\n                          disabled={field.disabled}\n                          name={name}\n                          value={record[name]}\n                          onChange={(event) =>\n                            this.handleInputChange(event, text, record)\n                          }\n                        />\n                      </Col>\n                    );\n\n                  case \"Percent\":\n                    return (\n                      <Col span={col_span} key={(Math.random() + 1).toString(36).substring(2)}>\n                        <Percent\n                          style={customWidth ? { width: customWidth } : null}\n                          placeholder={field.placeholder}\n                          disabled={field.disabled}\n                          name={name}\n                          value={record[name]}\n                          onChange={(event) =>\n                            this.handleInputChange(event, text, record)\n                          }\n                        />\n                      </Col>\n                    );\n\n                  case \"PhoneNumber\":\n                    return (\n                      <Col span={col_span} key={(Math.random() + 1).toString(36).substring(2)}>\n                        <PhoneNumber\n                          style={customWidth ? { width: customWidth } : null}\n                          placeholder={field.placeholder}\n                          disabled={field.disabled}\n                          name={field.name}\n                          value={record[field.name]}\n                          onChange={(event) =>\n                            this.regeNumber(event, text, record)\n                          }\n                        />\n                      </Col>\n                    );\n\n                  case \"WebAddress\":\n                    return (\n                      <Col span={col_span} key={(Math.random() + 1).toString(36).substring(2)}>\n                        <WebAddress\n                          style={customWidth ? { width: customWidth } : null}\n                          placeholder={field.placeholder}\n                          disabled={field.disabled}\n                          name={field.name}\n                          value={record[field.name]}\n                          onChange={(event) =>\n                            this.handleInputChange(event, text, record)\n                          }\n                        />\n                      </Col>\n                    );\n\n                  case \"Email\":\n                    return (\n                      <Col span={col_span} key={(Math.random() + 1).toString(36).substring(2)}>\n                        <Email\n                          style={customWidth ? { width: customWidth } : null}\n                          placeholder={field.placeholder}\n                          disabled={field.disabled}\n                          name={field.name}\n                          value={record[field.name]}\n                          onChange={(event) =>\n                            this.handleInputChange(event, text, record)\n                          }\n                        />\n                      </Col>\n                    );\n\n                  case \"Currency\":\n                    return (\n                      <Col span={col_span} key={(Math.random() + 1).toString(36).substring(2)}>\n                        <Currency\n                          style={\n                            this.props.customWidth\n                              ? { width: customWidth }\n                              : null\n                          }\n                          placeholder={field.placeholder}\n                          disabled={field.disabled}\n                          name={field.name}\n                          value={\n                            typeof record[field.name] == \"undefined\"\n                              ? \"\"\n                              : record[field.name]\n                          }\n                          onChange={(event) =>\n                            this.handleInputChange(event, text, record)\n                          }\n                        />\n                      </Col>\n                    );\n\n                  case \"TextArea\":\n                    return (\n                      <Col span={col_span} key={(Math.random() + 1).toString(36).substring(2)}>\n                        <TextArea\n                          style={customWidth ? { width: customWidth } : null}\n                          placeholder={field.placeholder}\n                          disabled={field.disabled}\n                          name={field.name}\n                          value={record[field.name]}\n                          onChange={(event) =>\n                            this.handleInputChange(event, text, record)\n                          }\n                        />\n                      </Col>\n                    );\n\n                  case \"Checkbox\":\n                    return (\n                      <Col span={col_span} key={(Math.random() + 1).toString(36).substring(2)}>\n                        <Checkbox\n                          placeholder={field.placeholder}\n                          disabled={field.disabled}\n                          name={field.name}\n                          value={record[field.name]}\n                        />\n                      </Col>\n                    );\n\n                  case \"Select\":\n                    return (\n                      <Col span={col_span} key={(Math.random() + 1).toString(36).substring(2)}>\n                        <Select\n                          mode=\"multiple\"\n                          showSearch\n                          // style={customWidth ? { width: customWidth } : null}\n                          style={{ width: \"10rem\" }}\n                          className=\"select-custom\"\n                          placeholder={field.placeholder}\n                          onChange={(value) =>\n                            this.handleSelectChange(\n                              field.name,\n                              value,\n                              text,\n                              record\n                            )\n                          }\n                          disabled={field.disabled}\n                          value={record[field.name]}\n                        >\n                          {field.values.map((value, vindex) => (\n                            <Option key={vindex} value={value}>\n                              {value}\n                            </Option>\n                          ))}\n                        </Select>\n                      </Col>\n                    );\n\n                  case \"Radio\":\n                    return (\n                      <Col span={col_span} key={(Math.random() + 1).toString(36).substring(2)}>\n                        <Radio.Group\n                          onChange={(value) =>\n                            this.handleSelectChange(field.name, value)\n                          }\n                          disabled={field.disabled}\n                          value={record[field.name]}\n                        >\n                          {field.values.map((value, vindex) => (\n                            <Radio key={vindex} value={value}>\n                              {value}\n                            </Radio>\n                          ))}\n                        </Radio.Group>\n                      </Col>\n                    );\n\n                  case \"DatePicker\":\n                    return (\n                      <Col span={col_span} key={(Math.random() + 1).toString(36).substring(2)}>\n                        <DatePicker\n                          style={\n                            customWidth\n                              ? { width: customWidth }\n                              : { width: \"100%\" }\n                          }\n                          format={dateFormat}\n                          onChange={(date, dateString) =>\n                            this.handleDatePickerChange(\n                              field.name,\n                              date,\n                              dateString,\n                              text,\n                              record\n                            )\n                          }\n                          disabled={field.disabled}\n                          value={\n                            typeof record[field.name] == \"undefined\" ||\n                              record[field.name] == \"\" ||\n                              record[field.name] == null\n                              ? null\n                              : moment(record[field.name], dateFormat)\n                          }\n                        />\n                      </Col>\n                    );\n\n                  case \"Document\":\n                    return (\n                      <Col span={col_span} key={(Math.random() + 1).toString(36).substring(2)}>\n                        <div className=\"doc-upload\">\n                          <input\n                            id=\"file-input\"\n                            type=\"file\"\n                          // style={{ width: \"100%\" }}\n                          // onChange={(date, dateString) => this.handleDatePickerChange(field.name, date, dateString, text, record)}\n                          // value={typeof record[field.name] == 'undefined' || record[field.name] == '' || record[field.name] == null ? null : moment(record[field.name], dateFormat)}\n                          />\n                          <label for=\"file-input\">\n                            <Icon\n                              className=\"mt-2 ml-2\"\n                              style={{ fontSize: \"23px\" }}\n                              type=\"upload\"\n                            ></Icon>\n                          </label>\n                        </div>\n                      </Col>\n                    );\n\n                  case \"Video\":\n                    return (\n                      <React.Fragment key={(Math.random() + 1).toString(36).substring(2)}>\n                        {this.state.show_model === field.name ? (\n                          <Modal\n                            closable={false}\n                            width=\"53vw\"\n                            centered\n                            visible={true}\n                            title={\"Record Video\"}\n                            footer={false}\n                          >\n                            <WebcamStreamCapture\n                              onCancel={this.closeModal}\n                            ></WebcamStreamCapture>\n                          </Modal>\n                        ) : (\n                          \"\"\n                        )}\n                        <Col\n                          span={col_span}\n                          key={index}\n                          style={{\n                            flexDirection: \"column\",\n                          }}\n                        >\n                          <Button\n                            style={{\n                              // width: \"100%\",\n                              marginBottom: \"5px\",\n                            }}\n                            name={field.name}\n                            onClick={(e) => {\n                              this.setState({ show_model: e.target.name });\n                            }}\n                          >\n                            <Icon\n                              style={{ fontSize: \"23px\" }}\n                              type=\"camera\"\n                            ></Icon>\n                            {field.title}\n                          </Button>\n                        </Col>\n                      </React.Fragment>\n                    );\n                }\n              })}\n            </Row>\n          );\n        },\n      };\n\n      cols.push(newCol);\n    });\n\n    // for (var cindex = 0; cindex < colsFormat.length; cindex++) {\n    //   let colFormat = colsFormat[cindex];\n\n    //   var newCol = {\n    //     title: colFormat[\"title\"],\n    //     dataIndex: colFormat[\"dataIndex\"],\n    //     key: colFormat[\"key\"],\n    //     render: (text, record) => {\n    //       var col_span = parseInt(24 / colFormat[\"fields\"].length);\n    //       return (\n    //         <Row gutter={8}>\n    //           {colFormat[\"fields\"].map((field, index) => {\n    //             if (field.type == \"Input\") {\n    //               return (\n    //                 <Col span={col_span} key={index}>\n    //                   <Input\n    //                     style={\n    //                       this.props.customWidth ? { width: customWidth } : null\n    //                     }\n    //                     placeholder={field.placeholder}\n    //                     disabled={field.disabled}\n    //                     name={field.name}\n    //                     value={record[field.name]}\n    //                     onChange={(event) =>\n    //                       this.handleInputChange(event, text, record)\n    //                     }\n    //                   />\n    //                 </Col>\n    //               );\n    //             } else if (field.type == \"Percent\") {\n    //               return (\n    //                 <Col span={col_span} key={index}>\n    //                   <Percent\n    //                     placeholder={field.placeholder}\n    //                     disabled={field.disabled}\n    //                     name={field.name}\n    //                     value={record[field.name]}\n    //                     onChange={(event) =>\n    //                       this.handleInputChange(event, text, record)\n    //                     }\n    //                   />\n    //                 </Col>\n    //               );\n    //             } else if (field.type == \"PhoneNumber\") {\n    //               return (\n    //                 <Col span={col_span} key={index}>\n    //                   <PhoneNumber\n    //                     placeholder={field.placeholder}\n    //                     disabled={field.disabled}\n    //                     name={field.name}\n    //                     value={record[field.name]}\n    //                     onChange={(event) =>\n    //                       this.regeNumber(event, text, record)\n    //                     }\n    //                   />\n    //                 </Col>\n    //               );\n    //             } else if (field.type == \"WebAddress\") {\n    //               return (\n    //                 <Col span={col_span} key={index}>\n    //                   <WebAddress\n    //                     placeholder={field.placeholder}\n    //                     disabled={field.disabled}\n    //                     name={field.name}\n    //                     value={record[field.name]}\n    //                     onChange={(event) =>\n    //                       this.handleInputChange(event, text, record)\n    //                     }\n    //                   />\n    //                 </Col>\n    //               );\n    //             } else if (field.type == \"Email\") {\n    //               return (\n    //                 <Col span={col_span} key={index}>\n    //                   <Email\n    //                     placeholder={field.placeholder}\n    //                     disabled={field.disabled}\n    //                     name={field.name}\n    //                     value={record[field.name]}\n    //                     onChange={(event) =>\n    //                       this.handleInputChange(event, text, record)\n    //                     }\n    //                   />\n    //                 </Col>\n    //               );\n    //             } else if (field.type == \"Currency\") {\n    //               return (\n    //                 <Col span={col_span} key={index}>\n    //                   <Currency\n    //                     style={\n    //                       this.props.customWidth ? { width: customWidth } : null\n    //                     }\n    //                     placeholder={field.placeholder}\n    //                     disabled={field.disabled}\n    //                     name={field.name}\n    //                     value={\n    //                       typeof record[field.name] == \"undefined\"\n    //                         ? \"\"\n    //                         : record[field.name]\n    //                     }\n    //                     onChange={(event) =>\n    //                       this.handleInputChange(event, text, record)\n    //                     }\n    //                   />\n    //                 </Col>\n    //               );\n    //             } else if (field.type == \"TextArea\") {\n    //               return (\n    //                 <Col span={col_span} key={index}>\n    //                   <TextArea\n    //                     placeholder={field.placeholder}\n    //                     disabled={field.disabled}\n    //                     name={field.name}\n    //                     value={record[field.name]}\n    //                     onChange={(event) =>\n    //                       this.handleInputChange(event, text, record)\n    //                     }\n    //                   />\n    //                 </Col>\n    //               );\n    //             } else if (field.type == \"Checkbox\") {\n    //               return (\n    //                 <Col span={col_span} key={index}>\n    //                   <Checkbox\n    //                     placeholder={field.placeholder}\n    //                     disabled={field.disabled}\n    //                     name={field.name}\n    //                     value={record[field.name]}\n    //                   />\n    //                 </Col>\n    //               );\n    //             } else if (field.type == \"Select\") {\n    //               return (\n    //                 <Col span={col_span} key={index}>\n    //                   <Select\n    //                     showSearch\n    //                     style={\n    //                       this.props.customWidth ? { width: customWidth } : null\n    //                     }\n    //                     placeholder={field.placeholder}\n    //                     onChange={(value) =>\n    //                       this.handleSelectChange(\n    //                         field.name,\n    //                         value,\n    //                         text,\n    //                         record\n    //                       )\n    //                     }\n    //                     disabled={field.disabled}\n    //                     value={record[field.name]}\n    //                   >\n    //                     {field.values.map((value, vindex) => (\n    //                       <Option key={vindex} value={value}>\n    //                         {value}\n    //                       </Option>\n    //                     ))}\n    //                   </Select>\n    //                 </Col>\n    //               );\n    //             } else if (field.type == \"Radio\") {\n    //               return (\n    //                 <Col span={col_span} key={index}>\n    //                   <Radio.Group\n    //                     onChange={(value) =>\n    //                       this.handleSelectChange(field.name, value)\n    //                     }\n    //                     disabled={field.disabled}\n    //                     value={record[field.name]}\n    //                   >\n    //                     {field.values.map((value, vindex) => (\n    //                       <Radio key={vindex} value={value}>\n    //                         {value}\n    //                       </Radio>\n    //                     ))}\n    //                   </Radio.Group>\n    //                 </Col>\n    //               );\n    //             } else if (field.type == \"DatePicker\") {\n    //               return (\n    //                 <Col span={col_span} key={index}>\n    //                   <DatePicker\n    //                     style={\n    //                       this.props.customWidth\n    //                         ? { width: customWidth }\n    //                         : { width: \"100%\" }\n    //                     }\n    //                     format={dateFormat}\n    //                     onChange={(date, dateString) =>\n    //                       this.handleDatePickerChange(\n    //                         field.name,\n    //                         date,\n    //                         dateString,\n    //                         text,\n    //                         record\n    //                       )\n    //                     }\n    //                     disabled={field.disabled}\n    //                     value={\n    //                       typeof record[field.name] == \"undefined\" ||\n    //                       record[field.name] == \"\" ||\n    //                       record[field.name] == null\n    //                         ? null\n    //                         : moment(record[field.name], dateFormat)\n    //                     }\n    //                   />\n    //                 </Col>\n    //               );\n    //             }\n    //           })}\n    //         </Row>\n    //       );\n    //     },\n    //   };\n    //   cols.push(newCol);\n    // }\n\n    cols.push({\n      title: \"\",\n      dataIndex: \"uuid\",\n      key: \"uuid\",\n      render: (uuid, record) => (\n        <Button\n          type=\"link\"\n          style={{ fontSize: \"21px\" }}\n          icon=\"edit\"\n          onClick={() => this.updateRow(uuid, record)}\n        ></Button>\n      ),\n    });\n\n    cols.push({\n      title: \"\",\n      dataIndex: \"uuid\",\n      key: \"uuid\",\n      render: (uuid, record) => (\n        <Button\n          type=\"link\"\n          style={{ fontSize: \"21px\" }}\n          icon=\"delete\"\n          // onClick={() => this.deleteRow(uuid, record)}\n          onClick={() => {\n            this.setState({\n              delete_modal: true,\n              currentUuid: uuid,\n              currentRecord: record,\n            });\n          }}\n        ></Button>\n      ),\n    });\n\n    return cols;\n  }\n\n  updateRow(uuid, key, value) {\n    // alert(\"in update\")\n    let rows = this.state.rows;\n    for (var rindex = 0; rindex < rows.length; rindex++) {\n      if (rows[rindex].uuid == uuid) {\n        rows[rindex][key] = value;\n        break;\n      }\n    }\n\n    this.setState({\n      rows: rows,\n    });\n\n    this.props.cbFormChange(rows);\n  }\n\n  handleFormInputChange(uuid, name, value) {\n    this.updateRow(uuid, name, value);\n  }\n\n  closeModal = () => {\n    this.setState({ show_model: null });\n  };\n\n  handleInputChange(event, text, record) {\n    event.preventDefault();\n    const { name, value } = event.target;\n\n    this.handleFormInputChange(record.uuid, name, value);\n  }\n  regeNumber(event, text, record) {\n    event.preventDefault();\n    const { name, value } = event.target;\n    const re = /^[0-9\\b]+$/;\n    if (event.target.value === \"\" || re.test(event.target.value)) {\n      this.handleFormInputChange(record.uuid, name, value);\n    }\n  }\n  handleDatePickerChange(name, date, dateString, text, record) {\n    this.handleFormInputChange(record.uuid, name, dateString);\n  }\n\n  handleSelectChange(name, value, text, record) {\n    this.handleFormInputChange(record.uuid, name, value);\n  }\n\n  deleteRow(uuid, record) {\n    let rows = this.state.rows;\n    for (var rindex = 0; rindex < rows.length; rindex++) {\n      if (rows[rindex].uuid == uuid) {\n        rows.splice(rindex, 1);\n        break;\n      }\n    }\n\n    this.setState({\n      rows: rows,\n      currentUuid: null,\n      currentRecord: null,\n      delete_modal: false,\n    });\n\n    this.props.cbFormChange(rows);\n  }\n\n  addNewRow() {\n    let rows = this.state.rows;\n\n    rows.push({\n      uuid: uuidv1(),\n      key: uuidv1(),\n    });\n\n    this.setState({\n      rows: rows,\n    });\n  }\n\n\n  render() {\n    //generate cols based on cols format\n    // if(this.props.colsFormat){\n    //     let cols = this.generateCols(this.props.colsFormat);\n    // }\n    console.log(\"rows count\", this.state.rows);\n    const { addNewButton, image } = this.props;\n    return (\n      <div>\n        {this.deleteModal()}\n        <div className=\"subform-parent\">\n          <h2 className=\"text-center font-weight-bold mb-4\">\n            {image ? (\n              <img\n                src={image}\n                height={85}\n                width={85}\n                style={{ marginRight: \"10px\" }}\n              ></img>\n            ) : null}\n            {this.props.title}\n          </h2>\n          <div className=\"subform-desc text-center\">\n            {this.props.description}\n          </div>\n          <div style={{ width: this.state.rows.length > 0 ? this.props.tableWidth : \"100%\" }}>\n            <Table\n              pagination={false}\n              dataSource={this.state.rows}\n              columns={this.state.cols}\n              scroll={{ x: this.props.scroll }}\n              locale={{ emptyText: \"There is no data\" }}\n            />\n          </div>\n        </div>\n        {addNewButton && (\n          <div style={{ textAlign: \"center\" }}>\n            <Button type=\"link\" onClick={this.addNewRow}>\n              Add New\n            </Button>\n          </div>\n        )}\n        {this.props.addNewButtonben && (\n          <div style={{ marginBottom: \"30px\", textAlign: \"center\" }}>\n            <Button type=\"link\" onClick={this.addNewRow}>\n              Add Another Beneficiary\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect()(SubFormTable);\n"],"mappings":"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AAA;kBAAA,gBAEFrD,KAAA,CAAAoC,aAAA,CAACvB,IAAI;oBACHgC,KAAK,EAAE;sBAAEsB,QAAQ,EAAE;oBAAO,CAAE;oBAC5BN,IAAI,EAAC,QAAQ;oBAAAd,MAAA,EAAA0C,MAAA;oBAAAxC,QAAA;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA;kBAAA,CACR,CAAC,EACPqD,KAAK,CAAC/D,KACD,CACL,CACS,CAAC;cAEvB;YACF,CAAC,CACE,CAAC;UAEV;QACF,CAAC;QAED4B,IAAI,CAAC2D,IAAI,CAAChC,MAAM,CAAC;MACnB,CAAC,CAAC;;MAEF;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAC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"},"metadata":{},"sourceType":"module"}